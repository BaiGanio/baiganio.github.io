{"version":3,"sources":["webpack:///src/app/@modules/teachers/component/teacher-preview/teacher-preview.component.ts","webpack:///src/app/@modules/teachers/component/teacher-preview/teacher-preview.component.html","webpack:///src/app/@modules/teachers/component/vote-for-teacher/vote-for-teacher.component.ts","webpack:///src/app/@modules/teachers/component/vote-for-teacher/vote-for-teacher.component.html","webpack:///src/app/@modules/teachers/teachers.component.html","webpack:///src/app/@modules/teachers/teachers.component.ts","webpack:///src/app/@modules/teachers/models/teacher-preview.model.ts","webpack:///src/app/@modules/teachers/teachers-routing-module.module.ts","webpack:///src/app/@modules/teachers/views/teacher-details/teacher-details.component.ts","webpack:///src/app/@modules/teachers/views/teacher-details/teacher-details.component.html","webpack:///src/app/@modules/teachers/teachers.module.ts"],"names":["TeacherPreviewComponent","dialogRef","data","formBuilder","this","teacher","model","close","VoteForTeacherComponent","teacherService","errorHandlerService","teachers","Array","loading","totalTeachers","vote","TeachersComponent","dialog","router","authService","userService","successfulUpdate","successfulUpdateMessage","isLogged","isAuthenticated","getTeachers","getUserByToken","subscribe","response","user","console","log","error","teacherId","navigate","output","starredTeachers","forEach","element","Id","open","width","maxHeight","afterClosed","teacherName","Name","$dialogRef","TeacherName","tryVoteForTeacher","voteForTeacher","TeacherId","err","handleRequestError","body","push","id","Email","email","Image","image","name","UserId","user_id","AccrNumber","accr_number","Status","status","CreatedOn","created_on","ModifiedOn","modified_on","Courses","courses","Stars","stars","length","TeacherPreviewModel","userId","accrNumber","createdOn","modifiedOn","routes","path","children","component","TeacherDetailsComponent","activatedRoute","getTeacherById","snapshot","params","TeachersRoutingModule","forChild","TeachersModule","forRoot","animationType","threeBounce","primaryColour","secondaryColour","backdropBorderRadius","fullScreenBackdrop"],"mappings":"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","file":"x","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseDialogData } from 'src/app/@shared/interfaces/base-dialog.interface';\nimport { TeacherPreviewModel } from '../../models/teacher-preview.model';\n\n\n@Component({\n  selector: 'app-teacher-preview',\n  templateUrl: './teacher-preview.component.html',\n  styleUrls: ['./teacher-preview.component.scss']\n})\nexport class TeacherPreviewComponent implements OnInit {\nteacher: TeacherPreviewModel;\n  constructor(\n    public dialogRef: MatDialogRef<TeacherPreviewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: BaseDialogData,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.teacher = this.data.model;\n  }\n\n  onRejectClick() {\n    this.dialogRef.close();\n  }\n\n}","<div class=\"col-md-12 col-center text-center\">\n    <div class=\"card\">\n        <br/>\n        <h2> {{teacher.Name}} </h2>\n        <div class=\"card-body row\">\n            <div class=\"card col-md-3\">\n                <div class=\"card-body\">\n                    <img src='{{ teacher.Image }}' class=\"img-thumbnail img-fluid\" alt=\"Sample image\">\n                    <div style=\"text-align: center;\">\n                        <br/>\n                        <p id=\"statusHolder\">Status: <span>{{teacher.Status}}</span></p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card col-md-6\">\n                <div class=\"card-body\">\n                    <h4 style=\"text-align: center;\">ID : {{teacher.Id}} </h4>\n                    <hr/>\n                    <div style=\"text-align: left\">\n                        <h5><b>Email :</b> {{teacher.Email}} </h5>\n                        <h5><b>UserId :</b> {{teacher.UserId}} </h5>\n                        <h5><b>AccrNumber :</b> {{teacher.AccrNumber}} </h5>\n                        <h5><b>Created on :</b> {{teacher.CreatedOn | date: 'dd-MMM-yy'}} </h5>\n                    </div> \n                </div>\n            </div>\n            <div class=\"card col-md-3\">\n                <div class=\"card-body\">\n                    <h4>Lead Courses</h4> \n                    <hr/>\n                    <div class=\"course\">\n                        <p>Course Name</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <p><b>Last updated on :</b> {{teacher.ModifiedOn | date: 'dd-MMM-yy' }}</p>\n    </div>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BaseDialogData } from 'src/app/@shared/interfaces/base-dialog.interface';\nimport { TeacherPreviewModel } from '../../models/teacher-preview.model';\nimport { TeacherService } from 'src/app/@services/teacher.service';\nimport { ErrorHandlerService } from 'src/app/@services/error-handler.service';\n\n@Component({\n  selector: 'app-vote-for-teacher',\n  templateUrl: './vote-for-teacher.component.html',\n  styleUrls: ['./vote-for-teacher.component.scss']\n})\nexport class VoteForTeacherComponent implements OnInit {\n  teachers = new Array<TeacherPreviewModel>();\n  loading = false;\n  totalTeachers = 0;\n\n  constructor(\n    public dialogRef: MatDialogRef<VoteForTeacherComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: BaseDialogData,\n    private teacherService: TeacherService,\n    private errorHandlerService: ErrorHandlerService,\n  ) { }\n\n  ngOnInit() {\n    this.loading = true;\n  }\n\n  dismiss() {\n    this.dialogRef.close();\n  }\n\n  vote() {\n    this.dialogRef.close(true);\n  }\n\n}","<div class=\"text-center\">\n    <mat-card-content>\n    <div class=\"\">\n        <h4>If you like this teacher - hit the star below.</h4>\n        <hr/>\n        <h5>Reward </h5>\n        <h5>{{data.model.TeacherName}}</h5>\n        <h5> with <span>&#11088;</span></h5>\n        <br/>\n        <p>Vote is anonymous!</p>\n        <hr/>\n        <div class=\"text-center\">\n            <!-- <button id=\"close\" class=\"mr-2\" mat-raised-button color=\"primary\" (click) = \"dismiss()\">\n               <span>&times;</span>\n            </button>  -->\n            <button  class=\"mr-2\" mat-raised-button color=\"primary\" (click) = \"vote()\" >\n                <div class=\"rating\">\n                    <span>☆</span>\n                </div>\n            </button>\n        </div>\n    </div>\n</mat-card-content>\n</div>","<div class=\"text-center\">\n    <h3>Teachers</h3>\n    <p>Total Of: {{totalTeachers}}</p>\n    <hr>\n</div>\n\n<div class=\"row\">\n      <div class=\"dim\" *ngIf='successfulUpdate'>\n    <div class=\"msg\">\n      <h1>{{successfulUpdateMessage}}</h1>\n      <br><br>\n      <button\n        class=\"btn btn-outline-info\"\n        (click) = dismiss()>\n        Dismiss\n      </button>\n    </div>\n\n  </div>\n    <div *ngFor='let teacher of teachers' class=\"col-md-3 text-center\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <img \n                    src='{{teacher.Image}}' \n                    class=\"img-thumbnail img-fluid\" \n                    alt=\"Sample image\">\n                    <br><br>\n                <h5>{{ teacher.Name }}</h5>                \n                <!-- <p>Status: {{ teacher.Status }}</p> -->\n                <hr>  \n                <div style=\"font-size: 1.2em;\">\n                    <span>&#11088;</span> {{teacher.Stars}}\n                </div>\n                <hr>\n                <button mat-raised-button color='primary' class=\"text-center ml-2\"\n                    (click)=\"showTeacher(teacher.Id)\" ><i class=\"fas fa-search\"></i>\n                </button>\n                <button *ngIf='isLogged && !notVotedYet(teacher.Id)' mat-raised-button class=\"text-center ml-2\"\n                    (click)=\"voteForTeacher(teacher.Id)\"> Vote\n                </button>\n            </div>    \n        </div>  \n    </div>\n</div>\n\n<ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: true }\"></ngx-loading>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrorHandlerService } from 'src/app/@services/error-handler.service';\nimport { TeacherService } from 'src/app/@services/teacher.service';\nimport { TeacherPreviewModel } from './models/teacher-preview.model';\nimport { Router } from '@angular/router';\nimport { CoursePreviewModel } from '../courses/models/course-preview-model.module';\nimport { TeacherPreviewComponent } from './component/teacher-preview/teacher-preview.component';\nimport { VoteForTeacherComponent } from './component/vote-for-teacher/vote-for-teacher.component';\nimport { AuthService } from 'src/app/@services/auth.service';\nimport { UserDataService } from 'src/app/@services/user-data.service';\n\n@Component({\n  selector: 'app-teachers',\n  templateUrl: './teachers.component.html',\n  styleUrls: ['./teachers.component.scss']\n})\nexport class TeachersComponent implements OnInit {\n  loading = false;\n  totalTeachers = 0;\n  teachers = new Array<TeacherPreviewModel>();\n  successfulUpdate = false;\n  successfulUpdateMessage = '';\n  isLogged = false;\n  user: any;\n\n  constructor(\n    private dialog: MatDialog,\n    private errorHandlerService: ErrorHandlerService,\n    private router: Router,\n    private teacherService: TeacherService,\n    private authService: AuthService,\n    private userService: UserDataService) { }\n\n  ngOnInit() {\n    this.isLogged = this.authService.isAuthenticated();\n    this.loading = true;\n    this.getTeachers();\n    this.getUserByToken();\n  }\n\n  getUserByToken() {\n    this.userService.getUserByToken()\n      .subscribe(\n          response => {\n              this.user = response;\n              console.log(this.user);\n          },\n          error => {\n              console.log(error);\n          }\n      );\n  }\n\n  goToTeacher(teacherId: string) {\n    this.router.navigate(['/teachers/' + teacherId]);\n  }\n\n  notVotedYet(teacherId: string){\n    let output = true;\n    this.user.starredTeachers.forEach(element => {\n      if(element.Id === teacherId ){\n        output = false;\n      }\n    });\n\n    return output;\n  }\n\n  showTeacher(teacherId: string) {\n    let teacher: TeacherPreviewModel;\n    this.teachers.forEach( (element) => {\n        if (element.Id === teacherId) {\n          teacher = element;\n          return;  \n        }\n    });\n    const $dialogRef =\n        this.dialog.open(\n            TeacherPreviewComponent,\n            {\n              width: '80vw',\n              maxHeight: '100vh',\n              data: { model: teacher }\n            }\n        );\n    $dialogRef.afterClosed().subscribe();\n  }\n\n  voteForTeacher(teacherId: string){\n    this.loading = true;\n    let teacherName = \"\";\n    this.teachers.forEach(element => {\n      if(element.Id === teacherId){\n        teacherName = element.Name;\n        return;\n      }\n    });\n    const $dialogRef =\n      this.dialog.open(\n        VoteForTeacherComponent, \n          {\n           data:{\n              width: '80vw',\n              maxHeight: '100vh',\n              model: {\n                TeacherName: teacherName\n            }\n            }\n          }\n      );\n    this.tryVoteForTeacher($dialogRef, teacherId);\n    this.loading = false;\n  }\n\n  private tryVoteForTeacher($dialogRef, teacherId: string) {\n    $dialogRef.afterClosed()\n      .subscribe(\n        response => {\n          if(response === true){\n            this.teacherService.voteForTeacher(\n              {TeacherId : teacherId}\n            )\n            .subscribe(\n              () => {\n                let teacherName = \"\";\n                  this.teachers.forEach(element => {\n                    if(element.Id === teacherId){\n                      teacherName = element.Name;\n                      return;\n                    }\n                    \n                  });\n                this.loading = false;\n                this.successfulUpdate = true;\n                this.successfulUpdateMessage = `You have successfully starred ⭐ for ${teacherName}!`;\n              }, \n              err => {\n                this.loading = false;\n                this.errorHandlerService.handleRequestError(err);\n              }\n            );\n          }\n        }\n      );\n  }\n\n  getTeachers() {\n    this.loading = true;\n    this.teacherService.getTeachers()\n      .subscribe(\n        response => {\n          response.body.forEach(element => {\n            const c = {\n              Id: element.id || '',\n              Email: element.email,\n              Image: element.image || '',\n              Name: element.name || '',\n              UserId: element.user_id || '',\n              AccrNumber: element.accr_number,\n              Status: element.status || '',\n              CreatedOn: element.created_on || '',\n              ModifiedOn: element.modified_on || '',\n              Courses: element.courses as Array<CoursePreviewModel> || '',\n              Stars: element.stars || 0\n            };\n            this.teachers.push(c as TeacherPreviewModel);\n          });\n        }, err => {\n          this.errorHandlerService.handleRequestError(err);\n        }, () => {\n          this.totalTeachers = this.teachers.length;\n          this.loading = false;\n        }\n      );\n  }\n\n  dismiss() {\n    this.successfulUpdate = false;\n  }\n}\n","import { CoursePreviewModel } from '../../courses/models/course-preview-model.module';\n\nexport class TeacherPreviewModel {\n    Id: string;\n    Email: string;\n    Image: string;\n    Name: string;\n    UserId: string;\n    AccrNumber: string;\n    Status: string;\n    CreatedOn: Date;\n    ModifiedOn: Date;\n    Courses: Array<CoursePreviewModel>;\n    Stars: number;\n\n    constructor(\n        id?: string, email?: string, image?: string,\n        name?: string, userId?: string, accrNumber?: string, status?: string,\n        createdOn?: Date, modifiedOn?: Date, courses?: Array<CoursePreviewModel>,\n        stars?: number\n    ) {\n        this.Id = id;\n        this.Email = email;\n        this.Image = image;\n        this.Name = name;\n        this.UserId = userId;\n        this.AccrNumber = accrNumber;\n        this.Status = status;\n        this.CreatedOn = createdOn;\n        this.ModifiedOn = modifiedOn;\n        this.Courses = courses;\n        this.Stars = stars;\n\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TeachersComponent } from './teachers.component';\nimport { TeacherDetailsComponent } from './views/teacher-details/teacher-details.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', component: TeachersComponent },\n      { path: ':id', component: TeacherDetailsComponent}\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n  declarations: []\n})\nexport class TeachersRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TeacherService } from 'src/app/@services/teacher.service';\nimport { TeacherPreviewModel } from '../../models/teacher-preview.model';\nimport { ErrorHandlerService } from 'src/app/@services/error-handler.service';\n\n@Component({\n    selector: 'app-teacher-details',\n    templateUrl: './teacher-details.component.html'\n})\nexport class TeacherDetailsComponent implements OnInit {\n    loading = false;\n    teacher: TeacherPreviewModel;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private errorHandlerService: ErrorHandlerService,\n        private teacherService: TeacherService\n    ) {}\n\n    ngOnInit() {\n        this.loading = true;\n        this.teacherService.getTeacherById(this.activatedRoute.snapshot.params.id)\n        .subscribe(\n            response => {\n                this.teacher =\n                    new TeacherPreviewModel(\n                        response.body.id,\n                        // response.body.full_name,\n                        // response.body.status\n                    );\n            }, error => {\n                this.errorHandlerService.handleRequestError(error);\n                this.loading = false;\n            },\n            () => { this.loading = false; }\n        );\n    }\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 text-center\">\n        <h4>Name: {{ teacher?.Name }}</h4>\n        <h4>Accreditation Number: {{ teacher?.Id }}</h4>\n        <h4>Teacher Status: {{ teacher?.Status }}</h4>\n    </div>\n    <div class=\"col-md-6\">\n        <img src=\"../../../../../assets/images/no-image-found.jpg\" alt=\"Sample image\">\n    </div>\n\n    <button  \n        type=\"button\"                        \n        class=\"btn btn-outline-info ml-3\" \n        routerLink='/teachers'>\n        Back To Teachers\n    </button>  \n</div>\n\n<ngx-loading [show]=\"loading\"></ngx-loading>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TeachersRoutingModule } from './teachers-routing-module.module';\nimport { AngularMaterialModule } from 'src/app/@core/angular-material.module';\nimport { TeachersComponent } from './teachers.component';\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { TeacherDetailsComponent } from './views/teacher-details/teacher-details.component';\nimport { EditCourseComponent } from '../courses/components/edit-course/edit-course.component';\nimport { DeleteCourseComponent } from '../courses/components/delete-course/delete-course.component';\nimport { CreateCourseComponent } from '../courses/components/create-course/create-course.component';\nimport { TeacherPreviewComponent } from './component/teacher-preview/teacher-preview.component';\nimport { VoteForTeacherComponent } from './component/vote-for-teacher/vote-for-teacher.component';\n\n@NgModule({\n  declarations: [\n    TeachersComponent,\n    TeacherDetailsComponent,\n    CreateCourseComponent,\n    EditCourseComponent,\n    DeleteCourseComponent,\n    TeacherPreviewComponent,\n    VoteForTeacherComponent\n  ],\n  entryComponents: [\n    CreateCourseComponent,\n    EditCourseComponent,\n    DeleteCourseComponent,\n    TeacherPreviewComponent,\n    VoteForTeacherComponent\n  ],\n  imports: [\n    CommonModule,\n    TeachersRoutingModule,\n    AngularMaterialModule,\n    ReactiveFormsModule,\n    NgxLoadingModule.forRoot({\n      animationType: ngxLoadingAnimationTypes.threeBounce,\n      primaryColour: '#88078e',\n      secondaryColour: '#c6ef23',\n      backdropBorderRadius: '14px',\n      fullScreenBackdrop: true\n    }),\n  ],\n})\nexport class TeachersModule { }\n"]}