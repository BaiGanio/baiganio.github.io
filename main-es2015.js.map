{"version":3,"sources":["./src/app/@shared/components/charts/polararea/polararea.component.ts","./src/app/@shared/components/charts/polararea/polararea.component.html","./src/app/@modules/courses/components/course-preview/course-preview.component.ts","./src/app/@modules/courses/components/course-preview/course-preview.component.html","./src/app/@core/role.guard.ts","./src/app/@shared/pages/privacy/privacy.component.ts","./src/app/@services/roslyn.service.ts","./src/app/@shared/components/navbar/navbar.component.ts","./src/app/@shared/components/navbar/navbar.component.html","./src/app/@shared/components/charts/linechart/linechart.component.ts","./src/app/@shared/components/charts/linechart/linechart.component.html","./src/app/@services/error-handler.service.ts","./src/app/@modules/courses/pages/course-details/course-details.component.ts","./src/app/@modules/courses/pages/course-details/course-details.component.html","./src/environments/environment.ts","./src/app/@modules/courses/pages/my-courses/my-courses.component.ts","./src/app/@modules/courses/pages/my-courses/my-courses.component.html","./src/app/@services/subscription.service.ts","./src/app/@services/utility.service.ts","./src/app/@modules/courses/components/score/score.component.ts","./src/app/@modules/courses/components/score/score.component.html","./src/app/@pages/home/home.component.ts","./src/app/@services/backend.service.ts","./src/app/@modules/users/models/user-view-model.module.ts","./src/app/@pages/blog/blog.component.ts","./src/app/@pages/blog/blog.component.html","./src/app/@modules/courses/courses.module.ts","./src/app/@core/module-import.guard.ts","./src/app/@services/auth.service.ts","./src/app/@shared/pages/access-denied/access-denied.component.ts","./src/app/@services/user-data.service.ts","./src/app/@shared/models/error-model.module.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/@pages/register/register.component.ts","./src/app/@services/event-bus.service.ts","./src/app/app.component.ts","./src/app/@pages/login/login.component.ts","./src/app/@modules/courses/courses.component.ts","./src/app/@modules/courses/courses.component.html","./src/app/@core/core.module.ts","./src/app/@services/account.service.ts","./src/app/@shared/pages/error/error.component.ts","./src/app/@services/signalR.service.ts","./src/app/app.module.ts","./src/app/@modules/subscriptions/subscriptions.module.ts","./src/app/@core/auth.guard.ts","./src/app/@modules/subscriptions/subscriptions-routing.module.ts","./src/app/@modules/courses/components/in-class/in-class.component.ts","./src/app/@modules/courses/components/in-class/in-class.component.html","./src/app/@shared/components/charts/piechart/piechart.component.ts","./src/app/@shared/components/charts/piechart/piechart.component.html","./src/app/@modules/courses/courses-routing.module.ts","./src/app/@services/courses.service.ts","./src/app/@modules/courses/models/course-preview-model.module.ts","./src/app/@shared/components/footer/footer.component.ts","./src/app/@shared/components/footer/footer.component.html","./src/app/@shared/pages/not-found/not-found.component.ts","./src/app/@modules/subscriptions/subscriptions.component.ts","./src/app/@modules/subscriptions/subscriptions.component.html","./src/app/@modules/subscriptions/models/subscription-preview-model.module.ts","./src/app/@shared/pages/terms/terms.component.ts","./src/app/@shared/pages/terms/terms.component.html","./src/app/@shared/components/charts/doughnut/doughnut.component.ts","./src/app/@shared/components/charts/doughnut/doughnut.component.html","./src/app/@shared/interfaces/checklist-database.module.ts","./src/app/@services/student.service.ts","./src/app/app-routing.module.ts","./src/app/@services/teacher.service.ts","./src/app/@core/angular-material.module.ts","./src/app/@shared/pages/server-alert/server-alert.component.ts","./src/app/@shared/components/charts/barchart/barchart.component.ts","./src/app/@shared/components/charts/barchart/barchart.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-polararea',\n  templateUrl: './polararea.component.html'\n})\nexport class PolarareaComponent implements OnInit {\n  url = 'https://localhost:44344/api/fake/Chart/';\n  data: any;\n  Player = [];\n  Run = [];\n  polarareachart: any;\n    constructor(private httpClient: HttpClient) { }\n\n    ngOnInit() {\n      this.httpClient.get(this.url).subscribe((result: any) => {\n        result.forEach(x => {\n          this.Player.push(x.playerName);\n          this.Run.push(x.run);\n        });\n        this.polarareachart = new Chart('canvas', {\n          type: 'polarArea',\n          data: {\n            labels: this.Player,\n\n            datasets: [\n              {\n                data: this.Run,\n                borderColor: '#3cb371',\n                backgroundColor: [\n                  '#3cb371',\n                  '#0000FF',\n                  '#9966FF',\n                  '#4C4CFF',\n                  '#00FFFF',\n                  '#f990a7',\n                  '#aad2ed',\n                  '#FF00FF',\n                  'Blue',\n                  'Red',\n                  'Blue'\n                ],\n              }\n            ],\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                display: false\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n      });\n    }\n  }\n","<br><br>\n<div class=\"chart-container\" \n  style=\"position: relative; width:50vw\">    \n  <canvas id=\"canvas\"></canvas>    \n</div> ","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseDialogData } from 'src/app/@shared/interfaces/base-dialog.interface';\nimport { CoursePreviewModel } from '../../models/course-preview-model.module';\n\n@Component({\n  selector: 'app-course-preview',\n  templateUrl: './course-preview.component.html',\n  styleUrls: ['./course-preview.component.scss']\n})\nexport class CoursePreviewComponent implements OnInit {\n  course: CoursePreviewModel;\n  constructor(\n    public dialogRef: MatDialogRef<CoursePreviewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: BaseDialogData,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.course = this.data.model;\n    console.log(this.course);\n  }\n\n  onRejectClick() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"col-md-12 col-center text-center\">\n    <div class=\"card\">\n      <br/>\n      <h1>{{ course.Name }}</h1>\n      <div class=\"card-body row\">\n        <div class=\"card col-md-3\">\n          <div class=\"card-body\">\n            <img src='{{ course.Image }}' class=\"img-thumbnail img-fluid\" alt=\"Sample image\">\n            <hr>\n            <h5>\n              Enrolled so far :\n              <span class=\"badge badge-primary\"> {{course.EnrolledStudents || 0}}</span>\n            </h5>\n            <hr/>\n            <!-- <p><b>Start @ </b> {{course.StartDate | date: 'dd-MMM-yy' }}\n              <br>\n              <b>End @ </b> {{course.EndDate | date: 'dd-MMM-yy' }}</p> -->\n           \n            <!-- <div style=\"text-align: center;\">\n                <br/>\n                <p id=\"statusHolder\">Active: <span>{{course.IsActive}}</span></p>\n                <p id=\"statusHolder\">Is Electable: <span>{{course.IsElectable}}</span></p>               \n                <hr/>\n                <p><b>Last updated on :</b> {{course.ModifiedOn | date: 'dd-MMM-yy' }}</p>\n            </div> -->\n          </div>\n        </div>\n        <div class=\"card col-md-9\">\n          <div class=\"card-body\">\n            <!-- <h4 style=\"text-align:left;\">Quick info :</h4>\n              <hr/> -->\n              <h5 style=\"text-align:left;\" [innerHTML]=\"course.Description\"></h5>\n             \n          </div>\n        </div>\n        <!-- <div class=\"card col-md-3\">\n          <div class=\"card-body\">\n            <h5 style=\"text-align: center;\">Lead Teachers</h5>\n            <hr/>\n              <div class=\"row\">\n                  <div class=\"col-md-3\" id=\"roundImg\"> \n                      <img src='/assets/images/no-profile-img.png' class=\"img-thumbnail img-fluid\" alt=\"Sample image\" style=\"border-radius: 50%;\">\n                    </div>\n                    <div class=\"col-md-9\"> \n                        <p >Lyuben Kikov</p>\n                      </div>\n                      <br/>\n              </div>\n          </div>\n        </div> -->\n        <div class=\"col-12 col-center text-center\">\n            <hr/>\n            <p>\n              * You need to have confirmed Student subscription if you want to enroll for the course.\n              <!-- <br>\n              * Course is electable one month before start date. -->\n            </p>\n          </div>\n      </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { AuthService } from '../@services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  roles: any;\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate(next: ActivatedRouteSnapshot) {\n    const allowedRoles = next.data.allowedRoles;\n    const payload = this.authService.isExpectedRole(allowedRoles);\n    if (!payload) {\n      // if not authorized, show access denied message\n      this.router.navigate(['/403']);\n    }\n    return payload;\n  }\n\n  canActivateChild(next: ActivatedRouteSnapshot) {\n    const allowedRoles = next.data.allowedRoles;\n    const payload = this.authService.isExpectedRole(allowedRoles);\n    if (!payload) {\n      // if not authorized, show access denied message\n      this.router.navigate(['/403']);\n    }\n    return payload;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy',\n  templateUrl: './privacy.component.html',\n  styleUrls: ['./privacy.component.scss']\n})\nexport class PrivacyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RoslynService {\n    constructor(private backendService: BackendService) { }\n\n    sendCodeForCompile(data: any): Observable<any> {\n        return this.backendService.backendRequest('post', 'Roslyn/PlainTextCodeCompiler', data);\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n// import { UserDataService } from 'src/app/@services/user-data.service';\n// import { AuthService } from 'src/app/@services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  storedUser: any;\n  reportIssueModalVisibility = false;\n\n  constructor(\n    private router: Router,\n    // private authService: AuthService,\n    // private userDataService: UserDataService,\n  ) {}\n\n  ngOnInit() {\n    // if (this.authService.isAuthenticated()) {\n    //   if (this.storedUser) {\n    //     console.log('here');\n    //     return;\n    //   } else {\n    //     this.userDataService.getUserByToken().subscribe(\n    //       response => {\n    //         this.storedUser = response.body;\n    //         this.userDataService.setUserData(this.storedUser);\n    //       }\n    //     );\n    //   }\n    // }\n  }\n\n  isUserLogged(): boolean {\n    return false;\n    //return this.authService.isAuthenticated();\n  }\n\n  logOut() {\n    //this.userDataService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<mat-drawer-container autosize>\n    <mat-drawer #sidenav id=\"sideNavigation\" mode=\"over\">\n      <mat-toolbar color=\"primary\">\n        <span class=\"brandLogo\">\n          <a routerlink=\"/home\">\n            <img alt=\"(BG)\" class=\"d-inline-block align-middle\" height=\"50\" src=\"./assets/images/app/Ganio.jpg\">\n            BaiGanio\n          </a>\n        </span>\n        <span>\n          <m-link (click)=\"sidenav.toggle()\">\n            <i class=\"fas fa-times\"></i>\n          </m-link>\n        </span>\n      </mat-toolbar>\n      <mat-list (click)=\"sidenav.close()\">\n        <a mat-list-item routerLink=\"/home\"> Home </a>\n        <div *ngIf='isUserLogged()'>\n          <mat-divider></mat-divider>\n          <a mat-list-item routerLink=\"/dashboard\"> Dashboard </a>\n          <a mat-list-item routerLink=\"/profile\"> Profile </a>\n          <mat-divider></mat-divider>\n        </div>\n        <a mat-list-item routerLink=\"/subscriptions\"> Subscriptions </a>\n        <a mat-list-item routerLink=\"/courses\"> Courses </a>\n        <a mat-list-item routerLink=\"/teachers\"> Teachers </a>\n        <a mat-list-item routerLink=\"/blogs\"> Blog </a>\n        <a mat-list-item routerLink=\"/posts\"> Videos </a>\n        <a mat-list-item routerLink=\"/posts\"> Events </a>\n      </mat-list>\n    </mat-drawer>\n  \n    <div id=\"main\">\n      <mat-toolbar color=\"primary\">\n        <span id=\"openNav\">\n          <a (click)=\"sidenav.toggle()\">\n            <i class=\"fas fa-bars\"></i>\n          </a>\n        </span>\n        <span class=\"actions\">\n          <div *ngIf='isUserLogged(); else signBox'>\n            <!-- <a class=\"mr-1 align-middle\">\n              <span class=\"badge mr-1\">0 </span><i class=\"fa fa-bell\"></i>\n            </a> -->\n            <button mat-button [matMenuTriggerFor]=\"userMenu\">\n              Welcome, {{ storedUser?.username !== null ? storedUser?.username : storedUser?.email }}!\n            </button>\n            <mat-menu #userMenu=\"matMenu\">\n              <button mat-menu-item (click)='logOut()'>\n                <b>Logout</b>\n              </button>\n            </mat-menu>\n          </div>\n          <ng-template #signBox>\n            <a class=\"mr-3\" routerLink='/login'>\n              Login\n            </a>\n            <a class=\"mr-3\" routerLink='/register'>\n              Register\n            </a>\n          </ng-template>\n        </span>\n      </mat-toolbar>\n      <br>\n      <div class=\"container-fluid\">\n        <router-outlet></router-outlet>\n        <br>\n        <app-footer></app-footer>\n      </div>\n    </div>\n  </mat-drawer-container>\n  ","\nimport { HttpClient } from '@angular/common/http';\nimport { Data } from '../data';\nimport { Component, OnInit } from '@angular/core';\nimport * as Chart from 'chart.js';\n@Component({\n  selector: 'app-linechart',\n  templateUrl: './linechart.component.html'\n})\nexport class LinechartComponent implements OnInit {\n\n  url = 'https://localhost:44344/api/fake/Chart/';\n  data: any;\n  Player = [];\n  Run = [];\n  Linechart: any;\n  constructor(private httpClient: HttpClient) { }\n\n  ngOnInit() {\n    this.httpClient.get(this.url).subscribe((result: any) => {\n      result.forEach(x => {\n        this.Player.push(x.playerName);\n        this.Run.push(x.run);\n      });\n      this.Linechart = new Chart('canvas', {\n        type: 'line',\n        data: {\n          labels: this.Player,\n\n          datasets: [\n            {\n              data: this.Run,\n              borderColor: '#3cb371',\n              backgroundColor: '#0000FF',\n            }\n          ]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              display: true\n            }],\n            yAxes: [{\n              display: true\n            }],\n          }\n        }\n      });\n    });\n  }\n}\n","<br><br>\n<div class=\"chart-container\" \n  style=\"position: relative; width:50vw\">    \n  <canvas id=\"canvas\"></canvas>    \n</div>   ","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserDataService } from './user-data.service';\nimport { ErrorComponent } from '../@shared/pages/error/error.component';\nimport { ErrorModel } from '../@shared/models/error-model.module';\n\n@Injectable()\nexport class ErrorHandlerService {\n  loading = true;\n  user: any;\n  constructor(\n    private router: Router,\n    private dialog: MatDialog,\n    private userService: UserDataService,\n    private snackbar: MatSnackBar) { }\n\n  handleRequestError(error) {\n    const status = error.status;\n    // if (error.error.type === 'error' && status === 0) {\n    if (status === 0) {\n      return this.router.navigate(['/server-alert']);\n    } else if (status) {\n      const $dialogRef =\n        this.dialog.open(\n            ErrorComponent,\n            { data: { model: new ErrorModel(error) } }\n        );\n      // $dialogRef.afterClosed().subscribe(\n      //   response => {\n      //     if (response) {\n      //       this.loading = true;\n      //       this.user = this.userService.getUserData();\n      //       const sendErrorToAdmin = {\n      //           SenderEmail:  this.user.email,\n      //           ErrorReport: error.error ,\n      //           MessageReport: error.message\n      //         };\n      //       this.userService.sendExceptionToAdmin(sendErrorToAdmin)\n      //         .subscribe(() => {\n      //           this.loading = false;\n      //           // show info\n      //           this.snackbar.open('Message sent successful.', 'OK', {\n      //             duration: 5000,\n      //                         verticalPosition: 'top',\n      //             panelClass: 'successSnackbar'\n      //           });\n      //       }, () => {\n      //         this.loading = false;\n      //         // show info\n      //         this.snackbar.open('Message can\\'t be send!', 'X', {\n      //           duration: 5000,\n      //           horizontalPosition: 'right',\n      //           verticalPosition: 'top',\n      //           panelClass: 'dangerSnackbar'\n      //         });\n      //       });\n      //       // this.handleRequestError(error);\n      //     }\n      //   }\n      // );\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-course-details',\n  templateUrl: './course-details.component.html',\n  styleUrls: ['./course-details.component.scss']\n})\nexport class CourseDetailsComponent implements OnInit {\n  activeTab = 0;\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  backToMyCourses() {\n    this.router.navigate(['/courses/preview']);\n  }\n}\n","<button  \n    type=\"button\"               \n    class=\"btn btn-outline-info ml-3\" \n    (click) = 'backToMyCourses()'>\n    Go 2 My Enrollments\n</button> \n\\  \n<button  \n    type=\"button\"                        \n    class=\"btn btn-outline-info ml-3\" \n    routerLink='/dashboard'>\n    Go 2 Dashboard\n</button>  \n\\  \n<button  \n    type=\"button\"                        \n    class=\"btn btn-outline-info ml-3\" \n    routerLink='/profile'>\n    Go 2 Profile\n</button> \n<p class=\"h2 text-center mb-4\">Course Progress</p>\n<mat-tab-group [selectedIndex]=\"activeTab\">   \n    <mat-tab label=\"Overall Score\">\n        <ng-template matTabContent>\n            <!-- <app-linechart></app-linechart> -->\n            <!-- <app-barchart></app-barchart> -->\n            <!-- <app-piechart></app-piechart> -->\n            <!-- <app-doughnut></app-doughnut> -->\n            <app-polararea></app-polararea>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"In Class\">\n        <ng-template matTabContent>\n            <app-in-class></app-in-class>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Homeworks\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Self Motivation\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Exam 1\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Exam 2\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Final Exam\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Chat Room\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Resources\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n</mat-tab-group>\n<br><br>","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  envName: 'local',\n  appUrl: '',\n  apiUrl: '',\n  idsUrl: '',\n  IPCheckingServiceUrl: '',\n  bgapiSignalRNotyfyHub: '',\n  identityServerClientCredentials: {\n      client_id: '',\n      client_secret: '',\n      scope: '',\n      grant_type: ''\n  },\n  identityServerUserCredentials: {\n      client_id: '',\n      client_secret: '',\n      scope: '',\n      grant_type: ''\n  },\n  apiKey: '',\n  routesRequiringUserToken: [\n      '',\n      '',\n      ''\n  ]\n};\n","import { Component, OnInit } from '@angular/core';\nimport { CoursePreviewModel } from '../../models/course-preview-model.module';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-my-courses',\n  templateUrl: './my-courses.component.html',\n  styleUrls: ['./my-courses.component.scss']\n})\nexport class MyCoursesComponent implements OnInit {\n  loading = false;\n  isCourseDetails = false;\n  courseId: any;\n  courses = new Array<CoursePreviewModel>();\n\n  constructor(\n    // private courseService: CoursesService,\n    //           private errorHandlerService: ErrorHandlerService,\n              private route: ActivatedRoute,\n              private router: Router ) { }\n\n  ngOnInit() {\n    if (this.route.snapshot.params.id) {\n      this.courseId = this.route.snapshot.params.id;\n      this.showCourseDetails(this.courseId);\n    } else {\n      if (this.courses.length === 0) {\n        this.getCoursesPriview();\n      }\n    }\n  }\n\n  getCoursesPriview() {\n    this.loading = true;\n    // this.courseService.getCoursesByUserId().subscribe(response => {\n    //   response.body.forEach(element => {\n    //     const c = {\n    //       Id: element.courseId,\n    //       Name: element.courseName,\n    //       Teachers: element.teachers,\n    //       Description: element.description,\n    //       StartDate: element.start_date,\n    //       EndDate: element.end_date,\n    //       ModifiedOn: element.modified_on,\n    //       Image: element.image,\n    //       IsActive: element.active,\n    //       EnrolledStudents: element.enrolled_students\n    //     };\n    //     this.courses.push(c as CoursePreviewModel);\n    //   });\n    // },\n    // error => {\n    //   this.errorHandlerService.handleRequestError(error);\n    //   this.loading = false;\n    // },\n    // () => { this.loading = false; });\n  }\n\n  showCourseDetails(courseId: string): void {\n    console.log(courseId);\n    this.router.navigate(['/courses/preview', courseId]);  \n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <h2 class=\"text-center\">My Enrollments</h2>     \n        <hr>\n    </div>\n    <div *ngFor='let c of courses' class=\"col-md-4 col-center text-center\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-7\">\n                        <img src='{{ c.Image }}' class=\"img-thumbnail img-fluid\" alt=\"Sample image\">\n                        <h4>{{ c.Name }}</h4>\n                        <hr style=\"width: 60%; color: blue;\">  \n                        <h4>(w3) Progress: <br> 81% </h4>\n                    </div>                 \n                    <div class=\"col-md-5\">\n                        <p>Homeworks : 74%</p>\n                        <p>LetMeIn : 35 points</p>\n                        <p>Self Motivation : 20 points</p>\n                        <p>Intermediate Exam 1: 80%</p>\n                        <p>Intermediate Exam 2: 60%</p>\n                        <p>Final Exam : 90%</p>\n                        <hr style=\"width: 60%; color: blue;\">      \n                        <div class=\"text-center\">\n                            <button  \n                                type=\"button\"                        \n                                class=\"btn btn-outline-success\"\n                                (click) = 'showCourseDetails(c.Id)'>\n                                <b>Detailed view</b>\n                            </button>\n                            <br><br>\n                        </div>\n                    </div>\n                </div>  \n            </div>    \n        </div>  \n    </div>\n</div>\n\n<ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: true }\"></ngx-loading>","import { Injectable } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class SubscriptionService {\n\n  constructor(private backendService: BackendService) { }\n\n  getAllSubscriptions(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Subscriptions', null, false);\n  }\n\n  getUserActiveSubscriptions(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Subscriptions/GetUserActiveSubscriptions', null, true);\n  }\n\n  sendRequestForSub(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Subscriptions/Request4Subscription', data, true);\n  }\n\n  confirmRequestForSub(token: any): Observable<any> {\n    const data = { code: token };\n    return this.backendService.backendRequest('get', 'Subscriptions/Confirm', data, false);\n  }\n\n  getSubscriptionById(id: string): Observable<any> {\n    return this.backendService.backendRequest('get', 'Subscriptions/' + id);\n  }\n\n  getSubscriptionsWithConfirmedUserIds(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Subscriptions/WithConfirmedUserIds', null, true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nconst smallDeviceAverageSize = 1800;\n\n@Injectable()\nexport class UtilityService {\n\n  constructor() { }\n\n  isLocalStorageNameSupported(): Boolean {\n    const testKey = 'test', storage = window.localStorage;\n    try {\n      storage.setItem(testKey, '1');\n      storage.removeItem(testKey);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  isSmallDevice(): boolean {\n    const w = window,\n      d = document,\n      e = d.documentElement,\n      g = d.getElementsByTagName('body')[0],\n      width = w.innerWidth || e.clientWidth || g.clientWidth,\n      height = w.innerHeight || e.clientHeight || g.clientHeight;\n\n    return width + height < smallDeviceAverageSize;\n  }\n\n  mustMatchFormValidator(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        // return if another validator has already found an error on the matchingControl\n        return;\n      }\n\n      // set error on matchingControl if validation fails\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-score',\n  templateUrl: './score.component.html'\n})\nexport class ScoreComponent implements OnInit {\n  // storedUser = new UserViewModel();\n  // student = new StudentViewModel();\n   courses: any; // = new Array<CourseViewModel>();\n  // studentCourses = new Array<CourseViewModel>();\n\n  public chartOptions: any = {\n    responsive: true\n  };\n  public chartType = 'pie';\n  // public chartData: Array<any> = [300, 50, 100];\n  public chartData: Array<any> = [1, 1, 1];\n  public chartLabels: Array<any> = ['Standalone work', 'Current Exams', 'Final Exam'];\n  public chartColors: Array<any> = [{\n      hoverBorderColor: [\n        'rgba(0, 0, 0, 0.1)',\n        'rgba(0, 0, 0, 0.1)',\n        'rgba(0, 0, 0, 0.1)',\n        'rgba(0, 0, 0, 0.1)',\n        'rgba(0, 0, 0, 0.1)'\n      ],\n      hoverBorderWidth: 0,\n      backgroundColor: [\n        '#6bbaea', // blue\n        '#30e542', // green\n        '#f7f438', // yellow\n        '#949FB1',\n        '#4D5360'\n      ],\n      hoverBackgroundColor: ['#1c7ded', '#09c40c', '#fcf40f', '#A8B3C5', '#616774']\n  }];\n  public chartClicked(e: any): void { }\n  public chartHovered(e: any): void { }\n  \n  constructor() { }\n\n  ngOnInit() {\n    // this.studentService.getStudent().subscribe(\n    //   response => {\n    //     this.proccessResponse(response);\n    //   },\n    //   error => {\n    //     // this.loading = false;\n    //     // console.log(error);\n    //   },\n    //   () => {\n    //    // this.loading = false;\n    //    // console.log(this.student);\n    //   }\n    // );\n\n    // this.courseService.getCourses().subscribe(\n    //   response => {\n    //     response.body.forEach(element => {\n    //       const c = {\n    //         Id: element.id,\n    //         Name: element.name,\n    //         TeacherName: element.teacher_name,\n    //         Description: element.description,\n    //         StartDate: element.start_date,\n    //         EndDate: element.end_date,\n    //         CreatedOn: element.created_on,\n    //         Image2Base64: element.image,\n    //         Students: element.students as Array<StudentViewModel>,\n    //         IsActive: element.is_active,\n    //         TotalUsers: element.students.length\n    //       };\n    //       if (c.IsActive) {\n    //         this.courses.push(c as CourseViewModel);\n    //       }\n    //     });\n    //     // console.log(this.courses);\n    //   },\n    //   error => {\n    //     // this.loading = false;\n    //     // console.log(error);\n    //   },\n    //   () => { }\n    // );\n\n\n\n  }\n\n  // proccessResponse(response) {\n  //   this.student = response.body;\n  //   // console.log(this.student.Courses);\n  // }\n\n  isStudentCourse(courseId) {\n    // console.log(this.student);\n    // const jo = this.student.Courses as Array<CourseViewModel>;\n    // jo.forEach(element => {\n    //   // console.log(element);\n    //   // let jo = element.courseId;\n    //   // if (jo === courseId) {\n    //   //   return true;\n    //   // }\n    //   // return false;\n    // });\n    return false;\n  }\n\n  public getStudentWebhookUrl(students): string {\n    let jo = '';\n    // students.forEach(element => {\n    //   if (element.studentId === this.student['id']) {\n    //     // console.log(this.student['webhookUrls'][0]);\n    //     jo =  this.student['webhookUrls'][0] as string;\n    //     return jo;\n    //   }\n    // });\n    return jo;\n  }\n}\n","wtf\n<div  class=\"content\" style=\"overflow: hidden !important;\">\n    <!-- Section: Testimonials v.1 -->\n  <section *ngFor='let c of courses;' class=\"text-center my-5\">  \n      <!-- Grid row -->\n      <div class=\"row\">\n          <!--Grid column-->\n          <div class=\"col-lg-8 col-md-12 mb-lg-0 mb-4\">\n            <!--Card-->\n            <mdb-card class=\"testimonial-card text-left\">\n              <!--Background color-->\n              <div class=\"card-up info-color \"></div>\n              <!--Avatar-->\n              <div class=\"avatar white\" style=\"width: 70%; margin: 0 auto;\">\n                <img src=\"{{c.Image2Base64}}\" style=\"width:100%;\" class=\"\" />\n              </div>\n              <mdb-card-body>\n                <!--Name-->\n                <h1 class=\"mb-4 text-center\">{{c.Name}}</h1>\n                <hr>\n                <!--Quotation-->\n                <p class=\"dark-grey-text mt-4\">\n                  Webhook url: <br>{{getStudentWebhookUrl(c.Students)}}</p>\n                  \n              </mdb-card-body>\n            </mdb-card>\n            <!--Card-->\n          </div>\n        <!--Grid column-->\n  \n        <!--Grid chart-->\n        <div class=\"col-lg-4 col-md-12 mb-lg-0 mb-4 chart\">\n          <div style=\"width: 100%; margin: 0 auto;\">\n              <canvas mdbChart\n                  [chartType]=\"chartType\"\n                  [data]=\"chartData\"\n                  [labels]=\"chartLabels\"\n                  [colors]=\"chartColors\"\n                  [options]=\"chartOptions\"\n                  [legend]=\"true\"\n                  (chartHover)=\"chartHovered($event)\"\n                  (chartClick)=\"chartClicked($event)\">\n              </canvas>\n          </div>\n          <br>\n          <h1>Total score: ...%</h1>\n        </div>\n        <!--Grid chart-->\n      </div>\n      <!-- Grid row -->\n  </section>\n  <!-- Section: Testimonials v.1 -->\n  </div>","\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  template:\n  `\n  <div style=\"text-align:center\">\n    <div class=\"content\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-center\">\n            <h1>\n              Welcome to BaiGanio\n            </h1>\n            <img src=\"./assets/images/app/Ganio.jpg\" alt=\"\">\n            <h1 id=\"comingSoon\">coming soon...</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: true }\"></ngx-loading>\n  `,\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  loading = false;\n  constructor() { }\n\n  ngOnInit() {\n    // this.loading = false;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class BackendService {\n\n  constructor(private http: HttpClient, private authservice: AuthService) { }\n\n  backendRequest(requestType, requestTarget, requestData?, useUserToken?): Observable<any> {\n    if (!this.authservice.authToken) {\n      const req = this.getClientAccessToken()\n        .pipe(flatMap(\n          (response) => {\n            const authToken = response;\n            this.authservice.authToken = authToken.access_token;\n            return this.baseBackendRequest(requestType, requestTarget, requestData, useUserToken);\n          }));\n      return req;\n    } else {\n      return this.baseBackendRequest(requestType, requestTarget, requestData, useUserToken);\n    }\n  }\n\n  private baseBackendRequest(requestType, requestTarget, requestData?, useUserToken?): Observable<any> {\n    if (requestType === 'post') {\n      return this.http.post(\n        environment.apiUrl + requestTarget,\n        requestData,\n        { headers: this.getContentHeaders(useUserToken) }\n      );\n    } else if (requestType === 'get') {\n      return this.http.get(\n        environment.apiUrl + requestTarget,\n        { headers: this.getContentHeaders(useUserToken), params: requestData, observe: 'response'}\n      );\n    }\n  }\n\n  getClientAccessToken(): Observable<any> {\n    const is4credentials = environment.identityServerClientCredentials;\n    const headers: HttpHeaders = new HttpHeaders()\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/x-www-form-urlencoded');\n    // tslint:disable-next-line: max-line-length\n    const body = `grant_type=${is4credentials.grant_type}&scope=${is4credentials.scope}&client_secret=${is4credentials.client_secret}&client_id=${is4credentials.client_id}`;\n\n    return this.http.post(\n      environment.idsUrl + 'connect/token',\n      body,\n      { headers }\n    );\n  }\n\n  getUserAccessToken(email, password): Observable<any> {\n    const is4credentials = environment.identityServerUserCredentials;\n    // const body = new FormData();\n    // body.append('client_id', is4credentials.client_id);\n    // body.append('client_secret', is4credentials.client_secret);\n    // body.append('scope', is4credentials.scope);\n    // body.append('grant_type', is4credentials.grant_type);\n    // body.append('username', email);\n    // body.append('password', password);\n\n    const headers: HttpHeaders = new HttpHeaders()\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/x-www-form-urlencoded');\n // tslint:disable-next-line: max-line-length\n    const body = `grant_type=${is4credentials.grant_type}&scope=${is4credentials.scope}&client_secret=${is4credentials.client_secret}&client_id=${is4credentials.client_id}&username=${email}&password=${password}`;\n\n    return this.http.post(\n      environment.idsUrl + 'connect/token',\n      body,\n      { headers }\n    );\n  }\n\n  getContentHeaders(useUserToken?: any): HttpHeaders {\n    let contentHeaders = new HttpHeaders();\n    let authToken = this.authservice.pickAuthenticationToken();\n    if (useUserToken) { authToken = this.authservice.userToken; }\n    contentHeaders = contentHeaders.set('Authorization', `Bearer ${authToken}`);\n    return contentHeaders;\n  }\n\n}\n","export class UserViewModel {\n\n    Id: string;\n    Username: string;\n    Email: string;\n    FirstName: string;\n    LastName: string;\n    IsEmailConfirmed: boolean;\n    TypeOfUser: any;\n    CreatedOn: Date;\n    ModifiedOn: Date;\n    LeadSource: any;\n    Image: string;\n    Subscriptions: Object[];\n    Roles: Object[];\n  \n    constructor(id?: string, username?: string, email?: string, password?: string,\n        firstname?: string, lastname?: string, isEmailConfirmed?: boolean,\n        typeOfUser?: any, createdOn?: Date, modifiedOn?: Date, leadSource?: any,\n        image?: string, roles?: Object[], subscriptions?: Object[]) {\n        this.Id = id;\n        this.Username = username;\n        this.Email = email;\n        this.FirstName = firstname;\n        this.LastName = lastname;\n        this.IsEmailConfirmed = isEmailConfirmed;\n        this.TypeOfUser = typeOfUser;\n        this.CreatedOn = createdOn;\n        this.ModifiedOn = modifiedOn;\n        this.LeadSource = leadSource;\n        this.Image = image;\n        this.Roles = roles;\n        this.Subscriptions = subscriptions;\n    }\n  }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.scss']\n})\nexport class BlogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>blog works!</p>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CoursesComponent } from './courses.component';\nimport { CoursesRoutingModule } from './courses-routing.module';\nimport { NO_ERRORS_SCHEMA } from '@angular/core';\n// import { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { AngularMaterialModule } from 'src/app/@core/angular-material.module';\nimport { CoursePreviewComponent } from './components/course-preview/course-preview.component';\nimport { MyCoursesComponent } from './pages/my-courses/my-courses.component';\nimport { CourseDetailsComponent } from './pages/course-details/course-details.component';\nimport { InClassComponent } from './components/in-class/in-class.component';\nimport { ScoreComponent } from './components/score/score.component';\nimport { LinechartComponent } from 'src/app/@shared/components/charts/linechart/linechart.component';\nimport { BarchartComponent } from 'src/app/@shared/components/charts/barchart/barchart.component';\nimport { DoughnutComponent } from 'src/app/@shared/components/charts/doughnut/doughnut.component';\nimport { PiechartComponent } from 'src/app/@shared/components/charts/piechart/piechart.component';\nimport { PolarareaComponent } from 'src/app/@shared/components/charts/polararea/polararea.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoursesRoutingModule,\n    AngularMaterialModule\n    // NgxLoadingModule.forRoot({\n    //   animationType: ngxLoadingAnimationTypes.threeBounce,\n    //   primaryColour: '#88078e',\n    //   secondaryColour: '#c6ef23',\n    // }),\n  ],\n  declarations: [\n    CoursesComponent,\n    CoursePreviewComponent,\n    MyCoursesComponent,\n    CourseDetailsComponent,\n    InClassComponent,\n    ScoreComponent,\n    LinechartComponent,\n    BarchartComponent,\n    DoughnutComponent,\n    PiechartComponent,\n    PolarareaComponent\n  ],\n  entryComponents: [\n    CoursePreviewComponent\n  ],\n  exports: [CourseDetailsComponent],\n  schemas: [ NO_ERRORS_SCHEMA ]\n})\nexport class CoursesModule { }\n","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n    if (parentModule) {\n        throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { UtilityService } from './utility.service';\n\n@Injectable()\nexport class AuthService {\n\n  authToken: string;\n  private readonly tokenKeyName = 'bgut';\n  private uToken: any;\n  get userToken() { return this.uToken; }\n  set userToken(token) {\n    if (token && token.access_token) {\n      this.uToken = token.access_token;\n    } else {\n      this.uToken = token;\n    }\n  }\n\n  constructor(\n    public jwtHelper: JwtHelperService\n  ) {\n    this.jwtHelper = new JwtHelperService();\n    this.userToken = sessionStorage.getItem(this.tokenKeyName);\n  }\n\n  setUserTokenAndRemember(token) {\n    this.clearUserToken();\n    this.userToken = token.access_token;\n    sessionStorage.setItem(this.tokenKeyName, this.userToken);\n  }\n\n  pickAuthenticationToken(): string {\n     return this.authToken;\n  }\n  pickUserToken(): string {\n    return this.userToken;\n  }\n  clearUserToken() {\n    this.userToken = null;\n    sessionStorage.removeItem(this.tokenKeyName);\n  }\n\n  public isAuthenticated(): boolean {\n    const token = sessionStorage.getItem(this.tokenKeyName);\n    if (token === null) { return false; }\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  public decode() {\n    return this.jwtHelper.decodeToken(this.userToken);\n  }\n\n  public isExpectedRole(allowedRoles: string[]): boolean {\n    // check if the list of allowed roles is empty, if empty, authorize the user to access the page\n    if (allowedRoles == null || allowedRoles.length === 0) {\n      return true;\n    }\n    const token = sessionStorage.getItem(this.tokenKeyName);\n    if (token === null) { return false; }\n    const decodedToken = this.jwtHelper.decodeToken(token);\n    if (!decodedToken) {\n      console.log('Invalid token');\n      return false;\n    }\n    return allowedRoles.includes(decodedToken.role);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-access-denied',\n  template:\n  `\n  <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-xs-12 col-center text-center\">\n        <img id=\"denied\" src=\"../assets/images/status-codes/403.png\"  alt=\"Picture from my collection.\" />\n        <h1> Status code: <span>403 - FORBIDDEN!  </span>\n          <br> Server says: <span>'You are not authorized!'  </span>\n        \n        </h1>\n        <button mat-button color=\"primary\" routerLink='/home'> Back To Home</button>\n      </div>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./access-denied.component.scss']\n})\nexport class AccessDeniedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { EventBusService } from './event-bus.service';\nimport { UserViewModel } from '../@modules/users/models/user-view-model.module';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class UserDataService {\n  userData = new UserViewModel();\n\n  constructor(\n    private eventBusService: EventBusService,\n    private backendService: BackendService,\n    private authService: AuthService\n  ) { }\n\n  setUserData(data: UserViewModel): void {\n    this.userData = data;\n    this.eventBusService.emitUpdateUserData(data);\n  }\n  getUserData() {\n    return this.userData as UserViewModel;\n  }\n\n  updatePassword(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/UpdatePassword', data, true);\n  }\n\n  updateEmail(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/UpdateEmail', data, true);\n  }\n\n  updateProfile(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/UpdateProfile', data, true);\n  }\n\n  updateProfilePicture(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/UpdateProfilePicture', data, true);\n  }\n\n  sendIssueToAdmin(data: { Text: any; Img2Base64: string; }): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/ReportIssue', data, true);\n  }\n\n  sendExceptionToAdmin(data: { SenderEmail: string; ErrorReport: string; MessageReport: string; }): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/ReportException', data, true);\n  }\n\n  getUserByToken(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Identity', null, true);\n  }\n\n  getUserById(userId: string): Observable<any> {\n    return this.backendService.backendRequest('get', 'Users/' + userId, null, true);\n  }\n\n  getUserIP(): Observable<any> {\n    return this.backendService.backendRequest('get', environment.IPCheckingServiceUrl, null, true);\n  }\n  updateLastLoginDate(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Users/UpdateLastLogin', null, true);\n  }\n  getDasboardData(): Observable<any> {\n    return this.backendService.backendRequest('get', 'users/Dashboard', null, true);\n  }\n  logout(): void {\n    this.userData = null;\n    this.authService.clearUserToken();\n  }\n}\n","export class ErrorModel {\n    ErrorText: string;\n    ErrorDescription: string;\n    Message: string;\n    Name: string;\n    OK: boolean;\n    Status: number;\n    StatusText: string;\n    Url: string;\n\n    constructor(error?: any) {\n        const err = error.error;\n        this.ErrorText = err.error;\n        this.ErrorDescription = err || err.error_description;\n        this.Message = error.message;\n        this.Name = error.name;\n        this.OK = error.ok;\n        this.Status = error.status;\n        this.StatusText = error.statusText;\n        this.Url = error.url;\n    }\n}\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  ipinfo: any;\n  loading = false;\n  registrationError = false;\n  registrationErrorMessage = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private http: HttpClient,\n    // private accountService: AccountService,\n    // private errorHandlerService: ErrorHandlerService,\n    private snackbar: MatSnackBar,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.registerForm =\n      this.formBuilder.group({\n        email: [\n          null,\n          [Validators.required, Validators.email]\n        ],\n        password: [\n          null,\n          [Validators.required, Validators.minLength(6), Validators.maxLength(50)]\n        ],\n        acceptedTerms: [\n          false,\n          [Validators.requiredTrue]\n        ]\n      });\n  }\n\n  register() {\n    // this.loading = true;\n    // this.http.get(environment.IPCheckingServiceUrl)\n    //   .subscribe(\n    //     response => {\n    //       this.ipinfo = response;\n    //     },\n    //     error => {\n    //       this.errorHandlerService.handleRequestError(error);\n    //     },\n    //     () => {\n    //       this.doRegistration();\n    //     }\n    // );\n  }\n\n  doRegistration() {\n    // this.accountService.registerUser({\n    //   Email: this.registerForm.value.email,\n    //   Password: this.registerForm.value.password,\n    //   LeadSource: 'WebApp',\n    //   IP: this.ipinfo.ip\n    // }).subscribe(\n    //     () => {\n    //       this.router.navigate(['/welcome']);\n    //       this.getSuccessfulSnackBar(this.registerForm.value.email);\n    //       this.loading = false;\n    //     }, error => {\n    //       this.registrationError = true;\n    //       this.loading = false;\n    //       this.registerForm.reset();\n    //       this.errorHandlerService.handleRequestError(error);\n    //     }\n    //   );\n  }\n\n  // getTerms() {\n  //   this.loading = true;\n  //   const $dialogRef = this.dialog.open(TermsComponent, null);\n  //   $dialogRef.afterClosed().subscribe();\n  //   this.loading = false;\n  // }\n\n  // private getRegistrationErrorMessage(error: string) {\n  //   this.registrationErrorMessage =\n  //   `Ops... <br/> ${error} <br/> Try once more?!?!`;\n  //   this.registrationError = true;\n  // }\n\n  // private getSuccessfulSnackBar(email: string) {\n  //   this.snackbar.open(\n  //     `Registration successful for ${email}!`,\n  //     'X',\n  //     {\n  //       duration: 3000,\n  //       horizontalPosition: 'center',\n  //       verticalPosition: 'top',\n  //       panelClass: 'successSnackbar'\n  //     }\n  //   );\n  // }\n\n  // dismiss() {\n  //   this.registrationError = false;\n  //   this.registrationErrorMessage = '';\n  // }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n/**\n * @EventBusService used for connections between modules\n */\n@Injectable()\nexport class EventBusService {\n  public changeRoute: EventEmitter<any>;\n  public retryRequest: EventEmitter<any>;\n  public unknownError: EventEmitter<any>;\n  public updateUserData: EventEmitter<any>;\n  public fetchedDashboardData: EventEmitter<any>;\n\n  constructor() {\n    this.changeRoute = new EventEmitter();\n    this.retryRequest = new EventEmitter();\n    this.unknownError = new EventEmitter();\n    this.updateUserData = new EventEmitter();\n    this.fetchedDashboardData = new EventEmitter();\n  }\n\n  public emitChangeRoute(data) {\n    this.changeRoute.emit(data);\n  }\n\n  public emitRetryRequest(data) {\n    this.retryRequest.emit(data);\n  }\n\n  public emitUnknownError(data) {\n    this.unknownError.emit(data);\n  }\n\n  public emitUpdateUserData(data) {\n    this.updateUserData.emit(data);\n  }\n\n  public emitFetchedDashboardData(data) {\n    this.fetchedDashboardData.emit(data);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: ` \n    <app-navbar></app-navbar>\n  `\n})\nexport class AppComponent {\n  title = 'BaiGanio';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  retryFunction = null;\n  // user: UserViewModel;\n  loading = false;\n  loginError = false;\n  loginErrorMessage = '';\n\n  constructor(\n     private formBuilder: FormBuilder,\n     private router: Router,\n    // private backendService: BackendService,\n    // private authservice: AuthService,\n    // private errorHandlerService: ErrorHandlerService,\n    // private userDataService: UserDataService\n    ) { }\n\n  ngOnInit() {\n    this.loginForm =\n      this.formBuilder.group({\n        email: [\n          null,\n          [Validators.required, Validators.email]\n        ],\n        password: [\n          null,\n          [Validators.required, Validators.minLength(3)]\n        ],\n        rememberMe: [\n          true\n        ]\n      });\n\n    //this.authservice.clearUserToken();\n  }\n\n  // sendLoginRequest() {\n  //   this.loading = true;\n  //   this.backendService.getUserAccessToken(\n  //     this.loginForm.value.email,\n  //     this.loginForm.value.password\n  //   ).subscribe(\n  //       response => this.handleSuccess(response),\n  //       error => {\n  //         console.log(error);\n  //         this.loading = false;\n  //         this.loginForm.reset();\n  //         this.loginErrorMessage =\n  //         `Ops... <br/> ${error.error.error_description}! <br/>`;\n  //         this.loginError = true;\n  //       }\n  //     );\n  // }\n\n  // private handleSuccess(authToken): void {\n  //   if (this.loginForm.value.rememberMe) {\n  //     this.authservice.setUserTokenAndRemember(authToken);\n  //   } else {\n  //     this.authservice.clearUserToken();\n  //     this.authservice.userToken = authToken;\n  //   }\n  //   this.getUserByToken();\n  //   this.loading = false;\n  //   this.router.navigate(['/dashboard']);\n  // }\n\n  // getUserByToken(): void {\n  //   let userData: any;\n  //   let username = '';\n  //   this.userDataService.getUserByToken()\n  //     .subscribe(response => {\n  //         userData = response.body;\n  //         this.userDataService.setUserData(userData);\n  //         username =\n  //           userData.first_name != null && userData.last_name != null\n  //           ? userData.first_name + ' ' + userData.last_name\n  //           : userData.email;\n\n  //         this.updateLastLogin();\n  //       },\n  //       error => {\n  //         this.errorHandlerService.handleRequestError(error);\n  //       }\n  //     );\n  // }\n\n  // dismiss() {\n  //   this.loginError = false;\n  //   this.loginErrorMessage = '';\n  // }\n\n  // updateLastLogin() {\n  //   this.userDataService.updateLastLoginDate().subscribe(\n  //     () => {},\n  //     err => { console.log(err); }\n  //   );\n\n  // }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CoursePreviewModel } from './models/course-preview-model.module';\nimport { CoursePreviewComponent } from './components/course-preview/course-preview.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-courses',\n  templateUrl: './courses.component.html',\n  styleUrls: ['./courses.component.scss']\n})\nexport class CoursesComponent implements OnInit {\n  loading = false;\n  isStudent = false;\n  flagEnrollSuccess = false;\n  msgLogIn = '';\n  fetchingMsg = '';\n  msgIncompleteStudent = '';\n  totalStudents = 0;\n  courseId: any;\n  enrolledCourse: any;\n  courses = new Array<any>();\n  // coursesWithUserIds = new Array<CourseWithEnrolledUserIds>();\n  storedUser: any;\n  // student = new StudentPreviewModel();\n\n  constructor(\n    // private courseService: CoursesService,\n    // private studentService: StudentService,\n    // private authService: AuthService,\n    // private userDataService: UserDataService,\n    // private errorHandlerService: ErrorHandlerService,\n    private dialog: MatDialog,\n    private router: Router,\n    private snackbar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n     this.loading = true;\n    // if (this.authService.isAuthenticated()) {\n    //   this.storedUser = this.userDataService.getUserData();\n    //   if (this.storedUser) {\n    //       this.storedUserInit();\n    //   }\n    //   this.getCoursesWithEnrolledUserId();\n    // } else {\n\n    //   this.getInitCourses();\n\n    // }\n  }\n\n  getCoursesWithEnrolledUserId() {\n    // this.courseService.getCoursesWithEnrolledUserId().subscribe(response => {\n    //   response.body.forEach(element => {\n    //     const c = {\n    //       Id: element.id,\n    //       Name: element.name,\n    //       Teachers: element.teachers,\n    //       Description: element.description,\n    //       StartDate: element.startDate,\n    //       EndDate: element.endDate,\n    //       ModifiedOn: element.modifiedOn,\n    //       Image: element.image,\n    //       IsActive: element.isActive,\n    //       IsElectable: element.isElectable,\n    //       EnrolledStudents: element.totalEnrolledStudents,\n    //       EnrolledUserId: element.enrolledUserId\n    //     };\n    //     this.courses.push(c as CoursePreviewModel);\n    //   });\n    // },\n    // error => { this.errorHandlerService.handleRequestError(error); this.loading = false; },\n    // () => { this.loading = false; });\n  }\n\n  getInitCourses() {\n    // this.courseService.getCoursesPreview().subscribe(response => {\n    //   response.body.forEach(element => {\n    //     const c = {\n    //       Id: element.id,\n    //       Name: element.name,\n    //       Teachers: element.teachers,\n    //       Description: element.description,\n    //       StartDate: element.startDate,\n    //       EndDate: element.endDate,\n    //       ModifiedOn: element.modifiedOn,\n    //       Image: element.image,\n    //       IsActive: element.isActive,\n    //       IsElectable: element.isElectable,\n    //       EnrolledStudents: element.enrolledStudents,\n    //       EnrolledUserId: element.enrolledUserId\n    //     };\n    //     this.courses.push(c as CoursePreviewModel);\n    //   });\n    // },\n    //  error => {\n    //    this.errorHandlerService.handleRequestError(error);\n    //    this.loading = false;\n    // }, () => { this.loading = false; });\n  }\n\n  private storedUserInit() {\n    // this.userDataService.getUserByToken().subscribe(\n    //     response => {\n    //         const u = {\n    //             Id: response.body.id,\n    //             Username: response.body.username,\n    //             Subscriptions: response.body.subscriptions,\n    //             Roles: response.body.roles\n    //         };\n    //         this.storedUser = u as UserViewModel;\n    //         this.userDataService.setUserData(this.storedUser);\n    //     },\n    //     error => {\n    //         this.errorHandlerService.handleRequestError('myahah' + error);\n    //     }, () => { this.loading = false; }\n    // );\n}\n\n  isEnrolled(cId: string): boolean {\n    let result = false;\n    this.courses.forEach(element => {\n      if (cId === element.Id && element.EnrolledUserId === this.storedUser.Id) {\n        console.log('found');\n        console.log(this.storedUser.Id);\n        result = true;\n        return true;\n      }\n    });\n    return result;\n  }\n\n  enroll4course(courseId: string) {\n    this.loading = true;\n    let course: any;\n    this.courses.forEach( (element) => {\n      if (element.Id === courseId) {\n        course = element;\n      }\n    });\n    // this.studentService.enroll4Course({\n    //     CourseId: course.Id,\n    //     CourseName: course.Name,\n    //     Image: course.Image\n    //   })\n    //   .subscribe(\n    //     () => {},\n    //     error => {\n    //       this.errorHandlerService.handleRequestError(error);\n    //       this.loading = false;\n    //     },\n    //     () => {\n    //       this.loading = false;\n    //       this.snackbar.open('Enrollment successful !', 'X', {\n    //         duration: 3000,\n    //         horizontalPosition: 'right',\n    //         verticalPosition: 'top',\n    //         panelClass: 'successSnackbar'\n    //       });\n    //       this.flagEnrollSuccess = true;\n    //     }\n    // );\n  }\n\n  getCoursePreview(courseId: string) {\n    let course: CoursePreviewModel;\n    this.courses.forEach( (element) => {\n        if (element.Id === courseId) {\n          course =\n            new\n              CoursePreviewModel(\n                element.Id,\n                element.Name,\n                element.Description,\n                element.Teachers,\n                element.StartDate,\n                element.EndDate,\n                element.ModifiedOn,\n                element.IsActive,\n                element.IsElectable,\n                element.Image,\n                element.EnrolledStudents\n              );\n        }\n    });\n    const $dialogRef =\n        this.dialog.open(\n            CoursePreviewComponent,\n            {\n              width: '80vw',\n              maxHeight: '100vh',\n              data: { model: course }\n            }\n        );\n    $dialogRef.afterClosed().subscribe();\n  }\n\n  backToCourses() {\n    setTimeout(() => {\n      location.reload();\n    }, 10);\n  }\n\n  goToCourse(courseId: string) {\n    this.router.navigate(['/courses/preview/' + courseId]);\n  }\n\n  goToMyCourses() {\n    this.router.navigate(['/courses/preview']);\n  }\n}\n","<div class=\"text-center\" *ngIf='flagEnrollSuccess; else infoBox'>\n    <img src=\"../../../../../../assets/images/Checkmark.png\" class=\"img-fluid\">\n    <h1>Congrats! <br> You are enrolled 4 the [c.Name] course  ;)</h1>\n    <button  \n        type=\"button\"                        \n        class=\"btn btn-outline-info\" \n        (click) = 'goToMyCourses()'>\n        <b>Go to My Courses</b>\n    </button>\n    <button  \n        type=\"button\"                        \n        class=\"btn\" \n        (click) = 'backToCourses()'>\n        <b>Back</b>\n    </button>\n    <br><br>\n    \n</div>\n<ng-template #infoBox>\n    <h1  style=\"text-align:center\">Courses</h1>   \n    <hr style=\"width: 60%; color: blue;\">  \n    <div class=\"row\">\n        <div *ngFor='let c of courses' class=\"col-md-4 text-center\">\n            <div class=\"card\">\n                <div class=\"card-body\">             \n                    <img src='{{ c.Image }}' class=\"img-thumbnail img-fluid\" alt=\"Sample image\">    \n                    <br><br>                   \n                    <h3>{{ c.Name }}</h3>\n                    <!-- <p> Enrolled students so far: <span class=\"badge badge-primary\">{{c.EnrolledStudents}}</span>\n                       \n                    </p>                        \n                    <p>Teachers: {{c.Teachers}}</p> -->\n                    <!-- <hr style=\"width: 60%; color: blue;\">\n                    <h5>Start @ {{ c.StartDate | date :'dd-MMMM-yyyy' }}</h5> -->\n                    <!-- <h5>End @ {{ c.EndDate | date :'dd-MMMM-yyyy' }}</h5> -->\n                    <hr style=\"width: 60%; color: blue;\">  \n                    <!-- <h5>Enrolled students: {{ c.EnrolledStudents || 0 }}</h5>\n                    <hr style=\"width: 60%; color: blue;\">      -->\n                    <button \n                        mat-raised-button\n                        color=\"primary\"\n                        (click) = getCoursePreview(c.Id)>\n                        <i class=\"fas fa-search\"></i>\n                    </button> \n                    <span *ngIf='c.IsActive'>\n                        <button  \n                            *ngIf='isEnrolled(c.Id)'\n                            type=\"button\"                        \n                            class=\"btn btn-outline-info\" \n                            (click) = 'goToCourse(c.Id)'>\n                            <b>Go to Course Progress</b>\n                        </button>\n                        <span *ngIf='!isEnrolled(c.Id) && c.IsElectable'>\n                            <button  \n                                type=\"button\"                        \n                                class=\"btn btn-outline-success\" \n                                (click) = 'enroll4course(c.Id)'>\n                                <b>Enroll 4 Course</b>\n                            </button>\n                        </span>\n                    </span>\n                </div>    \n            </div>   \n        </div>\n    </div>\n</ng-template>\n\n<h2 *ngIf='loading' class='text-center'>Please wait! Fetching data...</h2>\n<ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: true }\"></ngx-loading>","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { throwIfAlreadyLoaded } from './module-import.guard';\nimport { ChecklistDatabase } from '../@shared/interfaces/checklist-database.module';\nimport { AccountService } from '../@services/account.service';\nimport { AuthService } from '../@services/auth.service';\nimport { BackendService } from '../@services/backend.service';\nimport { CoursesService } from '../@services/courses.service';\nimport { ErrorHandlerService } from '../@services/error-handler.service';\nimport { EventBusService } from '../@services/event-bus.service';\nimport { RoslynService } from '../@services/roslyn.service';\nimport { SignalRService } from '../@services/signalR.service';\nimport { StudentService } from '../@services/student.service';\nimport { SubscriptionService } from '../@services/subscription.service';\nimport { TeacherService } from '../@services/teacher.service';\nimport { UserDataService } from '../@services/user-data.service';\nimport { UtilityService } from '../@services/utility.service';\nimport { AuthGuard } from './auth.guard';\nimport { RoleGuard } from './role.guard';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    AuthGuard,\n    RoleGuard,\n    // JwtHelperService,\n    BackendService,\n    AuthService,\n    UserDataService,\n    EventBusService,\n    ErrorHandlerService,\n    UtilityService,\n    CoursesService,\n    StudentService,\n    SubscriptionService,\n    RoslynService,\n    SignalRService,\n    AccountService,\n    TeacherService,\n    ChecklistDatabase\n  ]\n})\nexport class CoreModule {\n  constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class AccountService {\n\n  constructor(private backendService: BackendService) { }\n\n  registerUser(data: { Email: any; Password: any; LeadSource: string; IP: any; }): Observable<any> {\n    return this.backendService.backendRequest('post', 'account/register', data);\n  }\n  confirm(token: string): Observable<any> {\n    const data = { code: token };\n    return this.backendService.backendRequest('get', 'account/confirmation', data);\n  }\n  resetPassword(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'account/ResetPassword', data);\n  }\n  forgotPassword(email: { email: any; }): Observable<any> {\n    return this.backendService.backendRequest('post', 'account/ForgotPassword', email);\n  }\n  getNotificationsData(): Observable<any> {\n    return this.backendService.backendRequest('get', 'account/Notifications', null, true);\n  }\n  getReportedIssuesData(): Observable<any> {\n    return this.backendService.backendRequest('get', 'account/ReportedIssues', null, true);\n  }\n  getUserIP(): Observable<any> {\n    return this.backendService.backendRequest('post', environment.IPCheckingServiceUrl);\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n// import { BaseDialogData } from 'src/app/@shared/interfaces/base-dialog.interface';\nimport { ErrorView } from 'src/app/@shared/interfaces/error-view.interface';\nimport { BaseDialogData } from '../../interfaces/base-dialog.interface';\n\n@Component({\n  selector: 'app-error',\n  template:\n  `\n  <div class=\"text-center\">\n    <div>\n      <h3> Ops... Error shows up!!!\n        <img src=\"../assets/images/bd2.gif\" alt=\"\" />\n      </h3>\n      <hr/>\n      <h4>{{error.ErrorText}}</h4>\n      <div style=\"width:50%; margin:auto;\"  class=\"text-center\">\n        {{error.Message}}\n      </div>\n      <hr/>\n      <button\n      mat-stroked-button color='warn'\n        (click) = dismiss()\n        style=\"width:50%\">\n        Dismiss\n      </button>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  error: ErrorView;\n\n  constructor(\n    public dialogRef: MatDialogRef<ErrorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: BaseDialogData\n  ) { }\n\n  ngOnInit() {\n    this.error = this.data.model;\n  }\n\n  dismiss() {\n    this.dialogRef.close();\n  }\n\n  // sendExceptionToAdmin() {\n  //   this.dialogRef.close(this.error.Error);\n  // }\n}\n","import { Injectable } from '@angular/core';\n// import * as signalR from '@aspnet/signalr';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalRService {\n\n  constructor(\n    private errorHandlerService: ErrorHandlerService,\n    private snackbar: MatSnackBar) { }\n\n  initializeSignalRConnection() {\n    // const connection = new signalR.HubConnectionBuilder()\n    //   .configureLogging(signalR.LogLevel.Information)\n    //   .withUrl(environment.bgapiSignalRNotyfyHub)\n    //   .build() ;\n\n    // connection.start()\n    //   .then(\n    //     () => {\n    //       this.snackbar.open(\n    //         `Connected to ${environment.bgapiSignalRNotyfyHub} SignalR hub!`,\n    //         'X',\n    //         {\n    //           duration: 3000,\n    //           horizontalPosition: 'center',\n    //           verticalPosition: 'top',\n    //           panelClass: 'successSnackbar'\n    //         }\n    //       );\n    //       // console.log('Connected to https://localhost:44344/notify SignalR hub!');\n    //     },\n    //     err => {\n    //       console.log(err.toString());\n    //       // this.errorHandlerService.handleRequestError(err);\n    //     }\n    //   );\n\n    // connection.on('BroadcastPostmanMessage', (type: string, payload: string) => {\n    //   this.snackbar.open(\n    //     `@nickname: ${type} -> ${payload} - via SignalR service!`,\n    //     'X',\n    //     {\n    //       duration: 6000,\n    //       horizontalPosition: 'center',\n    //       verticalPosition: 'top',\n    //       panelClass: 'successSnackbar'\n    //     }\n    //   );\n    //   // console.log({ severity: type, summary: payload, detail: 'Via SignalR service' });\n    // });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AngularMaterialModule } from './@core/angular-material.module';\nimport { CoreModule } from './@core/core.module';\nimport { HomeComponent } from './@pages/home/home.component';\nimport { AccessDeniedComponent } from './@shared/pages/access-denied/access-denied.component';\nimport { ErrorComponent } from './@shared/pages/error/error.component';\nimport { NotFoundComponent } from './@shared/pages/not-found/not-found.component';\nimport { PrivacyComponent } from './@shared/pages/privacy/privacy.component';\nimport { ServerAlertComponent } from './@shared/pages/server-alert/server-alert.component';\nimport { TermsComponent } from './@shared/pages/terms/terms.component';\nimport { AppComponent } from './app.component';\nimport { BlogComponent } from './@pages/blog/blog.component';\nimport { FooterComponent } from './@shared/components/footer/footer.component';\nimport { NavbarComponent } from './@shared/components/navbar/navbar.component';\nimport { CoursesModule } from './@modules/courses/courses.module';\nimport { SubscriptionsModule } from './@modules/subscriptions/subscriptions.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    HomeComponent,\n    NavbarComponent,\n    BlogComponent,\n    ServerAlertComponent,\n    AccessDeniedComponent,\n    NotFoundComponent,\n    PrivacyComponent,\n    TermsComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    CoreModule,\n    CoursesModule,\n    SubscriptionsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: jwtTokenGetter\n      }\n    }),\n  ],\n  entryComponents: [\n    TermsComponent,\n    PrivacyComponent,\n    ErrorComponent,\n  ],\n  providers: [CoreModule],\n  bootstrap: [AppComponent],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class AppModule { }\n\nexport function jwtTokenGetter() {\n  return localStorage.getItem('bg-bcof');\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NO_ERRORS_SCHEMA } from '@angular/core';\n// import { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { AngularMaterialModule } from 'src/app/@core/angular-material.module';\nimport { SubscriptionsRoutingModule } from './subscriptions-routing.module';\nimport { SubscriptionsComponent } from './subscriptions.component';\n@NgModule({\n  declarations: [\n      SubscriptionsComponent,\n      // SubscriptionPreviewComponent,\n      // MySubscriptionsComponent,\n      // StudentSubscriptionPreviewComponent,\n      // TeacherSubscriptionPreviewComponent,\n      // BloggerSubscriptionPreviewComponent\n    ],\n  imports: [\n    CommonModule,\n    SubscriptionsRoutingModule,\n    AngularMaterialModule,\n    // NgxLoadingModule.forRoot({\n    //   animationType: ngxLoadingAnimationTypes.threeBounce,\n    //   primaryColour: '#88078e',\n    //   secondaryColour: '#c6ef23',\n    // }),\n  ],\n  entryComponents: [\n    // SubscriptionPreviewComponent\n  ],\n  schemas: [ NO_ERRORS_SCHEMA ]\n})\nexport class SubscriptionsModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { UserDataService } from '../@services/user-data.service';\nimport { BackendService } from '../@services/backend.service';\nimport { AuthService } from '../@services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  storedUser: any;\n\n  constructor(\n    private router: Router,\n    private authservice: AuthService,\n    private userService: UserDataService,\n    private backendService: BackendService\n  ) { }\n\n  canActivate() {\n    if (!this.authservice.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    } else {\n      this.storedUser = this.userService.getUserData();\n      if (this.storedUser.id  === undefined) {\n        this.userService.getUserByToken().subscribe(\n          response => { this.storedUser = response.body; },\n          error => {\n            console.log('auth guard error!');\n            this.router.navigate(['/login']);\n            return false;\n          },\n          () => {\n            this.userService.setUserData(this.storedUser);\n            return true;\n          }\n        );\n      }\n      return false;\n    }\n  }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { SubscriptionsComponent } from './subscriptions.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', component: SubscriptionsComponent }\n    ]\n  },\n  // {\n  //   path: 'preview',\n  //   children: [\n  //     { path: '', component: MySubscriptionsComponent },\n  //     // { path: ':id', component: CourseDetailsComponent }\n  //   ]\n  // }\n  // { path: ':token', component: SubscriptionsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class SubscriptionsRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StudentLoginViewModel } from '../../models/student-login-view-model.module';\n@Component({\n  selector: 'app-in-class',\n  templateUrl: './in-class.component.html',\n  styleUrls: ['./in-class.component.scss']\n})\nexport class InClassComponent implements OnInit {\n    weekNo: any;\n    ipInfo: any;\n    message = '';\n    errMsg = '';\n    loading = false;\n    studentLogins = new Array<StudentLoginViewModel>();\n    student: any;\n    isLetMeInActive = true;\n    courseStartDate = new Date();\n    courseEndDate = new Date();\n\n    constructor(\n        private http: HttpClient,\n        // private studentService: StudentService\n    ) { }\n\n    ngOnInit() {\n        this.loading = true;\n        // this.getStudentLogins();\n        // this.studentService.getStudent().subscribe(\n        //     response => {\n        //         this.student = response.body; // as StudentViewModel;\n        //         this.loading = false;\n        //     },\n        //     error => {\n        //         // this.loading = false;\n        //         this.message = error.error;\n        //         console.log(this.message);\n        //     },\n        //     () => {\n        //         // this.getStudentLogins();\n        //     }\n        // );\n    }\n\n\n    getStudentLogins() {\n        // this.studentService.getStudentLogins().subscribe(\n        //     response => {\n        //         response.body.forEach(element => {\n        //             const c = {\n        //             Id: element.id,\n        //             StudentId: element.sudentId,\n        //             Ip: element.ip,\n        //             Week: element.week,\n        //             IsCalculated: element.isCalculated,\n        //             LastLoginDate: element.lastLoginDate,\n        //             IPStack: element.ipStack\n        //             };\n        //             this.studentLogins.push(c as StudentLoginViewModel);\n        //         });\n        //     },\n        //     error => {\n        //         this.loading = false;\n        //         this.message = error.error;\n        //         console.log(this.message);\n        //     },\n        //     () => {\n        //         this.loading = false;\n        //         this.proccessLoginsResponse();\n        //     }\n        // );\n    }\n\n    proccessLoginsResponse() {\n        // if (this.studentLogins.length === 0) {\n        //     this.isLetMeInActive = true;\n        // }\n    }\n\n    trackIP() {\n        this.loading = true;\n        // this.http.get(environment.IPCheckingServiceUrl).subscribe(\n        //     data => {\n        //         console.log(data);\n        //         this.ipInfo = data;\n        //         console.log(this.ipInfo);\n        //     },\n        //     error => {\n        //         this.errMsg = error.error;\n        //         console.log(this.errMsg);\n        //         this.loading = false;\n        //     },\n        //     () => { this.loading = false; this.proccessIP(); }\n        // );\n    }\n\n    proccessIP() {\n        // this.studentService.letMeIn({CourseId: \"\", IP: this.ipInfo.ip}).subscribe(\n        //     response => { },\n        //     error => {\n        //         this.errMsg = error.error;         \n        //         this.processError();\n        //         this.loading = false;\n        //     },\n        //     () => {\n        //         this.isLetMeInActive = false;\n        //         this.loading = false;\n        //         setTimeout(() => {\n        //             location.reload();\n        //         }, 2000);\n        //     }\n        // );\n    }\n\n    processError() {\n        // $('#errMsg').toggleClass('d-none');\n        //     setTimeout(() => {\n        //         this.errMsg = '';\n        //         $('#errMsg').toggleClass('d-none');\n        //     }, 3500);\n    }\n}\n\n","<div class=\"container\" style=\"overflow: hidden;\">\n    <br>\n      <div id=\"errMsg\" class=\"animated bounceIn d-none\"aria-live=\"polite\" role=\"alert\">\n          <div class=\"error  text-center\">\n              <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{errMsg}}\n          </div>\n      </div>\n      <div>\n        <br>\n        <button class=\"btn btn-blue btn-rounded btn-lg btn-block\" (click)=\"trackIP()\">Let Me In</button>\n      </div>\n      <ng-template #youAreIn>                                      \n          <div class=\"text-center\">\n              <h2 class=\"h2 text-center mb-4\">Congrats ;) You are in +5 points!</h2>\n              <p>Please wait. Reloading page...</p>\n          </div>\n      </ng-template>\n      <br>  \n      <div id=\"weekNo\">{{weekNo}}</div>\n      <div class=\"card-deck\"> \n          <div *ngFor='let s of studentLogins'>   \n            <div *ngIf='s.IsCalculated; else notCalculated'>\n                <div class=\"card\">\n                    <img src=\"../../../../../../assets/images/5points.png\" class=\"card-img-top\">\n                  <div class=\"card-body text-left\">\n                    <p class=\"\"><i style=\"color: lightgreen;\" class=\"fas fa-check\"></i>  {{s.Week}}</p>\n                    <p class=\"\">IP: {{s.Ip}}</p>\n                    <p class=\"\">{{s.LastLoginDate | date :'medium'}}</p>\n                  </div>\n                </div>    \n            </div>\n            <ng-template #notCalculated>\n                <div class=\"card\">\n                    <img src=\"../../../../../../assets/images/sad-face2.png\" class=\"card-img-top\">\n                  <div class=\"card-body text-center\">\n                      <p class=\"\">{{s.Week}}</p>\n                    <p>No points!</p>\n                  </div>\n                </div>   \n            </ng-template>\n        </div>\n      </div>\n    \n      <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: false }\"></ngx-loading>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-piechart',\n  templateUrl: './piechart.component.html'\n})\nexport class PiechartComponent implements OnInit {\n  url = 'https://localhost:44344/api/fake/Chart/';\n  data: any;\n  Player = [];\n  Run = [];\n  piechart: any;\n    constructor(private httpClient: HttpClient) { }\n\n    ngOnInit() {\n      this.httpClient.get(this.url).subscribe((result: any) => {\n        result.forEach(x => {\n          this.Player.push(x.playerName);\n          this.Run.push(x.run);\n        });\n        this.piechart = new Chart('canvas', {\n          type: 'pie',\n          data: {\n            labels: this.Player,\n            datasets: [\n              {\n                data: this.Run,\n                borderColor: '#3cba9f',\n                backgroundColor: [\n                  '#3cb371',\n                  '#0000FF',\n                  '#9966FF',\n                  '#4C4CFF',\n                  '#00FFFF',\n                  '#f990a7',\n                  '#aad2ed',\n                  '#FF00FF',\n                  'Blue',\n                  'Red',\n                  'Blue'\n                ],\n                fill: true\n              }\n            ]\n          },\n          options: {\n            legend: {\n              display: true\n            },\n            scales: {\n              xAxes: [{\n                display: true\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n      });\n    }\n  }\n","<br><br>\n<div class=\"chart-container\" \n  style=\"position: relative; width:50vw\">    \n  <canvas id=\"canvas\"></canvas>    \n</div> ","import { Routes, RouterModule } from '@angular/router';\n\nimport { CoursesComponent } from './courses.component';\n\nimport { NgModule } from '@angular/core';\nimport { MyCoursesComponent } from './pages/my-courses/my-courses.component';\nimport { CourseDetailsComponent } from './pages/course-details/course-details.component';\nimport { CoursePreviewComponent } from './components/course-preview/course-preview.component';\n\nconst routes: Routes = [\n    {\n      path: '',\n      children: [\n        { path: '', component: CoursesComponent }\n      ]\n    },\n    {\n      path: 'preview',\n      children: [\n        { path: '', component: MyCoursesComponent },\n        { path: ':id', component: CourseDetailsComponent }\n      ]\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoursesRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class CoursesService {\n\n  constructor(private backendService: BackendService) { }\n\n  deleteAllCourses(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Admin/DeleteAllCourses', null, true);\n  }\n  getCoursesPreview(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Courses', null, false);\n  }\n  getCoursesByUserId(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Courses/ByUserId', null, true);\n  }\n  getCourseById(id: string): Observable<any> {\n    return this.backendService.backendRequest('get', 'Courses/' + id, null, false);\n  }\n  getCoursesWithEnrolledUserId(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Courses/WithUserId', null, true);\n  }\n  getCourseProgress(courseId: string): Observable<any> {\n    return this.backendService.backendRequest('get', 'Courses/Progress/' + courseId, null, true);\n  }\n  createCourse(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Courses/Create', data, true);\n  }\n  updateCourse(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Courses/Update', data, true);\n  }\n  updateCoursePicture(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Courses/UpdateCoursePicture', data, true);\n  }\n  deleteCourse(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Courses/Delete', data, true);\n  }\n}\n","export class CoursePreviewModel {\n\n    Id: string;\n    Name: string;\n    Description: string;\n    Teachers: Array<string>;\n    StartDate: Date;\n    EndDate: Date;\n    ModifiedOn: Date;\n    IsActive: boolean;\n    IsElectable: boolean;\n    Image: string;\n    EnrolledStudents: number;\n    EnrolledUserId: string;\n\n    constructor(\n        id?: string,\n        name?: string,\n        description?: string,\n        teachers?: Array<string>,\n        startDate?: Date,\n        endDate?: Date,\n        modifiedOn?: Date,\n        isActive?: boolean,\n        isElectable?: boolean,\n        image?: string,\n        enrolledStudents?: number,\n        enrolledUserId?: string\n    ) {\n        this.Id = id;\n        this.Name = name;\n        this.Description = description;\n        this.Teachers = teachers;\n        this.StartDate = startDate;\n        this.EndDate = endDate;\n        this.ModifiedOn = modifiedOn;\n        this.IsActive = isActive;\n        this.IsElectable = isElectable;\n        this.Image = image;\n        this.EnrolledStudents = enrolledStudents;\n        this.EnrolledUserId = enrolledUserId;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n// import { TermsComponent } from 'src/app/@shared/components/terms/terms.component';\n// import { PrivacyComponent } from 'src/app/@shared/components/privacy/privacy.component';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n constructor(private dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n  \n  getPrivacy() {\n    // const $dialogRef =\n    // this.dialog.open(\n    //   PrivacyComponent,\n    //   {  width: '80vw', maxHeight: '100vh'}\n    // );\n    // $dialogRef.afterClosed().subscribe();\n  }\n  getTerms() {\n    // const $dialogRef =\n    // this.dialog.open(\n    //   TermsComponent,\n    //   {  width: '80vw', maxHeight: '100vh'}\n    // );\n    // $dialogRef.afterClosed().subscribe();\n  }\n}\n","<footer>\n    <div class=\"card card-image\">\n      <div class=\"text-center\">\n          <div class=\"py-5\">\n              <br>\n              <h2 id=\"all-rights\">\n                  Developed by (BG) Team &copy; \n                  <br>               \n                  <span id=\"innovations\">Seeing innovations since 2015</span>\n              </h2>\n              <h4>\n                All rights reserved!\n              </h4>\n              <h2 class=\"handyClock\"><input type=\"text\" id=\"clock\"></h2>\n              <br>\n              <div class=\"links\">\n                  <a href=\"https://www.facebook.com/baiganio.azurewebsites.net/\" target=\"_blank\">\n                      <img src=\"../assets/images/social-icons/facebook.ico\" alt=\"Facebook\" title=\"Facebook\">\n                  </a>\n                  <a href=\"https://github.com/BaiGanio\" target=\"_blank\">\n                      <img src=\"../assets//images/social-icons/octo.png\" alt=\"GitHub\" title=\"Github\">\n                  </a>\n                  <a href=\"https://www.youtube.com/channel/UCczegwwjd8YyeophFBIJ4EA?view_as=subscriber\" target=\"_blank\">\n                      <img src=\"../assets/images/social-icons/youtube.png\" alt=\"YouTube\" title=\"YouTube\">\n                  </a>\n              </div>\n              <br><br>\n              <li class=\"innerLinks\">\n                  <a (click)=\"getPrivacy()\">Privacy Policy</a>\n              </li>\n              <li class=\"innerLinks\" >\n                  <a (click)=\"getTerms()\">Terms of Use</a>\n              </li>\n            <br>\n          </div>\n      </div>\n    </div>\n  </footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  template:\n  `\n  <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-xs col-center text-center\">\n        <!-- <h1 class=\"Guildof\">File not found</h1> -->\n        <img src=\"../assets/images/status-codes/404.ico\"  alt=\"Picture from my collection.\" />\n        <h1>\n          Ooops... \n          <span id=\"errorMessage\">\n          Page not found on the Server!\n          </span>\n        </h1>\n        <button mat-button color=\"primary\" routerLink='/home'> Back To Home</button>\n      </div>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n","import { Component, OnInit, DoCheck, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { SubscriptionPreviewModel } from './models/subscription-preview-model.module';\nimport { SubscriptionService } from 'src/app/@services/subscription.service';\nimport { UserDataService } from 'src/app/@services/user-data.service';\nimport { AuthService } from 'src/app/@services/auth.service';\nimport { ErrorHandlerService } from 'src/app/@services/error-handler.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-subscriptions',\n    templateUrl: 'subscriptions.component.html',\n    styleUrls: ['subscriptions.component.scss']\n})\n\nexport class SubscriptionsComponent implements OnInit {\n    subscriptions = new Array<SubscriptionPreviewModel>();\n    userId = '';\n    errorMsg = '';\n    subscriptionId = '';\n    successfulConfirmation = false;\n    failedConfirmation = false;\n    notificationRequest = false;\n    loading = false;\n    panelOpenState = false;\n    isUserConfirmingSubscription = false;\n    totalUsersInSubscr = 0;\n    storedUser: any;\n    haveConfirmedSubscription = false;\n\n    constructor(\n        // private errorHandlerService: ErrorHandlerService,\n        private authService: AuthService,\n        private router: Router,\n        private subscriptionsService: SubscriptionService,\n        private userDataService: UserDataService,\n        private route: ActivatedRoute,\n        private dialog: MatDialog,\n        private snackbar: MatSnackBar\n    ) {}\n\n    ngOnInit() {\n        // this.loading = true;\n        // if (this.route.snapshot.params.token) {\n        //     this.checkRouteParameters();\n        // }\n        // if (this.authService.isAuthenticated()) {\n        //     this.loading = true;\n        //     this.storedUser = this.userDataService.getUserData();\n        //     if (this.storedUser.id === undefined) {\n        //         this.storedUserInit();\n        //     }\n        // }\n        // this.subscriptionsInit();\n    }\n\n    private subscriptionsInit() {\n        this.subscriptionsService.getAllSubscriptions().subscribe(response => {\n            console.log(response.body);\n            response.body.forEach(element => {\n                const s = {\n                    Id: element.id,\n                    Type: element.type,\n                    Description: element.description,\n                    IsActive: element.isActive,\n                    Image: element.image,\n                    TotalSubscribers: element.totalSubscribers,\n                    ConfirmedSubscribers: element.confirmedSubscribers,\n                    PendingSubscribers: element.pendingSubscribers,\n                    CancelledSubscribers: element.cancelledSubscribers,\n                    CreatedOn: element.createdOn,\n                    ModifiedOn: element.modifiedOn\n                };\n                this.subscriptions.push(s as SubscriptionPreviewModel);\n            });\n        }, error => {\n          //  this.errorHandlerService.handleRequestError(error);\n            this.loading = false;\n        }, () => { this.loading = false; });\n    }\n\n    private storedUserInit() {\n        this.userDataService.getUserByToken().subscribe(\n            response => {\n                const u = {\n                    Id: response.body.id,\n                    Username: response.body.username,\n                    Subscriptions: response.body.subscriptions,\n                    Roles: response.body.roles\n                };\n                // this.storedUser = u as UserViewModel;\n                this.userDataService.setUserData(this.storedUser);\n            },\n            error => {\n             //   this.errorHandlerService.handleRequestError('myahah' + error);\n            }, () => { this.loading = false; }\n        );\n    }\n\n    goToMySubscriptions() {\n        this.router.navigate(['/subscriptions/preview']);\n    }\n\n    sendRequest(id: string) {\n        this.loading = true;\n        console.log(id);\n        this.subscriptionsService.sendRequestForSub({ Id: id })\n            .subscribe(\n                response => {\n                    this.loading = false;\n                    this.notificationRequest = true;\n                },\n                error => {\n                    this.loading = false;\n                    //this.errorHandlerService.handleRequestError(error);\n                },\n                () => {\n                    this.subscriptions = new Array<any>();\n                    this.storedUserInit();\n                    this.subscriptionsInit();\n                }\n            );\n    }\n\n    private checkRouteParameters(): void {\n        const token = (String)(this.route.snapshot.params.token).split('--');\n        if (token) {\n            this.confirmSubscription();\n        }\n    }\n\n    private confirmSubscription() {\n        const token = this.route.snapshot.params.token;\n        this.subscriptionsService.confirmRequestForSub(token).subscribe(\n            () => {\n                this.isUserConfirmingSubscription = true;\n                this.loading = false;\n            },\n            err => {\n                this.loading = false;\n                this.failedConfirmation = true;\n              //  this.errorHandlerService.handleRequestError(err);\n            }\n        );\n    }\n\n    getSubscriptionPreview(subscriptionId: string) {\n        let subscription: SubscriptionPreviewModel;\n        this.subscriptions.forEach((element) => {\n            if (element.Id === subscriptionId) {\n                subscription =\n                    new SubscriptionPreviewModel(\n                        element.Id,\n                        element.Type,\n                        element.Description,\n                        element.IsActive,\n                        element.Image,\n                        element.TotalSubscribers,\n                        element.ConfirmedSubscribers,\n                        element.PendingSubscribers,\n                        element.CancelledSubscribers,\n                        element.CreatedOn,\n                        element.ModifiedOn\n                    );\n            }\n        });\n        // const $dialogRef =\n        //     this.dialog.open(\n        //         SubscriptionPreviewComponent,\n        //         { data: { model: subscription } }\n        //     );\n        // $dialogRef.afterClosed().subscribe();\n    }\n\n    isConfirmed(sId: string): boolean {\n        let result = false;\n        this.storedUser = this.userDataService.getUserData();\n        if (this.storedUser.Id) {\n            this.storedUser.Subscriptions.forEach(element => {\n                if (sId === element.subscription_id && element.status === 'Confirmed') {\n                    this.haveConfirmedSubscription = true;\n                    result = true;\n                    return true;\n                }\n            });\n        }\n        return result;\n    }\n\n    isWaitingForConfirmation(sId: string): boolean {\n        let result = false;\n        this.storedUser = this.userDataService.getUserData();\n        if (this.storedUser.Id) {\n            this.storedUser.Subscriptions.forEach(element => {\n                if (sId === element.subscription_id && element.status === 'WaitingForConfirmation') {\n                    result = true;\n                    return true;\n                }\n            });\n        }\n        return result;\n    }\n\n    getTotalSubscribers(sId: string): number {\n        let result = 0;\n        this.subscriptions.forEach(element => {\n            if (sId === element.Id) {\n                result =  element.TotalSubscribers;\n                return result;\n            }\n        });\n        return result;\n    }\n\n    dismiss() {\n        this.isUserConfirmingSubscription = false;\n        this.notificationRequest = false;\n    }\n}\n","<h1 class=\"\" style=\"text-align:center\">Subscriptions\n  <span *ngIf='haveConfirmedSubscription === true'> / \n    <button style=\"background-color: cornflowerblue; color:white; cursor:pointer;\" (click)='goToMySubscriptions()'>Preview</button>\n  </span>\n</h1>\n<hr style=\"width: 60%; color: blue;\">  \n<div class=\"content text-center\">\n  <h2 *ngIf='loading'>Please wait! Fetching data...</h2>\n\n  <div class=\"dim\" *ngIf='notificationRequest'>\n    <span class=\"msg\">\n      <h2>\n        Your subscription request is on the fly...\n        <br>\n        Please check your email for confirmation link!\n        <br>\n      </h2>\n      <br>\n      <button\n        class=\"btn btn-outline-info\"\n        (click) = dismiss()\n        style=\"width:20%\">\n        <b>Dismiss</b>\n      </button>\n    </span>\n  </div>\n  <div class=\"dim\" *ngIf=\"isUserConfirmingSubscription\">\n    <span class=\"msg\">\n      <h2>\n        Thank you for confirming your subscription.\n        <br>\n        You are now subscribed!\n      </h2>\n      <br>\n      <button\n        class=\"btn btn-outline-info\"\n        (click) = dismiss()\n        style=\"width:20%\">\n        <b>Dismiss</b>\n      </button>\n    </span>\n  </div>\n</div>\n<div class='row text-center'>\n  <div id=\"exception-list\" class=\"col-md-4\" *ngFor='let s of subscriptions;'>\n    <div class=\"card\" style=\"margin: 10px;\">\n      <div class=\"card-body\">\n        <h2 class=\"text-center\"> {{ s.Type }} </h2>\n        <hr style=\"color: black;\">\n        <div class=\"view view-cascade overlay\">\n\n          <img src='{{ s.Image }}' alt=\"Sample image\" class=\"img-thumbnail img-fluid\">\n          <hr style=\"width: 80%; color: blue;\">\n          <p *ngIf='s.IsActive;' id=\"subscrStatus\">Active : {{s.IsActive}}</p>\n          <p *ngIf='!s.IsActive;' id=\"subscrStatus\">Subscription in development!</p>\n         \n          <div *ngIf='s.IsActive'>\n            <p *ngIf='isConfirmed(s.Id) === false && isWaitingForConfirmation(s.Id) === false'>  \n              <button                                     \n              class=\"btn btn-outline-success\" \n              (click)='sendRequest(s.Id)'>\n              Send request 4 subscription\n            </button>\n            </p>\n            <p style=\"color: blue;\" *ngIf='isWaitingForConfirmation(s.Id)'>Waiting for confirmation!</p>            \n          </div>\n          <button mat-raised-button color=\"primary\" (click)=getSubscriptionPreview(s.Id)>\n            <i class=\"fas fa-search\"></i>\n          </button>\n        \n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: true }\"></ngx-loading> -->\n","export class SubscriptionPreviewModel {\n    Id: string;\n    Type: string;\n    IsActive: boolean;\n    Image: string;\n    Description: string;\n    TotalSubscribers: number;\n    ConfirmedSubscribers: number;\n    PendingSubscribers: number;\n    CancelledSubscribers: number;\n    CreatedOn: Date;\n    ModifiedOn: Date;\n\n    constructor(\n        id?: string,\n        type?: string,\n        description?: string,\n        isActive?: boolean,\n        image?: string,\n        totalSubscribers?: number,\n        confirmedSubscribers?: number,\n        pendingSubscribers?: number,\n        cancelledSubscribers?: number,\n        createdOn?: Date,\n        modifiedOn?: Date\n    ) {\n        this.Id = id;\n        this.Type = type;\n        this.IsActive = isActive;\n        this.Image = image;\n        this.TotalSubscribers = totalSubscribers;\n        this.ConfirmedSubscribers = confirmedSubscribers;\n        this.PendingSubscribers = pendingSubscribers;\n        this.CancelledSubscribers = cancelledSubscribers;\n        this.Description = description;\n        this.CreatedOn = createdOn;\n        this.ModifiedOn = modifiedOn;\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n// import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n// import { BaseDialogData } from '../../interfaces/base-dialog.interface';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit {\n\ntitle: string;\n  constructor(\n    // public dialogRef: MatDialogRef<TermsComponent>,\n    // @Inject(MAT_DIALOG_DATA) public data: BaseDialogData,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    // this.user = this.data.model;\n    // this.title = this.data.title;\n  }\n\n  onRejectClick() {\n    // this.dialogRef.close();\n  }\n\n}\n","<div class=\"animated fadeInRightBig\">\n  <mdb-card>\n      <mdb-card-body>\n        <mdb-card-title >\n              <h1 id=\"title\">Terms Of Use</h1>\n              <!-- <h2 id=\"Second-Title\"> Use this page to detail your site's terms of use.</h2> -->\n        </mdb-card-title>\n        <mdb-card-text >\n          <p class=\"text\">Please read these <b>Terms</b> carefully before start using BaiGanio website operated by (BG) Team. \n              Your access to and use of the Service is conditioned on your acceptance of and compliance with these Terms. These Terms apply to all visitors, users and others who access or use the Service. \n              <br />\n              <br />\n              <b>\n                  By accessing or using the Service you agree to be bound by these Terms. If you disagree\n                  with any part of the terms then you may not access the Service.\n              </b>\n          </p>\n        </mdb-card-text>\n        <mdb-card-title>\n        <h3 class=\"Third-Title\">Changes</h3> \n        </mdb-card-title>\n        <mdb-card-text >\n          <p class=\"text\">  We reserve the right, at our sole discretion, to modify or replace these Terms at any time. If a\n                revision is material we will try to provide at least 30 days' notice prior to any new terms\n                taking effect. What constitutes a material change will be determined at our sole discretion.\n          </p>\n        </mdb-card-text>\n        <mdb-card-title>\n        <h3 class=\"Third-Title\">Contact Us</h3>\n        </mdb-card-title>\n        <mdb-card-text>\n          <p class=\"text\">If you have any questions about these Terms, please contact us.\n          </p>\n        </mdb-card-text>\n      </mdb-card-body>\n  </mdb-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-doughnut',\n  templateUrl: './doughnut.component.html'\n})\nexport class DoughnutComponent implements OnInit {\n  url = 'https://localhost:44344/api/fake/Chart/';\n  data: any;\n  Player = [];\n  Run = [];\n  doughnutchart: any;\n    constructor(private httpClient: HttpClient) { }\n    ngOnInit() {\n      this.httpClient.get(this.url).subscribe((result: any) => {\n        result.forEach(x => {\n          this.Player.push(x.playerName);\n          this.Run.push(x.run);\n        });\n        this.doughnutchart = new Chart('canvas', {\n          type: 'doughnut',\n          data: {\n            labels: this.Player,\n            datasets: [\n              {\n                data: this.Run,\n                borderColor: '#3cba9f',\n                backgroundColor: [\n                  '#3cb371',\n                  '#0000FF',\n                  '#9966FF',\n                  '#4C4CFF',\n                  '#00FFFF',\n                  '#f990a7',\n                  '#aad2ed',\n                  '#FF00FF',\n                  'Blue',\n                  'Red',\n                  'Blue'\n                ],\n                fill: true\n              }\n            ]\n          },\n          options: {\n            legend: {\n              display: true\n            },\n            scales: {\n              xAxes: [{\n                display: false\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n      });\n    }\n  }\n","<div class=\"chart-container\" \n  style=\"position: relative; width:30vw\">    \n  <canvas id=\"canvas\"></canvas>    \n</div> ","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for to-do item\n */\nexport class TodoItemNode {\n    children: TodoItemNode[];\n    item: string;\n  }\n\n  /** Flat to-do item node with expandable and level information */\nexport class TodoItemFlatNode {\n    item: string;\n    level: number;\n    expandable: boolean;\n  }\n\n  /**\n   * The Json object for to-do list data.\n   */\nconst TREE_DATA = {\n  Questions:{\n    Answers: [],\n    Options: []\n  }\n  //Test_Creation: {  \n    //   Type_Of_Test : {\n    //     Unknown:null,\n    //     Intermediate1:null,\n    //     Intermediate2:null,\n    //     Intermediate1Workbench:null,\n    //     Intermediate2Workbench:null,\n    //     Official:null\n    //   },\n    //   Questions:{\n    //     Answers: []\n    //   }\n    // }\n    // Reminders: [\n    //   'Cook dinner',\n    //   'Read the Material Design spec',\n    //   'Upgrade Application to Angular'\n    // ]\n  };\n\n  /**\n   * Checklist database, it can build a tree structured Json object.\n   * Each node in Json object represents a to-do item or a category.\n   * If a node is a category, it has children items and new items can be added under the category.\n   */\n@Injectable()\n  export class ChecklistDatabase {\n    dataChange = new BehaviorSubject<TodoItemNode[]>([]);\n\n    get data(): TodoItemNode[] { return this.dataChange.value; }\n\n    constructor() {\n      this.initialize();\n    }\n\n    initialize() {\n      // Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\n      //     file node as children.\n      const data = this.buildFileTree(TREE_DATA, 0);\n\n      // Notify the change.\n      this.dataChange.next(data);\n    }\n\n    /**\n     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n     * The return value is the list of `TodoItemNode`.\n     */\n    buildFileTree(obj: {[key: string]: any}, level: number): TodoItemNode[] {\n      return Object.keys(obj).reduce<TodoItemNode[]>((accumulator, key) => {\n        const value = obj[key];\n        const node = new TodoItemNode();\n        node.item = key;\n\n        if (value != null) {\n          if (typeof value === 'object') {\n            node.children = this.buildFileTree(value, level + 1);\n          } else {\n            node.item = value;\n          }\n        }\n\n        return accumulator.concat(node);\n      }, []);\n    }\n\n    /** Add an item to to-do list */\n    insertItem(parent: TodoItemNode, name: string) {\n      if (parent.children) {\n        parent.children.push({item: name} as TodoItemNode);\n        this.dataChange.next(this.data);\n      }\n    }\n\n    updateItem(node: TodoItemNode, name: string) {\n      node.item = name + 'm100';\n      this.dataChange.next(this.data);\n    }\n  }\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class StudentService {\n\n  constructor(private backendService: BackendService) { }\n\n  letMeIn(data): Observable<any> {\n    return this.backendService.backendRequest('post', 'Students/LetMeIn', data, true);\n  }\n\n  getStudentLogins(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Students/GetStudentLogins', null, true);\n  }\n\n  getStudentProgresses(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Students/GetStudentProgresses', null, true);\n  }\n\n  getStudent(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Students/GetByUserId', null, true);\n  }\n\n  getCoursesAndScores(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Students/GetCoursesAndScores', null, true);\n  }\n\n  updateStudent(data): Observable<any> {\n    return this.backendService.backendRequest('post', 'Students/Update', data, true);\n  }\n  enroll4Course(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Students/Enroll4Course', data, true);\n  }\n\n  getChartData() {\n    return this.backendService.backendRequest('get', 'Fake/Chart');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BlogComponent } from './@pages/blog/blog.component';\nimport { HomeComponent } from './@pages/home/home.component';\nimport { LoginComponent } from './@pages/login/login.component';\nimport { RegisterComponent } from './@pages/register/register.component';\nimport { AccessDeniedComponent } from './@shared/pages/access-denied/access-denied.component';\nimport { ErrorComponent } from './@shared/pages/error/error.component';\nimport { NotFoundComponent } from './@shared/pages/not-found/not-found.component';\nimport { ServerAlertComponent } from './@shared/pages/server-alert/server-alert.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n      path: 'blog',\n      component: BlogComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'subscriptions',\n    loadChildren : () => import('./@modules/subscriptions/subscriptions.module').then(m => m.SubscriptionsModule)\n  },\n  {\n    path: 'courses',\n    loadChildren : () => import('./@modules/courses/courses.module').then(m => m.CoursesModule)\n  },\n  {\n    path: 'server-alert',\n    component: ServerAlertComponent\n  },\n  {\n    path: 'error',\n    component: ErrorComponent\n  },\n  {\n    path: '403',\n    component: AccessDeniedComponent\n  } ,\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BackendService } from './backend.service';\n\n@Injectable()\nexport class TeacherService {\n\n    constructor(private backendService: BackendService) { }\n\n    getTeachers(): Observable<any> {\n        return this.backendService.backendRequest('get', 'Teachers', null, true);\n    }\n\n    getTeacherById(teacherId: any): Observable<any> {\n        return this.backendService.backendRequest('get', 'Teachers/' + teacherId);\n    }\n\n    addTeacher2Course(data: any): Observable<any> {\n        return this.backendService.backendRequest('post', 'Teachers/AddTeacherCourse', data, true);\n    }\n\n    voteForTeacher(data: any): Observable<any> {\n        return this.backendService.backendRequest('post', 'Students/Vote4Teacher', data, true);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    MatSidenavModule\n  ]\n})\nexport class AngularMaterialModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-alert',\n  template:\n  `\n  <div class=\"content\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-center text-center\">\n      <h1>\n        Ooops... ERROR 503!\n        <br>\n        <span id=\"errorMessage\">Our Servers are temporary unavailable!</span> \n        </h1>\n        <br>\n        <button mat-button color=\"primary\" routerLink='/home'> Back To Home</button>\n      </div>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./server-alert.component.scss']\n})\nexport class ServerAlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-barchart',\n  templateUrl: './barchart.component.html'\n})\nexport class BarchartComponent implements OnInit {\n  url = 'https://localhost:44344/api/fake/Chart/';\n  data: any;\n  Player = [];\n  Run = [];\n  barchart: any;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get(this.url).subscribe((result: any) => {\n      result.forEach(x => {\n        this.Player.push(x.playerName);\n        this.Run.push(x.run);\n      });\n      this.barchart = new Chart('canvas', {\n        type: 'bar',\n        data: {\n          labels: this.Player,\n          datasets: [\n            {\n              data: this.Run,\n              borderColor: '#3cba9f',\n              backgroundColor: [\n                '#3cb371',\n                '#0000FF',\n                '#9966FF',\n                '#4C4CFF',\n                '#00FFFF',\n                '#f990a7',\n                '#aad2ed',\n                '#FF00FF',\n                'Blue',\n                'Red',\n                'Blue'  \n              ],\n              fill: true\n            }\n          ]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              display: true\n            }],\n            yAxes: [{\n              display: true\n            }],\n          }\n        }\n      });\n    });\n  }\n}","<br><br>\n<div class=\"chart-container\" \n  style=\"position: relative; width:50vw\">    \n  <canvas id=\"canvas\"></canvas>    \n</div> ","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}