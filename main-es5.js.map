{"version":3,"sources":["webpack:///src/app/@pages/access-denied/access-denied.component.ts","webpack:///src/app/@components/footer/footer.component.ts","webpack:///src/app/@components/footer/footer.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/@pages/home/home.component.ts","webpack:///src/app/@pages/not-found/not-found.component.ts","webpack:///src/app/@pages/blog/blog.component.ts","webpack:///src/app/@pages/blog/blog.component.html","webpack:///src/app/@core/module-import.guard.ts","webpack:///src/app/@pages/register/register.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/@pages/login/login.component.ts","webpack:///src/app/@core/core.module.ts","webpack:///src/app/app.module.ts","webpack:///src/app/@pages/privacy/privacy.component.ts","webpack:///src/app/@pages/terms/terms.component.ts","webpack:///src/app/@pages/terms/terms.component.html","webpack:///src/app/@pages/error/error.component.ts","webpack:///src/app/@shared/interfaces/checklist-database.module.ts","webpack:///src/app/@pages/server-alert/server-alert.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/@components/navbar/navbar.component.ts","webpack:///src/app/@components/navbar/navbar.component.html","webpack:///src/app/@core/angular-material.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AccessDeniedComponent","selector","template","styleUrls","FooterComponent","dialog","getPrivacy","getTerms","templateUrl","environment","production","HomeComponent","loading","NotFoundComponent","BlogComponent","throwIfAlreadyLoaded","parentModule","moduleName","Error","RegisterComponent","formBuilder","router","http","snackbar","registrationError","registrationErrorMessage","registerForm","group","email","required","password","minLength","maxLength","acceptedTerms","requiredTrue","AppComponent","title","LoginComponent","retryFunction","loginError","loginErrorMessage","loginForm","rememberMe","CoreModule","imports","providers","AppModule","declarations","entryComponents","bootstrap","schemas","PrivacyComponent","TermsComponent","ErrorComponent","dismiss","TodoItemNode","TodoItemFlatNode","TREE_DATA","Questions","Answers","Options","ChecklistDatabase","dataChange","initialize","data","buildFileTree","next","obj","level","Object","keys","reduce","accumulator","key","value","node","item","children","concat","parent","name","push","ServerAlertComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","exports","NavbarComponent","reportIssueModalVisibility","navigate","AngularMaterialModule","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-access-denied',\n  template:\n  `\n  <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-xs-12 col-center text-center\">\n        <img id=\"denied\" src=\"../assets/images/status-codes/403.png\"  alt=\"Picture from my collection.\" />\n        <h1>\n          Oops... Error!\n          <br> Status code: 403 - FORBIDDEN!\n          <br> Server says:\n          <br> 'You are not authorized!'.\n        </h1>\n      </div>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./access-denied.component.scss']\n})\nexport class AccessDeniedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n// import { TermsComponent } from 'src/app/@shared/components/terms/terms.component';\n// import { PrivacyComponent } from 'src/app/@shared/components/privacy/privacy.component';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n constructor(private dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n  \n  getPrivacy() {\n    // const $dialogRef =\n    // this.dialog.open(\n    //   PrivacyComponent,\n    //   {  width: '80vw', maxHeight: '100vh'}\n    // );\n    // $dialogRef.afterClosed().subscribe();\n  }\n  getTerms() {\n    // const $dialogRef =\n    // this.dialog.open(\n    //   TermsComponent,\n    //   {  width: '80vw', maxHeight: '100vh'}\n    // );\n    // $dialogRef.afterClosed().subscribe();\n  }\n}\n","<footer>\n    <div class=\"card card-image\">\n      <div class=\"text-center\">\n          <div class=\"py-5\">\n              <br>\n              <h2 id=\"all-rights\">\n                  Developed by (BG) Team &copy; \n                  <br>               \n                  <span id=\"innovations\">Seeing innovations since 2015</span>\n              </h2>\n              <h4>\n                All rights reserved!\n              </h4>\n              <h2 class=\"handyClock\"><input type=\"text\" id=\"clock\"></h2>\n              <br>\n              <div class=\"links\">\n                  <a href=\"https://www.facebook.com/baiganio.azurewebsites.net/\" target=\"_blank\">\n                      <img src=\"../assets/images/social-icons/facebook.ico\" alt=\"Facebook\" title=\"Facebook\">\n                  </a>\n                  <a href=\"https://github.com/BaiGanio\" target=\"_blank\">\n                      <img src=\"../assets//images/social-icons/octo.png\" alt=\"GitHub\" title=\"Github\">\n                  </a>\n                  <a href=\"https://www.youtube.com/channel/UCczegwwjd8YyeophFBIJ4EA?view_as=subscriber\" target=\"_blank\">\n                      <img src=\"../assets/images/social-icons/youtube.png\" alt=\"YouTube\" title=\"YouTube\">\n                  </a>\n              </div>\n              <br><br>\n              <li class=\"innerLinks\">\n                  <a (click)=\"getPrivacy()\">Privacy Policy</a>\n              </li>\n              <li class=\"innerLinks\" >\n                  <a (click)=\"getTerms()\">Terms of Use</a>\n              </li>\n            <br>\n          </div>\n      </div>\n    </div>\n  </footer>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  template:\n  `\n  <div style=\"text-align:center\">\n    <div class=\"content\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-center\">\n            <h1>\n              Welcome to BaiGanio\n            </h1>\n            <img src=\"./assets/images/app/Ganio.jpg\" alt=\"\">\n            <h1 id=\"comingSoon\">coming soon...</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: true }\"></ngx-loading>\n  `,\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  loading = false;\n  constructor() { }\n\n  ngOnInit() {\n    // this.loading = false;\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  template:\n  `\n  <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-xs col-center text-center\">\n        <!-- <h1 class=\"Guildof\">File not found</h1> -->\n        <img src=\"../assets/images/status-codes/404.ico\"  alt=\"Picture from my collection.\" />\n        <h1>\n          Ooops... \n          <span id=\"errorMessage\">\n          Page not found on the Server!\n          </span>\n        </h1>\n        <button mat-button color=\"primary\" routerLink='/home'> Back To Home</button>\n      </div>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.scss']\n})\nexport class BlogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>blog works!</p>","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n    if (parentModule) {\n        throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TermsComponent } from '../terms/terms.component';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  ipinfo: any;\n  loading = false;\n  registrationError = false;\n  registrationErrorMessage = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private http: HttpClient,\n    // private accountService: AccountService,\n    // private errorHandlerService: ErrorHandlerService,\n    private snackbar: MatSnackBar,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.registerForm =\n      this.formBuilder.group({\n        email: [\n          null,\n          [Validators.required, Validators.email]\n        ],\n        password: [\n          null,\n          [Validators.required, Validators.minLength(6), Validators.maxLength(50)]\n        ],\n        acceptedTerms: [\n          false,\n          [Validators.requiredTrue]\n        ]\n      });\n  }\n\n  register() {\n    // this.loading = true;\n    // this.http.get(environment.IPCheckingServiceUrl)\n    //   .subscribe(\n    //     response => {\n    //       this.ipinfo = response;\n    //     },\n    //     error => {\n    //       this.errorHandlerService.handleRequestError(error);\n    //     },\n    //     () => {\n    //       this.doRegistration();\n    //     }\n    // );\n  }\n\n  doRegistration() {\n    // this.accountService.registerUser({\n    //   Email: this.registerForm.value.email,\n    //   Password: this.registerForm.value.password,\n    //   LeadSource: 'WebApp',\n    //   IP: this.ipinfo.ip\n    // }).subscribe(\n    //     () => {\n    //       this.router.navigate(['/welcome']);\n    //       this.getSuccessfulSnackBar(this.registerForm.value.email);\n    //       this.loading = false;\n    //     }, error => {\n    //       this.registrationError = true;\n    //       this.loading = false;\n    //       this.registerForm.reset();\n    //       this.errorHandlerService.handleRequestError(error);\n    //     }\n    //   );\n  }\n\n  // getTerms() {\n  //   this.loading = true;\n  //   const $dialogRef = this.dialog.open(TermsComponent, null);\n  //   $dialogRef.afterClosed().subscribe();\n  //   this.loading = false;\n  // }\n\n  // private getRegistrationErrorMessage(error: string) {\n  //   this.registrationErrorMessage =\n  //   `Ops... <br/> ${error} <br/> Try once more?!?!`;\n  //   this.registrationError = true;\n  // }\n\n  // private getSuccessfulSnackBar(email: string) {\n  //   this.snackbar.open(\n  //     `Registration successful for ${email}!`,\n  //     'X',\n  //     {\n  //       duration: 3000,\n  //       horizontalPosition: 'center',\n  //       verticalPosition: 'top',\n  //       panelClass: 'successSnackbar'\n  //     }\n  //   );\n  // }\n\n  // dismiss() {\n  //   this.registrationError = false;\n  //   this.registrationErrorMessage = '';\n  // }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: ` \n    <app-navbar></app-navbar>\n  `\n})\nexport class AppComponent {\n  title = 'BaiGanio';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  retryFunction = null;\n  // user: UserViewModel;\n  loading = false;\n  loginError = false;\n  loginErrorMessage = '';\n\n  constructor(\n     private formBuilder: FormBuilder,\n     private router: Router,\n    // private backendService: BackendService,\n    // private authservice: AuthService,\n    // private errorHandlerService: ErrorHandlerService,\n    // private userDataService: UserDataService\n    ) { }\n\n  ngOnInit() {\n    this.loginForm =\n      this.formBuilder.group({\n        email: [\n          null,\n          [Validators.required, Validators.email]\n        ],\n        password: [\n          null,\n          [Validators.required, Validators.minLength(3)]\n        ],\n        rememberMe: [\n          true\n        ]\n      });\n\n    //this.authservice.clearUserToken();\n  }\n\n  // sendLoginRequest() {\n  //   this.loading = true;\n  //   this.backendService.getUserAccessToken(\n  //     this.loginForm.value.email,\n  //     this.loginForm.value.password\n  //   ).subscribe(\n  //       response => this.handleSuccess(response),\n  //       error => {\n  //         console.log(error);\n  //         this.loading = false;\n  //         this.loginForm.reset();\n  //         this.loginErrorMessage =\n  //         `Ops... <br/> ${error.error.error_description}! <br/>`;\n  //         this.loginError = true;\n  //       }\n  //     );\n  // }\n\n  // private handleSuccess(authToken): void {\n  //   if (this.loginForm.value.rememberMe) {\n  //     this.authservice.setUserTokenAndRemember(authToken);\n  //   } else {\n  //     this.authservice.clearUserToken();\n  //     this.authservice.userToken = authToken;\n  //   }\n  //   this.getUserByToken();\n  //   this.loading = false;\n  //   this.router.navigate(['/dashboard']);\n  // }\n\n  // getUserByToken(): void {\n  //   let userData: any;\n  //   let username = '';\n  //   this.userDataService.getUserByToken()\n  //     .subscribe(response => {\n  //         userData = response.body;\n  //         this.userDataService.setUserData(userData);\n  //         username =\n  //           userData.first_name != null && userData.last_name != null\n  //           ? userData.first_name + ' ' + userData.last_name\n  //           : userData.email;\n\n  //         this.updateLastLogin();\n  //       },\n  //       error => {\n  //         this.errorHandlerService.handleRequestError(error);\n  //       }\n  //     );\n  // }\n\n  // dismiss() {\n  //   this.loginError = false;\n  //   this.loginErrorMessage = '';\n  // }\n\n  // updateLastLogin() {\n  //   this.userDataService.updateLastLoginDate().subscribe(\n  //     () => {},\n  //     err => { console.log(err); }\n  //   );\n\n  // }\n\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { throwIfAlreadyLoaded } from './module-import.guard';\nimport { ChecklistDatabase } from '../@shared/interfaces/checklist-database.module';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    // AuthGuard,\n    // RoleGuard,\n    // JwtHelperService,\n    // BackendService,\n    // AuthService,\n    // UserDataService,\n    // EventBusService,\n    // ErrorHandlerService,\n    // UtilityService,\n    // CoursesService,\n    // StudentService,\n    // SubscriptionService,\n    // RoslynService,\n    // SignalRService,\n    // AccountService,\n    // TeacherService,\n    ChecklistDatabase\n  ]\n})\nexport class CoreModule {\n  constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BlogComponent } from './@pages/blog/blog.component';\nimport { HomeComponent } from './@pages/home/home.component';\nimport { NotFoundComponent } from './@pages/not-found/not-found.component';\nimport { ErrorComponent } from './@pages/error/error.component';\nimport { NavbarComponent } from './@components/navbar/navbar.component';\nimport { FooterComponent } from './@components/footer/footer.component';\nimport { AngularMaterialModule } from './@core/angular-material.module';\nimport { CoreModule } from './@core/core.module';\nimport { AccessDeniedComponent } from './@pages/access-denied/access-denied.component';\nimport { PrivacyComponent } from './@pages/privacy/privacy.component';\nimport { ServerAlertComponent } from './@pages/server-alert/server-alert.component';\nimport { TermsComponent } from './@pages/terms/terms.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    HomeComponent,\n    NavbarComponent,\n    ServerAlertComponent,\n    AccessDeniedComponent,\n    NotFoundComponent,\n    PrivacyComponent,\n    TermsComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    AngularMaterialModule,\n    CoreModule,\n  ],\n  entryComponents: [\n    TermsComponent,\n    PrivacyComponent,\n    ErrorComponent,\n  ],\n  providers: [CoreModule],\n  bootstrap: [AppComponent],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy',\n  templateUrl: './privacy.component.html',\n  styleUrls: ['./privacy.component.scss']\n})\nexport class PrivacyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n// import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n// import { BaseDialogData } from '../../interfaces/base-dialog.interface';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit {\n\ntitle: string;\n  constructor(\n    // public dialogRef: MatDialogRef<TermsComponent>,\n    // @Inject(MAT_DIALOG_DATA) public data: BaseDialogData,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    // this.user = this.data.model;\n    // this.title = this.data.title;\n  }\n\n  onRejectClick() {\n    // this.dialogRef.close();\n  }\n\n}\n","<div class=\"animated fadeInRightBig\">\n  <mdb-card>\n      <mdb-card-body>\n        <mdb-card-title >\n              <h1 id=\"title\">Terms Of Use</h1>\n              <!-- <h2 id=\"Second-Title\"> Use this page to detail your site's terms of use.</h2> -->\n        </mdb-card-title>\n        <mdb-card-text >\n          <p class=\"text\">Please read these <b>Terms</b> carefully before start using BaiGanio website operated by (BG) Team. \n              Your access to and use of the Service is conditioned on your acceptance of and compliance with these Terms. These Terms apply to all visitors, users and others who access or use the Service. \n              <br />\n              <br />\n              <b>\n                  By accessing or using the Service you agree to be bound by these Terms. If you disagree\n                  with any part of the terms then you may not access the Service.\n              </b>\n          </p>\n        </mdb-card-text>\n        <mdb-card-title>\n        <h3 class=\"Third-Title\">Changes</h3> \n        </mdb-card-title>\n        <mdb-card-text >\n          <p class=\"text\">  We reserve the right, at our sole discretion, to modify or replace these Terms at any time. If a\n                revision is material we will try to provide at least 30 days' notice prior to any new terms\n                taking effect. What constitutes a material change will be determined at our sole discretion.\n          </p>\n        </mdb-card-text>\n        <mdb-card-title>\n        <h3 class=\"Third-Title\">Contact Us</h3>\n        </mdb-card-title>\n        <mdb-card-text>\n          <p class=\"text\">If you have any questions about these Terms, please contact us.\n          </p>\n        </mdb-card-text>\n      </mdb-card-body>\n  </mdb-card>\n</div>","import { Component, OnInit, Inject } from '@angular/core';\n// import { BaseDialogData } from 'src/app/@shared/interfaces/base-dialog.interface';\nimport { ErrorModel } from 'src/app/@shared/interfaces/error-model.interface';\n\n@Component({\n  selector: 'app-error',\n  template:\n  `\n  <div class=\"text-center\">\n    <div>\n      <h3> Ops... Error shows up!!!\n        <img src=\"../assets/images/bd2.gif\" alt=\"\" />\n      </h3>\n      <hr/>\n      <h4>{{error.ErrorText}}</h4>\n      <div style=\"width:50%; margin:auto;\"  class=\"text-center\">\n        {{error.Message}}\n      </div>\n      <hr/>\n      <button\n      mat-stroked-button color='warn'\n        (click) = dismiss()\n        style=\"width:50%\">\n        Dismiss\n      </button>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  error: ErrorModel;\n\n  constructor(\n    // public dialogRef: MatDialogRef<ErrorComponent>,\n    // @Inject(MAT_DIALOG_DATA) public data: BaseDialogData\n  ) { }\n\n  ngOnInit() {\n    // this.error = this.data.model;\n  }\n\n  dismiss() {\n    // this.dialogRef.close();\n  }\n\n  // sendExceptionToAdmin() {\n  //   this.dialogRef.close(this.error.Error);\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for to-do item\n */\nexport class TodoItemNode {\n    children: TodoItemNode[];\n    item: string;\n  }\n\n  /** Flat to-do item node with expandable and level information */\nexport class TodoItemFlatNode {\n    item: string;\n    level: number;\n    expandable: boolean;\n  }\n\n  /**\n   * The Json object for to-do list data.\n   */\nconst TREE_DATA = {\n  Questions:{\n    Answers: [],\n    Options: []\n  }\n  //Test_Creation: {  \n    //   Type_Of_Test : {\n    //     Unknown:null,\n    //     Intermediate1:null,\n    //     Intermediate2:null,\n    //     Intermediate1Workbench:null,\n    //     Intermediate2Workbench:null,\n    //     Official:null\n    //   },\n    //   Questions:{\n    //     Answers: []\n    //   }\n    // }\n    // Reminders: [\n    //   'Cook dinner',\n    //   'Read the Material Design spec',\n    //   'Upgrade Application to Angular'\n    // ]\n  };\n\n  /**\n   * Checklist database, it can build a tree structured Json object.\n   * Each node in Json object represents a to-do item or a category.\n   * If a node is a category, it has children items and new items can be added under the category.\n   */\n@Injectable()\n  export class ChecklistDatabase {\n    dataChange = new BehaviorSubject<TodoItemNode[]>([]);\n\n    get data(): TodoItemNode[] { return this.dataChange.value; }\n\n    constructor() {\n      this.initialize();\n    }\n\n    initialize() {\n      // Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\n      //     file node as children.\n      const data = this.buildFileTree(TREE_DATA, 0);\n\n      // Notify the change.\n      this.dataChange.next(data);\n    }\n\n    /**\n     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n     * The return value is the list of `TodoItemNode`.\n     */\n    buildFileTree(obj: {[key: string]: any}, level: number): TodoItemNode[] {\n      return Object.keys(obj).reduce<TodoItemNode[]>((accumulator, key) => {\n        const value = obj[key];\n        const node = new TodoItemNode();\n        node.item = key;\n\n        if (value != null) {\n          if (typeof value === 'object') {\n            node.children = this.buildFileTree(value, level + 1);\n          } else {\n            node.item = value;\n          }\n        }\n\n        return accumulator.concat(node);\n      }, []);\n    }\n\n    /** Add an item to to-do list */\n    insertItem(parent: TodoItemNode, name: string) {\n      if (parent.children) {\n        parent.children.push({item: name} as TodoItemNode);\n        this.dataChange.next(this.data);\n      }\n    }\n\n    updateItem(node: TodoItemNode, name: string) {\n      node.item = name + 'm100';\n      this.dataChange.next(this.data);\n    }\n  }\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-alert',\n  template:\n  `\n  <div class=\"content\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-center text-center\">\n      <h1>\n        Oops... \n        <br> \n        ERROR 503!\n        <br>\n        <span id=\"errorMessage\">Our Servers are temporary unavailable!</span> \n        </h1>\n        <br>\n        <button routerLink='/home' class=\"btn\">\n          Back To Home\n        </button>\n      </div>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./server-alert.component.scss']\n})\nexport class ServerAlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccessDeniedComponent } from './@pages/access-denied/access-denied.component';\nimport { BlogComponent } from './@pages/blog/blog.component';\nimport { HomeComponent } from './@pages/home/home.component';\nimport { LoginComponent } from './@pages/login/login.component';\nimport { NotFoundComponent } from './@pages/not-found/not-found.component';\nimport { RegisterComponent } from './@pages/register/register.component';\nimport { ServerAlertComponent } from './@pages/server-alert/server-alert.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n      path: 'blog',\n      component: BlogComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'server-alert',\n    component: ServerAlertComponent\n  },\n  {\n    path: '403',\n    component: AccessDeniedComponent\n  } ,\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n// import { UserDataService } from 'src/app/@services/user-data.service';\n// import { AuthService } from 'src/app/@services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  storedUser: any;\n  reportIssueModalVisibility = false;\n\n  constructor(\n    private router: Router,\n    // private authService: AuthService,\n    // private userDataService: UserDataService,\n  ) {}\n\n  ngOnInit() {\n    // if (this.authService.isAuthenticated()) {\n    //   if (this.storedUser) {\n    //     console.log('here');\n    //     return;\n    //   } else {\n    //     this.userDataService.getUserByToken().subscribe(\n    //       response => {\n    //         this.storedUser = response.body;\n    //         this.userDataService.setUserData(this.storedUser);\n    //       }\n    //     );\n    //   }\n    // }\n  }\n\n  isUserLogged(): boolean {\n    return false;\n    //return this.authService.isAuthenticated();\n  }\n\n  logOut() {\n    //this.userDataService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<mat-drawer-container autosize>\n    <mat-drawer #sidenav id=\"sideNavigation\" mode=\"over\">\n      <mat-toolbar color=\"primary\">\n        <span class=\"brandLogo\">\n          <a routerlink=\"/home\">\n            <img alt=\"(BG)\" class=\"d-inline-block align-middle\" height=\"50\" src=\"./assets/images/app/Ganio.jpg\">\n            BaiGanio\n          </a>\n        </span>\n        <span>\n          <m-link (click)=\"sidenav.toggle()\">\n            <i class=\"fas fa-times\"></i>\n          </m-link>\n        </span>\n      </mat-toolbar>\n      <mat-list (click)=\"sidenav.close()\">\n        <a mat-list-item routerLink=\"/home\"> Home </a>\n        <div *ngIf='isUserLogged()'>\n          <a mat-list-item routerLink=\"/dashboard\"> Dashboard </a>\n          <a mat-list-item routerLink=\"/profile\"> Profile </a>\n        </div>\n        <a mat-list-item routerLink=\"/subscriptions\"> Subscriptions </a>\n        <a mat-list-item routerLink=\"/courses\"> Courses </a>\n        <a mat-list-item routerLink=\"/blogs\"> Blogs </a>\n        <!-- <a mat-list-item routerLink=\"/teachers\"> Teachers </a>\n        <a mat-list-item routerLink=\"/posts\"> Blogs </a> -->\n      </mat-list>\n    </mat-drawer>\n  \n    <div id=\"main\">\n      <mat-toolbar color=\"primary\">\n        <span id=\"openNav\">\n          <a (click)=\"sidenav.toggle()\">\n            <i class=\"fas fa-bars\"></i>\n          </a>\n        </span>\n        <span class=\"actions\">\n          <div *ngIf='isUserLogged(); else signBox'>\n            <!-- <a class=\"mr-1 align-middle\">\n              <span class=\"badge mr-1\">0 </span><i class=\"fa fa-bell\"></i>\n            </a> -->\n            <button mat-button [matMenuTriggerFor]=\"userMenu\">\n              Welcome, {{ storedUser?.username !== null ? storedUser?.username : storedUser?.email }}!\n            </button>\n            <mat-menu #userMenu=\"matMenu\">\n              <button mat-menu-item (click)='logOut()'>\n                <b>Logout</b>\n              </button>\n            </mat-menu>\n          </div>\n          <ng-template #signBox>\n            <a class=\"mr-3\" routerLink='/login'>\n              <i class=\"fas fa-sign-in-alt\"></i> Sign In\n            </a>\n            <a routerLink='/register'>\n              <i class=\"fa fa-user-plus\"></i> Sign Up\n            </a>\n          </ng-template>\n        </span>\n      </mat-toolbar>\n      <br>\n      <div class=\"container-fluid\">\n        <router-outlet></router-outlet>\n      \n      <br>\n      <app-footer></app-footer>\n    </div>\n    </div>\n  </mat-drawer-container>\n  ","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    MatSidenavModule\n  ]\n})\nexport class AngularMaterialModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}