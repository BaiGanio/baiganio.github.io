{"version":3,"sources":["webpack:///src/app/@shared/components/charts/polararea/polararea.component.ts","webpack:///src/app/@shared/components/charts/polararea/polararea.component.html","webpack:///src/app/@modules/courses/components/course-preview/course-preview.component.ts","webpack:///src/app/@modules/courses/components/course-preview/course-preview.component.html","webpack:///src/app/@core/role.guard.ts","webpack:///src/app/@shared/pages/privacy/privacy.component.ts","webpack:///src/app/@services/roslyn.service.ts","webpack:///src/app/@shared/components/navbar/navbar.component.ts","webpack:///src/app/@shared/components/navbar/navbar.component.html","webpack:///src/app/@shared/components/charts/linechart/linechart.component.ts","webpack:///src/app/@shared/components/charts/linechart/linechart.component.html","webpack:///src/app/@services/error-handler.service.ts","webpack:///src/app/@modules/courses/pages/course-details/course-details.component.ts","webpack:///src/app/@modules/courses/pages/course-details/course-details.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/@modules/courses/pages/my-courses/my-courses.component.ts","webpack:///src/app/@modules/courses/pages/my-courses/my-courses.component.html","webpack:///src/app/@services/subscription.service.ts","webpack:///src/app/@services/utility.service.ts","webpack:///src/app/@modules/courses/components/score/score.component.ts","webpack:///src/app/@modules/courses/components/score/score.component.html","webpack:///src/app/@pages/home/home.component.ts","webpack:///src/app/@services/backend.service.ts","webpack:///src/app/@modules/users/models/user-view-model.module.ts","webpack:///src/app/@pages/blog/blog.component.ts","webpack:///src/app/@pages/blog/blog.component.html","webpack:///src/app/@modules/courses/courses.module.ts","webpack:///src/app/@core/module-import.guard.ts","webpack:///src/app/@services/auth.service.ts","webpack:///src/app/@shared/pages/access-denied/access-denied.component.ts","webpack:///src/app/@services/user-data.service.ts","webpack:///src/app/@shared/models/error-model.module.ts","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/@pages/register/register.component.ts","webpack:///src/app/@services/event-bus.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/@pages/login/login.component.ts","webpack:///src/app/@modules/courses/courses.component.ts","webpack:///src/app/@modules/courses/courses.component.html","webpack:///src/app/@core/core.module.ts","webpack:///src/app/@services/account.service.ts","webpack:///src/app/@shared/pages/error/error.component.ts","webpack:///src/app/@services/signalR.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/@modules/subscriptions/subscriptions.module.ts","webpack:///src/app/@core/auth.guard.ts","webpack:///src/app/@modules/subscriptions/subscriptions-routing.module.ts","webpack:///src/app/@modules/courses/components/in-class/in-class.component.ts","webpack:///src/app/@modules/courses/components/in-class/in-class.component.html","webpack:///src/app/@shared/components/charts/piechart/piechart.component.ts","webpack:///src/app/@shared/components/charts/piechart/piechart.component.html","webpack:///src/app/@modules/courses/courses-routing.module.ts","webpack:///src/app/@services/courses.service.ts","webpack:///src/app/@modules/courses/models/course-preview-model.module.ts","webpack:///src/app/@shared/components/footer/footer.component.ts","webpack:///src/app/@shared/components/footer/footer.component.html","webpack:///src/app/@shared/pages/not-found/not-found.component.ts","webpack:///src/app/@modules/subscriptions/subscriptions.component.ts","webpack:///src/app/@modules/subscriptions/subscriptions.component.html","webpack:///src/app/@modules/subscriptions/models/subscription-preview-model.module.ts","webpack:///src/app/@shared/pages/terms/terms.component.ts","webpack:///src/app/@shared/pages/terms/terms.component.html","webpack:///src/app/@shared/components/charts/doughnut/doughnut.component.ts","webpack:///src/app/@shared/components/charts/doughnut/doughnut.component.html","webpack:///src/app/@shared/interfaces/checklist-database.module.ts","webpack:///src/app/@services/student.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/@services/teacher.service.ts","webpack:///src/app/@core/angular-material.module.ts","webpack:///src/app/@shared/pages/server-alert/server-alert.component.ts","webpack:///src/app/@shared/components/charts/barchart/barchart.component.ts","webpack:///src/app/@shared/components/charts/barchart/barchart.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["PolarareaComponent","httpClient","url","Player","Run","get","subscribe","result","forEach","x","push","playerName","run","polarareachart","type","data","labels","datasets","borderColor","backgroundColor","options","legend","display","scales","xAxes","yAxes","selector","templateUrl","CoursePreviewComponent","dialogRef","formBuilder","course","model","console","log","close","styleUrls","RoleGuard","authService","router","next","allowedRoles","payload","isExpectedRole","navigate","providedIn","PrivacyComponent","RoslynService","backendService","backendRequest","NavbarComponent","reportIssueModalVisibility","LinechartComponent","Linechart","ErrorHandlerService","dialog","userService","snackbar","loading","error","status","$dialogRef","open","CourseDetailsComponent","activeTab","backToMyCourses","environment","production","envName","appUrl","apiUrl","idsUrl","IPCheckingServiceUrl","bgapiSignalRNotyfyHub","identityServerClientCredentials","client_id","client_secret","scope","grant_type","identityServerUserCredentials","apiKey","routesRequiringUserToken","MyCoursesComponent","route","isCourseDetails","courses","Array","snapshot","params","id","courseId","showCourseDetails","length","getCoursesPriview","SubscriptionService","token","code","smallDeviceAverageSize","UtilityService","testKey","storage","window","localStorage","setItem","removeItem","w","d","document","e","documentElement","g","getElementsByTagName","width","innerWidth","clientWidth","height","innerHeight","clientHeight","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","value","setErrors","ScoreComponent","chartOptions","responsive","chartType","chartData","chartLabels","chartColors","hoverBorderColor","hoverBorderWidth","hoverBackgroundColor","students","jo","HomeComponent","template","BackendService","http","authservice","requestType","requestTarget","requestData","useUserToken","authToken","req","getClientAccessToken","pipe","response","access_token","baseBackendRequest","post","headers","getContentHeaders","observe","is4credentials","set","body","email","password","contentHeaders","pickAuthenticationToken","userToken","UserViewModel","username","firstname","lastname","isEmailConfirmed","typeOfUser","createdOn","modifiedOn","leadSource","image","roles","subscriptions","Id","Username","Email","FirstName","LastName","IsEmailConfirmed","TypeOfUser","CreatedOn","ModifiedOn","LeadSource","Image","Roles","Subscriptions","BlogComponent","CoursesModule","imports","declarations","entryComponents","exports","schemas","throwIfAlreadyLoaded","parentModule","moduleName","Error","AuthService","jwtHelper","tokenKeyName","sessionStorage","getItem","clearUserToken","isTokenExpired","decodeToken","decodedToken","includes","role","uToken","AccessDeniedComponent","UserDataService","eventBusService","userData","emitUpdateUserData","userId","ErrorModel","err","ErrorText","ErrorDescription","error_description","Message","message","Name","name","OK","ok","Status","StatusText","statusText","Url","map","webpackContext","webpackContextResolve","__webpack_require__","o","keys","webpackContextKeys","Object","resolve","module","RegisterComponent","registrationError","registrationErrorMessage","registerForm","group","required","minLength","maxLength","acceptedTerms","requiredTrue","EventBusService","changeRoute","retryRequest","unknownError","updateUserData","fetchedDashboardData","emit","AppComponent","title","LoginComponent","retryFunction","loginError","loginErrorMessage","loginForm","rememberMe","CoursesComponent","isStudent","flagEnrollSuccess","msgLogIn","fetchingMsg","msgIncompleteStudent","totalStudents","cId","element","EnrolledUserId","storedUser","Description","Teachers","StartDate","EndDate","IsActive","IsElectable","EnrolledStudents","maxHeight","afterClosed","setTimeout","location","reload","CoreModule","providers","AccountService","ErrorComponent","dismiss","SignalRService","errorHandlerService","AppModule","forRoot","config","tokenGetter","jwtTokenGetter","bootstrap","SubscriptionsModule","AuthGuard","isAuthenticated","getUserData","undefined","getUserByToken","setUserData","routes","path","children","component","SubscriptionsRoutingModule","forChild","InClassComponent","errMsg","studentLogins","isLetMeInActive","courseStartDate","Date","courseEndDate","trackIP","PiechartComponent","piechart","fill","CoursesRoutingModule","CoursesService","CoursePreviewModel","description","teachers","startDate","endDate","isActive","isElectable","enrolledStudents","enrolledUserId","FooterComponent","getPrivacy","getTerms","NotFoundComponent","SubscriptionsComponent","subscriptionsService","userDataService","errorMsg","subscriptionId","successfulConfirmation","failedConfirmation","notificationRequest","panelOpenState","isUserConfirmingSubscription","totalUsersInSubscr","haveConfirmedSubscription","getAllSubscriptions","s","Type","TotalSubscribers","totalSubscribers","ConfirmedSubscribers","confirmedSubscribers","PendingSubscribers","pendingSubscribers","CancelledSubscribers","cancelledSubscribers","u","sendRequestForSub","storedUserInit","subscriptionsInit","String","split","confirmSubscription","confirmRequestForSub","subscription","sId","subscription_id","SubscriptionPreviewModel","TermsComponent","DoughnutComponent","doughnutchart","TodoItemNode","TodoItemFlatNode","TREE_DATA","Questions","Answers","Options","ChecklistDatabase","dataChange","initialize","buildFileTree","obj","level","reduce","accumulator","key","node","item","concat","parent","StudentService","redirectTo","pathMatch","loadChildren","then","m","AppRoutingModule","TeacherService","teacherId","AngularMaterialModule","ServerAlertComponent","BarchartComponent","barchart","bootstrapModule","webpackEmptyAsyncContext","Promise"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-polararea',\n  templateUrl: './polararea.component.html'\n})\nexport class PolarareaComponent implements OnInit {\n  url = 'https://localhost:44344/api/fake/Chart/';\n  data: any;\n  Player = [];\n  Run = [];\n  polarareachart: any;\n    constructor(private httpClient: HttpClient) { }\n\n    ngOnInit() {\n      this.httpClient.get(this.url).subscribe((result: any) => {\n        result.forEach(x => {\n          this.Player.push(x.playerName);\n          this.Run.push(x.run);\n        });\n        this.polarareachart = new Chart('canvas', {\n          type: 'polarArea',\n          data: {\n            labels: this.Player,\n\n            datasets: [\n              {\n                data: this.Run,\n                borderColor: '#3cb371',\n                backgroundColor: [\n                  '#3cb371',\n                  '#0000FF',\n                  '#9966FF',\n                  '#4C4CFF',\n                  '#00FFFF',\n                  '#f990a7',\n                  '#aad2ed',\n                  '#FF00FF',\n                  'Blue',\n                  'Red',\n                  'Blue'\n                ],\n              }\n            ],\n          },\n          options: {\n            legend: {\n              display: false\n            },\n            scales: {\n              xAxes: [{\n                display: false\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n      });\n    }\n  }\n","<br><br>\n<div class=\"chart-container\" \n  style=\"position: relative; width:50vw\">    \n  <canvas id=\"canvas\"></canvas>    \n</div> ","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormBuilder } from '@angular/forms';\nimport { BaseDialogData } from 'src/app/@shared/interfaces/base-dialog.interface';\nimport { CoursePreviewModel } from '../../models/course-preview-model.module';\n\n@Component({\n  selector: 'app-course-preview',\n  templateUrl: './course-preview.component.html',\n  styleUrls: ['./course-preview.component.scss']\n})\nexport class CoursePreviewComponent implements OnInit {\n  course: CoursePreviewModel;\n  constructor(\n    public dialogRef: MatDialogRef<CoursePreviewComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: BaseDialogData,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    this.course = this.data.model;\n    console.log(this.course);\n  }\n\n  onRejectClick() {\n    this.dialogRef.close();\n  }\n\n}\n","<div class=\"col-md-12 col-center text-center\">\n    <div class=\"card\">\n      <br/>\n      <h1>{{ course.Name }}</h1>\n      <div class=\"card-body row\">\n        <div class=\"card col-md-3\">\n          <div class=\"card-body\">\n            <img src='{{ course.Image }}' class=\"img-thumbnail img-fluid\" alt=\"Sample image\">\n            <hr>\n            <h5>\n              Enrolled so far :\n              <span class=\"badge badge-primary\"> {{course.EnrolledStudents || 0}}</span>\n            </h5>\n            <hr/>\n            <!-- <p><b>Start @ </b> {{course.StartDate | date: 'dd-MMM-yy' }}\n              <br>\n              <b>End @ </b> {{course.EndDate | date: 'dd-MMM-yy' }}</p> -->\n           \n            <!-- <div style=\"text-align: center;\">\n                <br/>\n                <p id=\"statusHolder\">Active: <span>{{course.IsActive}}</span></p>\n                <p id=\"statusHolder\">Is Electable: <span>{{course.IsElectable}}</span></p>               \n                <hr/>\n                <p><b>Last updated on :</b> {{course.ModifiedOn | date: 'dd-MMM-yy' }}</p>\n            </div> -->\n          </div>\n        </div>\n        <div class=\"card col-md-9\">\n          <div class=\"card-body\">\n            <!-- <h4 style=\"text-align:left;\">Quick info :</h4>\n              <hr/> -->\n              <h5 style=\"text-align:left;\" [innerHTML]=\"course.Description\"></h5>\n             \n          </div>\n        </div>\n        <!-- <div class=\"card col-md-3\">\n          <div class=\"card-body\">\n            <h5 style=\"text-align: center;\">Lead Teachers</h5>\n            <hr/>\n              <div class=\"row\">\n                  <div class=\"col-md-3\" id=\"roundImg\"> \n                      <img src='/assets/images/no-profile-img.png' class=\"img-thumbnail img-fluid\" alt=\"Sample image\" style=\"border-radius: 50%;\">\n                    </div>\n                    <div class=\"col-md-9\"> \n                        <p >Lyuben Kikov</p>\n                      </div>\n                      <br/>\n              </div>\n          </div>\n        </div> -->\n        <div class=\"col-12 col-center text-center\">\n            <hr/>\n            <p>\n              * You need to have confirmed Student subscription if you want to enroll for the course.\n              <!-- <br>\n              * Course is electable one month before start date. -->\n            </p>\n          </div>\n      </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\nimport { AuthService } from '../@services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  roles: any;\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate(next: ActivatedRouteSnapshot) {\n    const allowedRoles = next.data.allowedRoles;\n    const payload = this.authService.isExpectedRole(allowedRoles);\n    if (!payload) {\n      // if not authorized, show access denied message\n      this.router.navigate(['/403']);\n    }\n    return payload;\n  }\n\n  canActivateChild(next: ActivatedRouteSnapshot) {\n    const allowedRoles = next.data.allowedRoles;\n    const payload = this.authService.isExpectedRole(allowedRoles);\n    if (!payload) {\n      // if not authorized, show access denied message\n      this.router.navigate(['/403']);\n    }\n    return payload;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy',\n  templateUrl: './privacy.component.html',\n  styleUrls: ['./privacy.component.scss']\n})\nexport class PrivacyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class RoslynService {\n    constructor(private backendService: BackendService) { }\n\n    sendCodeForCompile(data: any): Observable<any> {\n        return this.backendService.backendRequest('post', 'Roslyn/PlainTextCodeCompiler', data);\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n// import { UserDataService } from 'src/app/@services/user-data.service';\n// import { AuthService } from 'src/app/@services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n  storedUser: any;\n  reportIssueModalVisibility = false;\n\n  constructor(\n    private router: Router,\n    // private authService: AuthService,\n    // private userDataService: UserDataService,\n  ) {}\n\n  ngOnInit() {\n    // if (this.authService.isAuthenticated()) {\n    //   if (this.storedUser) {\n    //     console.log('here');\n    //     return;\n    //   } else {\n    //     this.userDataService.getUserByToken().subscribe(\n    //       response => {\n    //         this.storedUser = response.body;\n    //         this.userDataService.setUserData(this.storedUser);\n    //       }\n    //     );\n    //   }\n    // }\n  }\n\n  isUserLogged(): boolean {\n    return false;\n    //return this.authService.isAuthenticated();\n  }\n\n  logOut() {\n    //this.userDataService.logout();\n    this.router.navigate(['/login']);\n  }\n}\n","<mat-drawer-container autosize>\n    <mat-drawer #sidenav id=\"sideNavigation\" mode=\"over\">\n      <mat-toolbar color=\"primary\">\n        <span class=\"brandLogo\">\n          <a routerlink=\"/home\">\n            <img alt=\"(BG)\" class=\"d-inline-block align-middle\" height=\"50\" src=\"./assets/images/app/Ganio.jpg\">\n            BaiGanio\n          </a>\n        </span>\n        <span>\n          <m-link (click)=\"sidenav.toggle()\">\n            <i class=\"fas fa-times\"></i>\n          </m-link>\n        </span>\n      </mat-toolbar>\n      <mat-list (click)=\"sidenav.close()\">\n        <a mat-list-item routerLink=\"/home\"> Home </a>\n        <div *ngIf='isUserLogged()'>\n          <mat-divider></mat-divider>\n          <a mat-list-item routerLink=\"/dashboard\"> Dashboard </a>\n          <a mat-list-item routerLink=\"/profile\"> Profile </a>\n          <mat-divider></mat-divider>\n        </div>\n        <a mat-list-item routerLink=\"/subscriptions\"> Subscriptions </a>\n        <a mat-list-item routerLink=\"/courses\"> Courses </a>\n        <a mat-list-item routerLink=\"/teachers\"> Teachers </a>\n        <a mat-list-item routerLink=\"/blogs\"> Blog </a>\n        <a mat-list-item routerLink=\"/posts\"> Videos </a>\n        <a mat-list-item routerLink=\"/posts\"> Events </a>\n      </mat-list>\n    </mat-drawer>\n  \n    <div id=\"main\">\n      <mat-toolbar color=\"primary\">\n        <span id=\"openNav\">\n          <a (click)=\"sidenav.toggle()\">\n            <i class=\"fas fa-bars\"></i>\n          </a>\n        </span>\n        <span class=\"actions\">\n          <div *ngIf='isUserLogged(); else signBox'>\n            <!-- <a class=\"mr-1 align-middle\">\n              <span class=\"badge mr-1\">0 </span><i class=\"fa fa-bell\"></i>\n            </a> -->\n            <button mat-button [matMenuTriggerFor]=\"userMenu\">\n              Welcome, {{ storedUser?.username !== null ? storedUser?.username : storedUser?.email }}!\n            </button>\n            <mat-menu #userMenu=\"matMenu\">\n              <button mat-menu-item (click)='logOut()'>\n                <b>Logout</b>\n              </button>\n            </mat-menu>\n          </div>\n          <ng-template #signBox>\n            <a class=\"mr-3\" routerLink='/login'>\n              Login\n            </a>\n            <a class=\"mr-3\" routerLink='/register'>\n              Register\n            </a>\n          </ng-template>\n        </span>\n      </mat-toolbar>\n      <br>\n      <div class=\"container-fluid\">\n        <router-outlet></router-outlet>\n        <br>\n        <app-footer></app-footer>\n      </div>\n    </div>\n  </mat-drawer-container>\n  ","\nimport { HttpClient } from '@angular/common/http';\nimport { Data } from '../data';\nimport { Component, OnInit } from '@angular/core';\nimport * as Chart from 'chart.js';\n@Component({\n  selector: 'app-linechart',\n  templateUrl: './linechart.component.html'\n})\nexport class LinechartComponent implements OnInit {\n\n  url = 'https://localhost:44344/api/fake/Chart/';\n  data: any;\n  Player = [];\n  Run = [];\n  Linechart: any;\n  constructor(private httpClient: HttpClient) { }\n\n  ngOnInit() {\n    this.httpClient.get(this.url).subscribe((result: any) => {\n      result.forEach(x => {\n        this.Player.push(x.playerName);\n        this.Run.push(x.run);\n      });\n      this.Linechart = new Chart('canvas', {\n        type: 'line',\n        data: {\n          labels: this.Player,\n\n          datasets: [\n            {\n              data: this.Run,\n              borderColor: '#3cb371',\n              backgroundColor: '#0000FF',\n            }\n          ]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              display: true\n            }],\n            yAxes: [{\n              display: true\n            }],\n          }\n        }\n      });\n    });\n  }\n}\n","<br><br>\n<div class=\"chart-container\" \n  style=\"position: relative; width:50vw\">    \n  <canvas id=\"canvas\"></canvas>    \n</div>   ","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserDataService } from './user-data.service';\nimport { ErrorComponent } from '../@shared/pages/error/error.component';\nimport { ErrorModel } from '../@shared/models/error-model.module';\n\n@Injectable()\nexport class ErrorHandlerService {\n  loading = true;\n  user: any;\n  constructor(\n    private router: Router,\n    private dialog: MatDialog,\n    private userService: UserDataService,\n    private snackbar: MatSnackBar) { }\n\n  handleRequestError(error) {\n    const status = error.status;\n    // if (error.error.type === 'error' && status === 0) {\n    if (status === 0) {\n      return this.router.navigate(['/server-alert']);\n    } else if (status) {\n      const $dialogRef =\n        this.dialog.open(\n            ErrorComponent,\n            { data: { model: new ErrorModel(error) } }\n        );\n      // $dialogRef.afterClosed().subscribe(\n      //   response => {\n      //     if (response) {\n      //       this.loading = true;\n      //       this.user = this.userService.getUserData();\n      //       const sendErrorToAdmin = {\n      //           SenderEmail:  this.user.email,\n      //           ErrorReport: error.error ,\n      //           MessageReport: error.message\n      //         };\n      //       this.userService.sendExceptionToAdmin(sendErrorToAdmin)\n      //         .subscribe(() => {\n      //           this.loading = false;\n      //           // show info\n      //           this.snackbar.open('Message sent successful.', 'OK', {\n      //             duration: 5000,\n      //                         verticalPosition: 'top',\n      //             panelClass: 'successSnackbar'\n      //           });\n      //       }, () => {\n      //         this.loading = false;\n      //         // show info\n      //         this.snackbar.open('Message can\\'t be send!', 'X', {\n      //           duration: 5000,\n      //           horizontalPosition: 'right',\n      //           verticalPosition: 'top',\n      //           panelClass: 'dangerSnackbar'\n      //         });\n      //       });\n      //       // this.handleRequestError(error);\n      //     }\n      //   }\n      // );\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-course-details',\n  templateUrl: './course-details.component.html',\n  styleUrls: ['./course-details.component.scss']\n})\nexport class CourseDetailsComponent implements OnInit {\n  activeTab = 0;\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  backToMyCourses() {\n    this.router.navigate(['/courses/preview']);\n  }\n}\n","<button  \n    type=\"button\"               \n    class=\"btn btn-outline-info ml-3\" \n    (click) = 'backToMyCourses()'>\n    Go 2 My Enrollments\n</button> \n\\  \n<button  \n    type=\"button\"                        \n    class=\"btn btn-outline-info ml-3\" \n    routerLink='/dashboard'>\n    Go 2 Dashboard\n</button>  \n\\  \n<button  \n    type=\"button\"                        \n    class=\"btn btn-outline-info ml-3\" \n    routerLink='/profile'>\n    Go 2 Profile\n</button> \n<p class=\"h2 text-center mb-4\">Course Progress</p>\n<mat-tab-group [selectedIndex]=\"activeTab\">   \n    <mat-tab label=\"Overall Score\">\n        <ng-template matTabContent>\n            <!-- <app-linechart></app-linechart> -->\n            <!-- <app-barchart></app-barchart> -->\n            <!-- <app-piechart></app-piechart> -->\n            <!-- <app-doughnut></app-doughnut> -->\n            <app-polararea></app-polararea>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"In Class\">\n        <ng-template matTabContent>\n            <app-in-class></app-in-class>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Homeworks\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Self Motivation\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Exam 1\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Exam 2\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Final Exam\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Chat Room\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n    <mat-tab label=\"Resources\">\n        <ng-template matTabContent>\n        <app-homeworks></app-homeworks>\n        </ng-template>\n    </mat-tab>\n</mat-tab-group>\n<br><br>","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  envName: 'local',\n  appUrl: '',\n  apiUrl: '',\n  idsUrl: '',\n  IPCheckingServiceUrl: '',\n  bgapiSignalRNotyfyHub: '',\n  identityServerClientCredentials: {\n      client_id: '',\n      client_secret: '',\n      scope: '',\n      grant_type: ''\n  },\n  identityServerUserCredentials: {\n      client_id: '',\n      client_secret: '',\n      scope: '',\n      grant_type: ''\n  },\n  apiKey: '',\n  routesRequiringUserToken: [\n      '',\n      '',\n      ''\n  ]\n};\n","import { Component, OnInit } from '@angular/core';\nimport { CoursePreviewModel } from '../../models/course-preview-model.module';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-my-courses',\n  templateUrl: './my-courses.component.html',\n  styleUrls: ['./my-courses.component.scss']\n})\nexport class MyCoursesComponent implements OnInit {\n  loading = false;\n  isCourseDetails = false;\n  courseId: any;\n  courses = new Array<CoursePreviewModel>();\n\n  constructor(\n    // private courseService: CoursesService,\n    //           private errorHandlerService: ErrorHandlerService,\n              private route: ActivatedRoute,\n              private router: Router ) { }\n\n  ngOnInit() {\n    if (this.route.snapshot.params.id) {\n      this.courseId = this.route.snapshot.params.id;\n      this.showCourseDetails(this.courseId);\n    } else {\n      if (this.courses.length === 0) {\n        this.getCoursesPriview();\n      }\n    }\n  }\n\n  getCoursesPriview() {\n    this.loading = true;\n    // this.courseService.getCoursesByUserId().subscribe(response => {\n    //   response.body.forEach(element => {\n    //     const c = {\n    //       Id: element.courseId,\n    //       Name: element.courseName,\n    //       Teachers: element.teachers,\n    //       Description: element.description,\n    //       StartDate: element.start_date,\n    //       EndDate: element.end_date,\n    //       ModifiedOn: element.modified_on,\n    //       Image: element.image,\n    //       IsActive: element.active,\n    //       EnrolledStudents: element.enrolled_students\n    //     };\n    //     this.courses.push(c as CoursePreviewModel);\n    //   });\n    // },\n    // error => {\n    //   this.errorHandlerService.handleRequestError(error);\n    //   this.loading = false;\n    // },\n    // () => { this.loading = false; });\n  }\n\n  showCourseDetails(courseId: string): void {\n    console.log(courseId);\n    this.router.navigate(['/courses/preview', courseId]);  \n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-12\">\n        <h2 class=\"text-center\">My Enrollments</h2>     \n        <hr>\n    </div>\n    <div *ngFor='let c of courses' class=\"col-md-4 col-center text-center\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-7\">\n                        <img src='{{ c.Image }}' class=\"img-thumbnail img-fluid\" alt=\"Sample image\">\n                        <h4>{{ c.Name }}</h4>\n                        <hr style=\"width: 60%; color: blue;\">  \n                        <h4>(w3) Progress: <br> 81% </h4>\n                    </div>                 \n                    <div class=\"col-md-5\">\n                        <p>Homeworks : 74%</p>\n                        <p>LetMeIn : 35 points</p>\n                        <p>Self Motivation : 20 points</p>\n                        <p>Intermediate Exam 1: 80%</p>\n                        <p>Intermediate Exam 2: 60%</p>\n                        <p>Final Exam : 90%</p>\n                        <hr style=\"width: 60%; color: blue;\">      \n                        <div class=\"text-center\">\n                            <button  \n                                type=\"button\"                        \n                                class=\"btn btn-outline-success\"\n                                (click) = 'showCourseDetails(c.Id)'>\n                                <b>Detailed view</b>\n                            </button>\n                            <br><br>\n                        </div>\n                    </div>\n                </div>  \n            </div>    \n        </div>  \n    </div>\n</div>\n\n<ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: true }\"></ngx-loading>","import { Injectable } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class SubscriptionService {\n\n  constructor(private backendService: BackendService) { }\n\n  getAllSubscriptions(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Subscriptions', null, false);\n  }\n\n  getUserActiveSubscriptions(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Subscriptions/GetUserActiveSubscriptions', null, true);\n  }\n\n  sendRequestForSub(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Subscriptions/Request4Subscription', data, true);\n  }\n\n  confirmRequestForSub(token: any): Observable<any> {\n    const data = { code: token };\n    return this.backendService.backendRequest('get', 'Subscriptions/Confirm', data, false);\n  }\n\n  getSubscriptionById(id: string): Observable<any> {\n    return this.backendService.backendRequest('get', 'Subscriptions/' + id);\n  }\n\n  getSubscriptionsWithConfirmedUserIds(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Subscriptions/WithConfirmedUserIds', null, true);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nconst smallDeviceAverageSize = 1800;\n\n@Injectable()\nexport class UtilityService {\n\n  constructor() { }\n\n  isLocalStorageNameSupported(): Boolean {\n    const testKey = 'test', storage = window.localStorage;\n    try {\n      storage.setItem(testKey, '1');\n      storage.removeItem(testKey);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n\n  isSmallDevice(): boolean {\n    const w = window,\n      d = document,\n      e = d.documentElement,\n      g = d.getElementsByTagName('body')[0],\n      width = w.innerWidth || e.clientWidth || g.clientWidth,\n      height = w.innerHeight || e.clientHeight || g.clientHeight;\n\n    return width + height < smallDeviceAverageSize;\n  }\n\n  mustMatchFormValidator(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        // return if another validator has already found an error on the matchingControl\n        return;\n      }\n\n      // set error on matchingControl if validation fails\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-score',\n  templateUrl: './score.component.html'\n})\nexport class ScoreComponent implements OnInit {\n  // storedUser = new UserViewModel();\n  // student = new StudentViewModel();\n   courses: any; // = new Array<CourseViewModel>();\n  // studentCourses = new Array<CourseViewModel>();\n\n  public chartOptions: any = {\n    responsive: true\n  };\n  public chartType = 'pie';\n  // public chartData: Array<any> = [300, 50, 100];\n  public chartData: Array<any> = [1, 1, 1];\n  public chartLabels: Array<any> = ['Standalone work', 'Current Exams', 'Final Exam'];\n  public chartColors: Array<any> = [{\n      hoverBorderColor: [\n        'rgba(0, 0, 0, 0.1)',\n        'rgba(0, 0, 0, 0.1)',\n        'rgba(0, 0, 0, 0.1)',\n        'rgba(0, 0, 0, 0.1)',\n        'rgba(0, 0, 0, 0.1)'\n      ],\n      hoverBorderWidth: 0,\n      backgroundColor: [\n        '#6bbaea', // blue\n        '#30e542', // green\n        '#f7f438', // yellow\n        '#949FB1',\n        '#4D5360'\n      ],\n      hoverBackgroundColor: ['#1c7ded', '#09c40c', '#fcf40f', '#A8B3C5', '#616774']\n  }];\n  public chartClicked(e: any): void { }\n  public chartHovered(e: any): void { }\n  \n  constructor() { }\n\n  ngOnInit() {\n    // this.studentService.getStudent().subscribe(\n    //   response => {\n    //     this.proccessResponse(response);\n    //   },\n    //   error => {\n    //     // this.loading = false;\n    //     // console.log(error);\n    //   },\n    //   () => {\n    //    // this.loading = false;\n    //    // console.log(this.student);\n    //   }\n    // );\n\n    // this.courseService.getCourses().subscribe(\n    //   response => {\n    //     response.body.forEach(element => {\n    //       const c = {\n    //         Id: element.id,\n    //         Name: element.name,\n    //         TeacherName: element.teacher_name,\n    //         Description: element.description,\n    //         StartDate: element.start_date,\n    //         EndDate: element.end_date,\n    //         CreatedOn: element.created_on,\n    //         Image2Base64: element.image,\n    //         Students: element.students as Array<StudentViewModel>,\n    //         IsActive: element.is_active,\n    //         TotalUsers: element.students.length\n    //       };\n    //       if (c.IsActive) {\n    //         this.courses.push(c as CourseViewModel);\n    //       }\n    //     });\n    //     // console.log(this.courses);\n    //   },\n    //   error => {\n    //     // this.loading = false;\n    //     // console.log(error);\n    //   },\n    //   () => { }\n    // );\n\n\n\n  }\n\n  // proccessResponse(response) {\n  //   this.student = response.body;\n  //   // console.log(this.student.Courses);\n  // }\n\n  isStudentCourse(courseId) {\n    // console.log(this.student);\n    // const jo = this.student.Courses as Array<CourseViewModel>;\n    // jo.forEach(element => {\n    //   // console.log(element);\n    //   // let jo = element.courseId;\n    //   // if (jo === courseId) {\n    //   //   return true;\n    //   // }\n    //   // return false;\n    // });\n    return false;\n  }\n\n  public getStudentWebhookUrl(students): string {\n    let jo = '';\n    // students.forEach(element => {\n    //   if (element.studentId === this.student['id']) {\n    //     // console.log(this.student['webhookUrls'][0]);\n    //     jo =  this.student['webhookUrls'][0] as string;\n    //     return jo;\n    //   }\n    // });\n    return jo;\n  }\n}\n","wtf\n<div  class=\"content\" style=\"overflow: hidden !important;\">\n    <!-- Section: Testimonials v.1 -->\n  <section *ngFor='let c of courses;' class=\"text-center my-5\">  \n      <!-- Grid row -->\n      <div class=\"row\">\n          <!--Grid column-->\n          <div class=\"col-lg-8 col-md-12 mb-lg-0 mb-4\">\n            <!--Card-->\n            <mdb-card class=\"testimonial-card text-left\">\n              <!--Background color-->\n              <div class=\"card-up info-color \"></div>\n              <!--Avatar-->\n              <div class=\"avatar white\" style=\"width: 70%; margin: 0 auto;\">\n                <img src=\"{{c.Image2Base64}}\" style=\"width:100%;\" class=\"\" />\n              </div>\n              <mdb-card-body>\n                <!--Name-->\n                <h1 class=\"mb-4 text-center\">{{c.Name}}</h1>\n                <hr>\n                <!--Quotation-->\n                <p class=\"dark-grey-text mt-4\">\n                  Webhook url: <br>{{getStudentWebhookUrl(c.Students)}}</p>\n                  \n              </mdb-card-body>\n            </mdb-card>\n            <!--Card-->\n          </div>\n        <!--Grid column-->\n  \n        <!--Grid chart-->\n        <div class=\"col-lg-4 col-md-12 mb-lg-0 mb-4 chart\">\n          <div style=\"width: 100%; margin: 0 auto;\">\n              <canvas mdbChart\n                  [chartType]=\"chartType\"\n                  [data]=\"chartData\"\n                  [labels]=\"chartLabels\"\n                  [colors]=\"chartColors\"\n                  [options]=\"chartOptions\"\n                  [legend]=\"true\"\n                  (chartHover)=\"chartHovered($event)\"\n                  (chartClick)=\"chartClicked($event)\">\n              </canvas>\n          </div>\n          <br>\n          <h1>Total score: ...%</h1>\n        </div>\n        <!--Grid chart-->\n      </div>\n      <!-- Grid row -->\n  </section>\n  <!-- Section: Testimonials v.1 -->\n  </div>","\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  template:\n  `\n  <div style=\"text-align:center\">\n    <div class=\"content\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-center\">\n            <h1>\n              Welcome to BaiGanio\n            </h1>\n            <img src=\"./assets/images/app/Ganio.jpg\" alt=\"\">\n            <h1 id=\"comingSoon\">coming soon...</h1>\n        </div>\n      </div>\n    </div>\n  </div>\n  <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: true }\"></ngx-loading>\n  `,\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  loading = false;\n  constructor() { }\n\n  ngOnInit() {\n    // this.loading = false;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { flatMap } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class BackendService {\n\n  constructor(private http: HttpClient, private authservice: AuthService) { }\n\n  backendRequest(requestType, requestTarget, requestData?, useUserToken?): Observable<any> {\n    if (!this.authservice.authToken) {\n      const req = this.getClientAccessToken()\n        .pipe(flatMap(\n          (response) => {\n            const authToken = response;\n            this.authservice.authToken = authToken.access_token;\n            return this.baseBackendRequest(requestType, requestTarget, requestData, useUserToken);\n          }));\n      return req;\n    } else {\n      return this.baseBackendRequest(requestType, requestTarget, requestData, useUserToken);\n    }\n  }\n\n  private baseBackendRequest(requestType, requestTarget, requestData?, useUserToken?): Observable<any> {\n    if (requestType === 'post') {\n      return this.http.post(\n        environment.apiUrl + requestTarget,\n        requestData,\n        { headers: this.getContentHeaders(useUserToken) }\n      );\n    } else if (requestType === 'get') {\n      return this.http.get(\n        environment.apiUrl + requestTarget,\n        { headers: this.getContentHeaders(useUserToken), params: requestData, observe: 'response'}\n      );\n    }\n  }\n\n  getClientAccessToken(): Observable<any> {\n    const is4credentials = environment.identityServerClientCredentials;\n    const headers: HttpHeaders = new HttpHeaders()\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/x-www-form-urlencoded');\n    // tslint:disable-next-line: max-line-length\n    const body = `grant_type=${is4credentials.grant_type}&scope=${is4credentials.scope}&client_secret=${is4credentials.client_secret}&client_id=${is4credentials.client_id}`;\n\n    return this.http.post(\n      environment.idsUrl + 'connect/token',\n      body,\n      { headers }\n    );\n  }\n\n  getUserAccessToken(email, password): Observable<any> {\n    const is4credentials = environment.identityServerUserCredentials;\n    // const body = new FormData();\n    // body.append('client_id', is4credentials.client_id);\n    // body.append('client_secret', is4credentials.client_secret);\n    // body.append('scope', is4credentials.scope);\n    // body.append('grant_type', is4credentials.grant_type);\n    // body.append('username', email);\n    // body.append('password', password);\n\n    const headers: HttpHeaders = new HttpHeaders()\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/x-www-form-urlencoded');\n // tslint:disable-next-line: max-line-length\n    const body = `grant_type=${is4credentials.grant_type}&scope=${is4credentials.scope}&client_secret=${is4credentials.client_secret}&client_id=${is4credentials.client_id}&username=${email}&password=${password}`;\n\n    return this.http.post(\n      environment.idsUrl + 'connect/token',\n      body,\n      { headers }\n    );\n  }\n\n  getContentHeaders(useUserToken?: any): HttpHeaders {\n    let contentHeaders = new HttpHeaders();\n    let authToken = this.authservice.pickAuthenticationToken();\n    if (useUserToken) { authToken = this.authservice.userToken; }\n    contentHeaders = contentHeaders.set('Authorization', `Bearer ${authToken}`);\n    return contentHeaders;\n  }\n\n}\n","export class UserViewModel {\n\n    Id: string;\n    Username: string;\n    Email: string;\n    FirstName: string;\n    LastName: string;\n    IsEmailConfirmed: boolean;\n    TypeOfUser: any;\n    CreatedOn: Date;\n    ModifiedOn: Date;\n    LeadSource: any;\n    Image: string;\n    Subscriptions: Object[];\n    Roles: Object[];\n  \n    constructor(id?: string, username?: string, email?: string, password?: string,\n        firstname?: string, lastname?: string, isEmailConfirmed?: boolean,\n        typeOfUser?: any, createdOn?: Date, modifiedOn?: Date, leadSource?: any,\n        image?: string, roles?: Object[], subscriptions?: Object[]) {\n        this.Id = id;\n        this.Username = username;\n        this.Email = email;\n        this.FirstName = firstname;\n        this.LastName = lastname;\n        this.IsEmailConfirmed = isEmailConfirmed;\n        this.TypeOfUser = typeOfUser;\n        this.CreatedOn = createdOn;\n        this.ModifiedOn = modifiedOn;\n        this.LeadSource = leadSource;\n        this.Image = image;\n        this.Roles = roles;\n        this.Subscriptions = subscriptions;\n    }\n  }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-blog',\n  templateUrl: './blog.component.html',\n  styleUrls: ['./blog.component.scss']\n})\nexport class BlogComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>blog works!</p>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CoursesComponent } from './courses.component';\nimport { CoursesRoutingModule } from './courses-routing.module';\nimport { NO_ERRORS_SCHEMA } from '@angular/core';\n// import { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { AngularMaterialModule } from 'src/app/@core/angular-material.module';\nimport { CoursePreviewComponent } from './components/course-preview/course-preview.component';\nimport { MyCoursesComponent } from './pages/my-courses/my-courses.component';\nimport { CourseDetailsComponent } from './pages/course-details/course-details.component';\nimport { InClassComponent } from './components/in-class/in-class.component';\nimport { ScoreComponent } from './components/score/score.component';\nimport { LinechartComponent } from 'src/app/@shared/components/charts/linechart/linechart.component';\nimport { BarchartComponent } from 'src/app/@shared/components/charts/barchart/barchart.component';\nimport { DoughnutComponent } from 'src/app/@shared/components/charts/doughnut/doughnut.component';\nimport { PiechartComponent } from 'src/app/@shared/components/charts/piechart/piechart.component';\nimport { PolarareaComponent } from 'src/app/@shared/components/charts/polararea/polararea.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoursesRoutingModule,\n    AngularMaterialModule\n    // NgxLoadingModule.forRoot({\n    //   animationType: ngxLoadingAnimationTypes.threeBounce,\n    //   primaryColour: '#88078e',\n    //   secondaryColour: '#c6ef23',\n    // }),\n  ],\n  declarations: [\n    CoursesComponent,\n    CoursePreviewComponent,\n    MyCoursesComponent,\n    CourseDetailsComponent,\n    InClassComponent,\n    ScoreComponent,\n    LinechartComponent,\n    BarchartComponent,\n    DoughnutComponent,\n    PiechartComponent,\n    PolarareaComponent\n  ],\n  entryComponents: [\n    CoursePreviewComponent\n  ],\n  exports: [CourseDetailsComponent],\n  schemas: [ NO_ERRORS_SCHEMA ]\n})\nexport class CoursesModule { }\n","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n    if (parentModule) {\n        throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { UtilityService } from './utility.service';\n\n@Injectable()\nexport class AuthService {\n\n  authToken: string;\n  private readonly tokenKeyName = 'bgut';\n  private uToken: any;\n  get userToken() { return this.uToken; }\n  set userToken(token) {\n    if (token && token.access_token) {\n      this.uToken = token.access_token;\n    } else {\n      this.uToken = token;\n    }\n  }\n\n  constructor(\n    public jwtHelper: JwtHelperService\n  ) {\n    this.jwtHelper = new JwtHelperService();\n    this.userToken = sessionStorage.getItem(this.tokenKeyName);\n  }\n\n  setUserTokenAndRemember(token) {\n    this.clearUserToken();\n    this.userToken = token.access_token;\n    sessionStorage.setItem(this.tokenKeyName, this.userToken);\n  }\n\n  pickAuthenticationToken(): string {\n     return this.authToken;\n  }\n  pickUserToken(): string {\n    return this.userToken;\n  }\n  clearUserToken() {\n    this.userToken = null;\n    sessionStorage.removeItem(this.tokenKeyName);\n  }\n\n  public isAuthenticated(): boolean {\n    const token = sessionStorage.getItem(this.tokenKeyName);\n    if (token === null) { return false; }\n    return !this.jwtHelper.isTokenExpired(token);\n  }\n\n  public decode() {\n    return this.jwtHelper.decodeToken(this.userToken);\n  }\n\n  public isExpectedRole(allowedRoles: string[]): boolean {\n    // check if the list of allowed roles is empty, if empty, authorize the user to access the page\n    if (allowedRoles == null || allowedRoles.length === 0) {\n      return true;\n    }\n    const token = sessionStorage.getItem(this.tokenKeyName);\n    if (token === null) { return false; }\n    const decodedToken = this.jwtHelper.decodeToken(token);\n    if (!decodedToken) {\n      console.log('Invalid token');\n      return false;\n    }\n    return allowedRoles.includes(decodedToken.role);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-access-denied',\n  template:\n  `\n  <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-xs-12 col-center text-center\">\n        <img id=\"denied\" src=\"../assets/images/status-codes/403.png\"  alt=\"Picture from my collection.\" />\n        <h1> Status code: <span>403 - FORBIDDEN!  </span>\n          <br> Server says: <span>'You are not authorized!'  </span>\n        \n        </h1>\n        <button mat-button color=\"primary\" routerLink='/home'> Back To Home</button>\n      </div>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./access-denied.component.scss']\n})\nexport class AccessDeniedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { EventBusService } from './event-bus.service';\nimport { UserViewModel } from '../@modules/users/models/user-view-model.module';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class UserDataService {\n  userData = new UserViewModel();\n\n  constructor(\n    private eventBusService: EventBusService,\n    private backendService: BackendService,\n    private authService: AuthService\n  ) { }\n\n  setUserData(data: UserViewModel): void {\n    this.userData = data;\n    this.eventBusService.emitUpdateUserData(data);\n  }\n  getUserData() {\n    return this.userData as UserViewModel;\n  }\n\n  updatePassword(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/UpdatePassword', data, true);\n  }\n\n  updateEmail(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/UpdateEmail', data, true);\n  }\n\n  updateProfile(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/UpdateProfile', data, true);\n  }\n\n  updateProfilePicture(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/UpdateProfilePicture', data, true);\n  }\n\n  sendIssueToAdmin(data: { Text: any; Img2Base64: string; }): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/ReportIssue', data, true);\n  }\n\n  sendExceptionToAdmin(data: { SenderEmail: string; ErrorReport: string; MessageReport: string; }): Observable<any> {\n    return this.backendService.backendRequest('post', 'Users/ReportException', data, true);\n  }\n\n  getUserByToken(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Identity', null, true);\n  }\n\n  getUserById(userId: string): Observable<any> {\n    return this.backendService.backendRequest('get', 'Users/' + userId, null, true);\n  }\n\n  getUserIP(): Observable<any> {\n    return this.backendService.backendRequest('get', environment.IPCheckingServiceUrl, null, true);\n  }\n  updateLastLoginDate(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Users/UpdateLastLogin', null, true);\n  }\n  getDasboardData(): Observable<any> {\n    return this.backendService.backendRequest('get', 'users/Dashboard', null, true);\n  }\n  logout(): void {\n    this.userData = null;\n    this.authService.clearUserToken();\n  }\n}\n","export class ErrorModel {\n    ErrorText: string;\n    ErrorDescription: string;\n    Message: string;\n    Name: string;\n    OK: boolean;\n    Status: number;\n    StatusText: string;\n    Url: string;\n\n    constructor(error?: any) {\n        const err = error.error;\n        this.ErrorText = err.error;\n        this.ErrorDescription = err || err.error_description;\n        this.Message = error.message;\n        this.Name = error.name;\n        this.OK = error.ok;\n        this.Status = error.status;\n        this.StatusText = error.statusText;\n        this.Url = error.url;\n    }\n}\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  ipinfo: any;\n  loading = false;\n  registrationError = false;\n  registrationErrorMessage = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private http: HttpClient,\n    // private accountService: AccountService,\n    // private errorHandlerService: ErrorHandlerService,\n    private snackbar: MatSnackBar,\n    private dialog: MatDialog\n  ) {}\n\n  ngOnInit() {\n    this.registerForm =\n      this.formBuilder.group({\n        email: [\n          null,\n          [Validators.required, Validators.email]\n        ],\n        password: [\n          null,\n          [Validators.required, Validators.minLength(6), Validators.maxLength(50)]\n        ],\n        acceptedTerms: [\n          false,\n          [Validators.requiredTrue]\n        ]\n      });\n  }\n\n  register() {\n    // this.loading = true;\n    // this.http.get(environment.IPCheckingServiceUrl)\n    //   .subscribe(\n    //     response => {\n    //       this.ipinfo = response;\n    //     },\n    //     error => {\n    //       this.errorHandlerService.handleRequestError(error);\n    //     },\n    //     () => {\n    //       this.doRegistration();\n    //     }\n    // );\n  }\n\n  doRegistration() {\n    // this.accountService.registerUser({\n    //   Email: this.registerForm.value.email,\n    //   Password: this.registerForm.value.password,\n    //   LeadSource: 'WebApp',\n    //   IP: this.ipinfo.ip\n    // }).subscribe(\n    //     () => {\n    //       this.router.navigate(['/welcome']);\n    //       this.getSuccessfulSnackBar(this.registerForm.value.email);\n    //       this.loading = false;\n    //     }, error => {\n    //       this.registrationError = true;\n    //       this.loading = false;\n    //       this.registerForm.reset();\n    //       this.errorHandlerService.handleRequestError(error);\n    //     }\n    //   );\n  }\n\n  // getTerms() {\n  //   this.loading = true;\n  //   const $dialogRef = this.dialog.open(TermsComponent, null);\n  //   $dialogRef.afterClosed().subscribe();\n  //   this.loading = false;\n  // }\n\n  // private getRegistrationErrorMessage(error: string) {\n  //   this.registrationErrorMessage =\n  //   `Ops... <br/> ${error} <br/> Try once more?!?!`;\n  //   this.registrationError = true;\n  // }\n\n  // private getSuccessfulSnackBar(email: string) {\n  //   this.snackbar.open(\n  //     `Registration successful for ${email}!`,\n  //     'X',\n  //     {\n  //       duration: 3000,\n  //       horizontalPosition: 'center',\n  //       verticalPosition: 'top',\n  //       panelClass: 'successSnackbar'\n  //     }\n  //   );\n  // }\n\n  // dismiss() {\n  //   this.registrationError = false;\n  //   this.registrationErrorMessage = '';\n  // }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n/**\n * @EventBusService used for connections between modules\n */\n@Injectable()\nexport class EventBusService {\n  public changeRoute: EventEmitter<any>;\n  public retryRequest: EventEmitter<any>;\n  public unknownError: EventEmitter<any>;\n  public updateUserData: EventEmitter<any>;\n  public fetchedDashboardData: EventEmitter<any>;\n\n  constructor() {\n    this.changeRoute = new EventEmitter();\n    this.retryRequest = new EventEmitter();\n    this.unknownError = new EventEmitter();\n    this.updateUserData = new EventEmitter();\n    this.fetchedDashboardData = new EventEmitter();\n  }\n\n  public emitChangeRoute(data) {\n    this.changeRoute.emit(data);\n  }\n\n  public emitRetryRequest(data) {\n    this.retryRequest.emit(data);\n  }\n\n  public emitUnknownError(data) {\n    this.unknownError.emit(data);\n  }\n\n  public emitUpdateUserData(data) {\n    this.updateUserData.emit(data);\n  }\n\n  public emitFetchedDashboardData(data) {\n    this.fetchedDashboardData.emit(data);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: ` \n    <app-navbar></app-navbar>\n  `\n})\nexport class AppComponent {\n  title = 'BaiGanio';\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  retryFunction = null;\n  // user: UserViewModel;\n  loading = false;\n  loginError = false;\n  loginErrorMessage = '';\n\n  constructor(\n     private formBuilder: FormBuilder,\n     private router: Router,\n    // private backendService: BackendService,\n    // private authservice: AuthService,\n    // private errorHandlerService: ErrorHandlerService,\n    // private userDataService: UserDataService\n    ) { }\n\n  ngOnInit() {\n    this.loginForm =\n      this.formBuilder.group({\n        email: [\n          null,\n          [Validators.required, Validators.email]\n        ],\n        password: [\n          null,\n          [Validators.required, Validators.minLength(3)]\n        ],\n        rememberMe: [\n          true\n        ]\n      });\n\n    //this.authservice.clearUserToken();\n  }\n\n  // sendLoginRequest() {\n  //   this.loading = true;\n  //   this.backendService.getUserAccessToken(\n  //     this.loginForm.value.email,\n  //     this.loginForm.value.password\n  //   ).subscribe(\n  //       response => this.handleSuccess(response),\n  //       error => {\n  //         console.log(error);\n  //         this.loading = false;\n  //         this.loginForm.reset();\n  //         this.loginErrorMessage =\n  //         `Ops... <br/> ${error.error.error_description}! <br/>`;\n  //         this.loginError = true;\n  //       }\n  //     );\n  // }\n\n  // private handleSuccess(authToken): void {\n  //   if (this.loginForm.value.rememberMe) {\n  //     this.authservice.setUserTokenAndRemember(authToken);\n  //   } else {\n  //     this.authservice.clearUserToken();\n  //     this.authservice.userToken = authToken;\n  //   }\n  //   this.getUserByToken();\n  //   this.loading = false;\n  //   this.router.navigate(['/dashboard']);\n  // }\n\n  // getUserByToken(): void {\n  //   let userData: any;\n  //   let username = '';\n  //   this.userDataService.getUserByToken()\n  //     .subscribe(response => {\n  //         userData = response.body;\n  //         this.userDataService.setUserData(userData);\n  //         username =\n  //           userData.first_name != null && userData.last_name != null\n  //           ? userData.first_name + ' ' + userData.last_name\n  //           : userData.email;\n\n  //         this.updateLastLogin();\n  //       },\n  //       error => {\n  //         this.errorHandlerService.handleRequestError(error);\n  //       }\n  //     );\n  // }\n\n  // dismiss() {\n  //   this.loginError = false;\n  //   this.loginErrorMessage = '';\n  // }\n\n  // updateLastLogin() {\n  //   this.userDataService.updateLastLoginDate().subscribe(\n  //     () => {},\n  //     err => { console.log(err); }\n  //   );\n\n  // }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CoursePreviewModel } from './models/course-preview-model.module';\nimport { CoursePreviewComponent } from './components/course-preview/course-preview.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-courses',\n  templateUrl: './courses.component.html',\n  styleUrls: ['./courses.component.scss']\n})\nexport class CoursesComponent implements OnInit {\n  loading = false;\n  isStudent = false;\n  flagEnrollSuccess = false;\n  msgLogIn = '';\n  fetchingMsg = '';\n  msgIncompleteStudent = '';\n  totalStudents = 0;\n  courseId: any;\n  enrolledCourse: any;\n  courses = new Array<any>();\n  // coursesWithUserIds = new Array<CourseWithEnrolledUserIds>();\n  storedUser: any;\n  // student = new StudentPreviewModel();\n\n  constructor(\n    // private courseService: CoursesService,\n    // private studentService: StudentService,\n    // private authService: AuthService,\n    // private userDataService: UserDataService,\n    // private errorHandlerService: ErrorHandlerService,\n    private dialog: MatDialog,\n    private router: Router,\n    private snackbar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n     this.loading = true;\n    // if (this.authService.isAuthenticated()) {\n    //   this.storedUser = this.userDataService.getUserData();\n    //   if (this.storedUser) {\n    //       this.storedUserInit();\n    //   }\n    //   this.getCoursesWithEnrolledUserId();\n    // } else {\n\n    //   this.getInitCourses();\n\n    // }\n  }\n\n  getCoursesWithEnrolledUserId() {\n    // this.courseService.getCoursesWithEnrolledUserId().subscribe(response => {\n    //   response.body.forEach(element => {\n    //     const c = {\n    //       Id: element.id,\n    //       Name: element.name,\n    //       Teachers: element.teachers,\n    //       Description: element.description,\n    //       StartDate: element.startDate,\n    //       EndDate: element.endDate,\n    //       ModifiedOn: element.modifiedOn,\n    //       Image: element.image,\n    //       IsActive: element.isActive,\n    //       IsElectable: element.isElectable,\n    //       EnrolledStudents: element.totalEnrolledStudents,\n    //       EnrolledUserId: element.enrolledUserId\n    //     };\n    //     this.courses.push(c as CoursePreviewModel);\n    //   });\n    // },\n    // error => { this.errorHandlerService.handleRequestError(error); this.loading = false; },\n    // () => { this.loading = false; });\n  }\n\n  getInitCourses() {\n    // this.courseService.getCoursesPreview().subscribe(response => {\n    //   response.body.forEach(element => {\n    //     const c = {\n    //       Id: element.id,\n    //       Name: element.name,\n    //       Teachers: element.teachers,\n    //       Description: element.description,\n    //       StartDate: element.startDate,\n    //       EndDate: element.endDate,\n    //       ModifiedOn: element.modifiedOn,\n    //       Image: element.image,\n    //       IsActive: element.isActive,\n    //       IsElectable: element.isElectable,\n    //       EnrolledStudents: element.enrolledStudents,\n    //       EnrolledUserId: element.enrolledUserId\n    //     };\n    //     this.courses.push(c as CoursePreviewModel);\n    //   });\n    // },\n    //  error => {\n    //    this.errorHandlerService.handleRequestError(error);\n    //    this.loading = false;\n    // }, () => { this.loading = false; });\n  }\n\n  private storedUserInit() {\n    // this.userDataService.getUserByToken().subscribe(\n    //     response => {\n    //         const u = {\n    //             Id: response.body.id,\n    //             Username: response.body.username,\n    //             Subscriptions: response.body.subscriptions,\n    //             Roles: response.body.roles\n    //         };\n    //         this.storedUser = u as UserViewModel;\n    //         this.userDataService.setUserData(this.storedUser);\n    //     },\n    //     error => {\n    //         this.errorHandlerService.handleRequestError('myahah' + error);\n    //     }, () => { this.loading = false; }\n    // );\n}\n\n  isEnrolled(cId: string): boolean {\n    let result = false;\n    this.courses.forEach(element => {\n      if (cId === element.Id && element.EnrolledUserId === this.storedUser.Id) {\n        console.log('found');\n        console.log(this.storedUser.Id);\n        result = true;\n        return true;\n      }\n    });\n    return result;\n  }\n\n  enroll4course(courseId: string) {\n    this.loading = true;\n    let course: any;\n    this.courses.forEach( (element) => {\n      if (element.Id === courseId) {\n        course = element;\n      }\n    });\n    // this.studentService.enroll4Course({\n    //     CourseId: course.Id,\n    //     CourseName: course.Name,\n    //     Image: course.Image\n    //   })\n    //   .subscribe(\n    //     () => {},\n    //     error => {\n    //       this.errorHandlerService.handleRequestError(error);\n    //       this.loading = false;\n    //     },\n    //     () => {\n    //       this.loading = false;\n    //       this.snackbar.open('Enrollment successful !', 'X', {\n    //         duration: 3000,\n    //         horizontalPosition: 'right',\n    //         verticalPosition: 'top',\n    //         panelClass: 'successSnackbar'\n    //       });\n    //       this.flagEnrollSuccess = true;\n    //     }\n    // );\n  }\n\n  getCoursePreview(courseId: string) {\n    let course: CoursePreviewModel;\n    this.courses.forEach( (element) => {\n        if (element.Id === courseId) {\n          course =\n            new\n              CoursePreviewModel(\n                element.Id,\n                element.Name,\n                element.Description,\n                element.Teachers,\n                element.StartDate,\n                element.EndDate,\n                element.ModifiedOn,\n                element.IsActive,\n                element.IsElectable,\n                element.Image,\n                element.EnrolledStudents\n              );\n        }\n    });\n    const $dialogRef =\n        this.dialog.open(\n            CoursePreviewComponent,\n            {\n              width: '80vw',\n              maxHeight: '100vh',\n              data: { model: course }\n            }\n        );\n    $dialogRef.afterClosed().subscribe();\n  }\n\n  backToCourses() {\n    setTimeout(() => {\n      location.reload();\n    }, 10);\n  }\n\n  goToCourse(courseId: string) {\n    this.router.navigate(['/courses/preview/' + courseId]);\n  }\n\n  goToMyCourses() {\n    this.router.navigate(['/courses/preview']);\n  }\n}\n","<div class=\"text-center\" *ngIf='flagEnrollSuccess; else infoBox'>\n    <img src=\"../../../../../../assets/images/Checkmark.png\" class=\"img-fluid\">\n    <h1>Congrats! <br> You are enrolled 4 the [c.Name] course  ;)</h1>\n    <button  \n        type=\"button\"                        \n        class=\"btn btn-outline-info\" \n        (click) = 'goToMyCourses()'>\n        <b>Go to My Courses</b>\n    </button>\n    <button  \n        type=\"button\"                        \n        class=\"btn\" \n        (click) = 'backToCourses()'>\n        <b>Back</b>\n    </button>\n    <br><br>\n    \n</div>\n<ng-template #infoBox>\n    <h1  style=\"text-align:center\">Courses</h1>   \n    <hr style=\"width: 60%; color: blue;\">  \n    <div class=\"row\">\n        <div *ngFor='let c of courses' class=\"col-md-4 text-center\">\n            <div class=\"card\">\n                <div class=\"card-body\">             \n                    <img src='{{ c.Image }}' class=\"img-thumbnail img-fluid\" alt=\"Sample image\">    \n                    <br><br>                   \n                    <h3>{{ c.Name }}</h3>\n                    <!-- <p> Enrolled students so far: <span class=\"badge badge-primary\">{{c.EnrolledStudents}}</span>\n                       \n                    </p>                        \n                    <p>Teachers: {{c.Teachers}}</p> -->\n                    <!-- <hr style=\"width: 60%; color: blue;\">\n                    <h5>Start @ {{ c.StartDate | date :'dd-MMMM-yyyy' }}</h5> -->\n                    <!-- <h5>End @ {{ c.EndDate | date :'dd-MMMM-yyyy' }}</h5> -->\n                    <hr style=\"width: 60%; color: blue;\">  \n                    <!-- <h5>Enrolled students: {{ c.EnrolledStudents || 0 }}</h5>\n                    <hr style=\"width: 60%; color: blue;\">      -->\n                    <button \n                        mat-raised-button\n                        color=\"primary\"\n                        (click) = getCoursePreview(c.Id)>\n                        <i class=\"fas fa-search\"></i>\n                    </button> \n                    <span *ngIf='c.IsActive'>\n                        <button  \n                            *ngIf='isEnrolled(c.Id)'\n                            type=\"button\"                        \n                            class=\"btn btn-outline-info\" \n                            (click) = 'goToCourse(c.Id)'>\n                            <b>Go to Course Progress</b>\n                        </button>\n                        <span *ngIf='!isEnrolled(c.Id) && c.IsElectable'>\n                            <button  \n                                type=\"button\"                        \n                                class=\"btn btn-outline-success\" \n                                (click) = 'enroll4course(c.Id)'>\n                                <b>Enroll 4 Course</b>\n                            </button>\n                        </span>\n                    </span>\n                </div>    \n            </div>   \n        </div>\n    </div>\n</ng-template>\n\n<h2 *ngIf='loading' class='text-center'>Please wait! Fetching data...</h2>\n<ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: true }\"></ngx-loading>","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { throwIfAlreadyLoaded } from './module-import.guard';\nimport { ChecklistDatabase } from '../@shared/interfaces/checklist-database.module';\nimport { AccountService } from '../@services/account.service';\nimport { AuthService } from '../@services/auth.service';\nimport { BackendService } from '../@services/backend.service';\nimport { CoursesService } from '../@services/courses.service';\nimport { ErrorHandlerService } from '../@services/error-handler.service';\nimport { EventBusService } from '../@services/event-bus.service';\nimport { RoslynService } from '../@services/roslyn.service';\nimport { SignalRService } from '../@services/signalR.service';\nimport { StudentService } from '../@services/student.service';\nimport { SubscriptionService } from '../@services/subscription.service';\nimport { TeacherService } from '../@services/teacher.service';\nimport { UserDataService } from '../@services/user-data.service';\nimport { UtilityService } from '../@services/utility.service';\nimport { AuthGuard } from './auth.guard';\nimport { RoleGuard } from './role.guard';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    AuthGuard,\n    RoleGuard,\n    // JwtHelperService,\n    BackendService,\n    AuthService,\n    UserDataService,\n    EventBusService,\n    ErrorHandlerService,\n    UtilityService,\n    CoursesService,\n    StudentService,\n    SubscriptionService,\n    RoslynService,\n    SignalRService,\n    AccountService,\n    TeacherService,\n    ChecklistDatabase\n  ]\n})\nexport class CoreModule {\n  constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\n@Injectable()\nexport class AccountService {\n\n  constructor(private backendService: BackendService) { }\n\n  registerUser(data: { Email: any; Password: any; LeadSource: string; IP: any; }): Observable<any> {\n    return this.backendService.backendRequest('post', 'account/register', data);\n  }\n  confirm(token: string): Observable<any> {\n    const data = { code: token };\n    return this.backendService.backendRequest('get', 'account/confirmation', data);\n  }\n  resetPassword(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'account/ResetPassword', data);\n  }\n  forgotPassword(email: { email: any; }): Observable<any> {\n    return this.backendService.backendRequest('post', 'account/ForgotPassword', email);\n  }\n  getNotificationsData(): Observable<any> {\n    return this.backendService.backendRequest('get', 'account/Notifications', null, true);\n  }\n  getReportedIssuesData(): Observable<any> {\n    return this.backendService.backendRequest('get', 'account/ReportedIssues', null, true);\n  }\n  getUserIP(): Observable<any> {\n    return this.backendService.backendRequest('post', environment.IPCheckingServiceUrl);\n  }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n// import { BaseDialogData } from 'src/app/@shared/interfaces/base-dialog.interface';\nimport { ErrorView } from 'src/app/@shared/interfaces/error-view.interface';\nimport { BaseDialogData } from '../../interfaces/base-dialog.interface';\n\n@Component({\n  selector: 'app-error',\n  template:\n  `\n  <div class=\"text-center\">\n    <div>\n      <h3> Ops... Error shows up!!!\n        <img src=\"../assets/images/bd2.gif\" alt=\"\" />\n      </h3>\n      <hr/>\n      <h4>{{error.ErrorText}}</h4>\n      <div style=\"width:50%; margin:auto;\"  class=\"text-center\">\n        {{error.Message}}\n      </div>\n      <hr/>\n      <button\n      mat-stroked-button color='warn'\n        (click) = dismiss()\n        style=\"width:50%\">\n        Dismiss\n      </button>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./error.component.scss']\n})\nexport class ErrorComponent implements OnInit {\n  error: ErrorView;\n\n  constructor(\n    public dialogRef: MatDialogRef<ErrorComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: BaseDialogData\n  ) { }\n\n  ngOnInit() {\n    this.error = this.data.model;\n  }\n\n  dismiss() {\n    this.dialogRef.close();\n  }\n\n  // sendExceptionToAdmin() {\n  //   this.dialogRef.close(this.error.Error);\n  // }\n}\n","import { Injectable } from '@angular/core';\n// import * as signalR from '@aspnet/signalr';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignalRService {\n\n  constructor(\n    private errorHandlerService: ErrorHandlerService,\n    private snackbar: MatSnackBar) { }\n\n  initializeSignalRConnection() {\n    // const connection = new signalR.HubConnectionBuilder()\n    //   .configureLogging(signalR.LogLevel.Information)\n    //   .withUrl(environment.bgapiSignalRNotyfyHub)\n    //   .build() ;\n\n    // connection.start()\n    //   .then(\n    //     () => {\n    //       this.snackbar.open(\n    //         `Connected to ${environment.bgapiSignalRNotyfyHub} SignalR hub!`,\n    //         'X',\n    //         {\n    //           duration: 3000,\n    //           horizontalPosition: 'center',\n    //           verticalPosition: 'top',\n    //           panelClass: 'successSnackbar'\n    //         }\n    //       );\n    //       // console.log('Connected to https://localhost:44344/notify SignalR hub!');\n    //     },\n    //     err => {\n    //       console.log(err.toString());\n    //       // this.errorHandlerService.handleRequestError(err);\n    //     }\n    //   );\n\n    // connection.on('BroadcastPostmanMessage', (type: string, payload: string) => {\n    //   this.snackbar.open(\n    //     `@nickname: ${type} -> ${payload} - via SignalR service!`,\n    //     'X',\n    //     {\n    //       duration: 6000,\n    //       horizontalPosition: 'center',\n    //       verticalPosition: 'top',\n    //       panelClass: 'successSnackbar'\n    //     }\n    //   );\n    //   // console.log({ severity: type, summary: payload, detail: 'Via SignalR service' });\n    // });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AngularMaterialModule } from './@core/angular-material.module';\nimport { CoreModule } from './@core/core.module';\nimport { HomeComponent } from './@pages/home/home.component';\nimport { AccessDeniedComponent } from './@shared/pages/access-denied/access-denied.component';\nimport { ErrorComponent } from './@shared/pages/error/error.component';\nimport { NotFoundComponent } from './@shared/pages/not-found/not-found.component';\nimport { PrivacyComponent } from './@shared/pages/privacy/privacy.component';\nimport { ServerAlertComponent } from './@shared/pages/server-alert/server-alert.component';\nimport { TermsComponent } from './@shared/pages/terms/terms.component';\nimport { AppComponent } from './app.component';\nimport { BlogComponent } from './@pages/blog/blog.component';\nimport { FooterComponent } from './@shared/components/footer/footer.component';\nimport { NavbarComponent } from './@shared/components/navbar/navbar.component';\nimport { CoursesModule } from './@modules/courses/courses.module';\nimport { SubscriptionsModule } from './@modules/subscriptions/subscriptions.module';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FooterComponent,\n    HomeComponent,\n    NavbarComponent,\n    BlogComponent,\n    ServerAlertComponent,\n    AccessDeniedComponent,\n    NotFoundComponent,\n    PrivacyComponent,\n    TermsComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AngularMaterialModule,\n    CoreModule,\n    CoursesModule,\n    SubscriptionsModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: jwtTokenGetter\n      }\n    }),\n  ],\n  entryComponents: [\n    TermsComponent,\n    PrivacyComponent,\n    ErrorComponent,\n  ],\n  providers: [CoreModule],\n  bootstrap: [AppComponent],\n  schemas: [NO_ERRORS_SCHEMA]\n})\nexport class AppModule { }\n\nexport function jwtTokenGetter() {\n  return localStorage.getItem('bg-bcof');\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NO_ERRORS_SCHEMA } from '@angular/core';\n// import { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { AngularMaterialModule } from 'src/app/@core/angular-material.module';\nimport { SubscriptionsRoutingModule } from './subscriptions-routing.module';\nimport { SubscriptionsComponent } from './subscriptions.component';\n@NgModule({\n  declarations: [\n      SubscriptionsComponent,\n      // SubscriptionPreviewComponent,\n      // MySubscriptionsComponent,\n      // StudentSubscriptionPreviewComponent,\n      // TeacherSubscriptionPreviewComponent,\n      // BloggerSubscriptionPreviewComponent\n    ],\n  imports: [\n    CommonModule,\n    SubscriptionsRoutingModule,\n    AngularMaterialModule,\n    // NgxLoadingModule.forRoot({\n    //   animationType: ngxLoadingAnimationTypes.threeBounce,\n    //   primaryColour: '#88078e',\n    //   secondaryColour: '#c6ef23',\n    // }),\n  ],\n  entryComponents: [\n    // SubscriptionPreviewComponent\n  ],\n  schemas: [ NO_ERRORS_SCHEMA ]\n})\nexport class SubscriptionsModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { UserDataService } from '../@services/user-data.service';\nimport { BackendService } from '../@services/backend.service';\nimport { AuthService } from '../@services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  storedUser: any;\n\n  constructor(\n    private router: Router,\n    private authservice: AuthService,\n    private userService: UserDataService,\n    private backendService: BackendService\n  ) { }\n\n  canActivate() {\n    if (!this.authservice.isAuthenticated()) {\n      this.router.navigate(['login']);\n      return false;\n    } else {\n      this.storedUser = this.userService.getUserData();\n      if (this.storedUser.id  === undefined) {\n        this.userService.getUserByToken().subscribe(\n          response => { this.storedUser = response.body; },\n          error => {\n            console.log('auth guard error!');\n            this.router.navigate(['/login']);\n            return false;\n          },\n          () => {\n            this.userService.setUserData(this.storedUser);\n            return true;\n          }\n        );\n      }\n      return false;\n    }\n  }\n}\n","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { SubscriptionsComponent } from './subscriptions.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      { path: '', component: SubscriptionsComponent }\n    ]\n  },\n  // {\n  //   path: 'preview',\n  //   children: [\n  //     { path: '', component: MySubscriptionsComponent },\n  //     // { path: ':id', component: CourseDetailsComponent }\n  //   ]\n  // }\n  // { path: ':token', component: SubscriptionsComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n\nexport class SubscriptionsRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { StudentLoginViewModel } from '../../models/student-login-view-model.module';\n@Component({\n  selector: 'app-in-class',\n  templateUrl: './in-class.component.html',\n  styleUrls: ['./in-class.component.scss']\n})\nexport class InClassComponent implements OnInit {\n    weekNo: any;\n    ipInfo: any;\n    message = '';\n    errMsg = '';\n    loading = false;\n    studentLogins = new Array<StudentLoginViewModel>();\n    student: any;\n    isLetMeInActive = true;\n    courseStartDate = new Date();\n    courseEndDate = new Date();\n\n    constructor(\n        private http: HttpClient,\n        // private studentService: StudentService\n    ) { }\n\n    ngOnInit() {\n        this.loading = true;\n        // this.getStudentLogins();\n        // this.studentService.getStudent().subscribe(\n        //     response => {\n        //         this.student = response.body; // as StudentViewModel;\n        //         this.loading = false;\n        //     },\n        //     error => {\n        //         // this.loading = false;\n        //         this.message = error.error;\n        //         console.log(this.message);\n        //     },\n        //     () => {\n        //         // this.getStudentLogins();\n        //     }\n        // );\n    }\n\n\n    getStudentLogins() {\n        // this.studentService.getStudentLogins().subscribe(\n        //     response => {\n        //         response.body.forEach(element => {\n        //             const c = {\n        //             Id: element.id,\n        //             StudentId: element.sudentId,\n        //             Ip: element.ip,\n        //             Week: element.week,\n        //             IsCalculated: element.isCalculated,\n        //             LastLoginDate: element.lastLoginDate,\n        //             IPStack: element.ipStack\n        //             };\n        //             this.studentLogins.push(c as StudentLoginViewModel);\n        //         });\n        //     },\n        //     error => {\n        //         this.loading = false;\n        //         this.message = error.error;\n        //         console.log(this.message);\n        //     },\n        //     () => {\n        //         this.loading = false;\n        //         this.proccessLoginsResponse();\n        //     }\n        // );\n    }\n\n    proccessLoginsResponse() {\n        // if (this.studentLogins.length === 0) {\n        //     this.isLetMeInActive = true;\n        // }\n    }\n\n    trackIP() {\n        this.loading = true;\n        // this.http.get(environment.IPCheckingServiceUrl).subscribe(\n        //     data => {\n        //         console.log(data);\n        //         this.ipInfo = data;\n        //         console.log(this.ipInfo);\n        //     },\n        //     error => {\n        //         this.errMsg = error.error;\n        //         console.log(this.errMsg);\n        //         this.loading = false;\n        //     },\n        //     () => { this.loading = false; this.proccessIP(); }\n        // );\n    }\n\n    proccessIP() {\n        // this.studentService.letMeIn({CourseId: \"\", IP: this.ipInfo.ip}).subscribe(\n        //     response => { },\n        //     error => {\n        //         this.errMsg = error.error;         \n        //         this.processError();\n        //         this.loading = false;\n        //     },\n        //     () => {\n        //         this.isLetMeInActive = false;\n        //         this.loading = false;\n        //         setTimeout(() => {\n        //             location.reload();\n        //         }, 2000);\n        //     }\n        // );\n    }\n\n    processError() {\n        // $('#errMsg').toggleClass('d-none');\n        //     setTimeout(() => {\n        //         this.errMsg = '';\n        //         $('#errMsg').toggleClass('d-none');\n        //     }, 3500);\n    }\n}\n\n","<div class=\"container\" style=\"overflow: hidden;\">\n    <br>\n      <div id=\"errMsg\" class=\"animated bounceIn d-none\"aria-live=\"polite\" role=\"alert\">\n          <div class=\"error  text-center\">\n              <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i> {{errMsg}}\n          </div>\n      </div>\n      <div>\n        <br>\n        <button class=\"btn btn-blue btn-rounded btn-lg btn-block\" (click)=\"trackIP()\">Let Me In</button>\n      </div>\n      <ng-template #youAreIn>                                      \n          <div class=\"text-center\">\n              <h2 class=\"h2 text-center mb-4\">Congrats ;) You are in +5 points!</h2>\n              <p>Please wait. Reloading page...</p>\n          </div>\n      </ng-template>\n      <br>  \n      <div id=\"weekNo\">{{weekNo}}</div>\n      <div class=\"card-deck\"> \n          <div *ngFor='let s of studentLogins'>   \n            <div *ngIf='s.IsCalculated; else notCalculated'>\n                <div class=\"card\">\n                    <img src=\"../../../../../../assets/images/5points.png\" class=\"card-img-top\">\n                  <div class=\"card-body text-left\">\n                    <p class=\"\"><i style=\"color: lightgreen;\" class=\"fas fa-check\"></i>  {{s.Week}}</p>\n                    <p class=\"\">IP: {{s.Ip}}</p>\n                    <p class=\"\">{{s.LastLoginDate | date :'medium'}}</p>\n                  </div>\n                </div>    \n            </div>\n            <ng-template #notCalculated>\n                <div class=\"card\">\n                    <img src=\"../../../../../../assets/images/sad-face2.png\" class=\"card-img-top\">\n                  <div class=\"card-body text-center\">\n                      <p class=\"\">{{s.Week}}</p>\n                    <p>No points!</p>\n                  </div>\n                </div>   \n            </ng-template>\n        </div>\n      </div>\n    \n      <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: false }\"></ngx-loading>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-piechart',\n  templateUrl: './piechart.component.html'\n})\nexport class PiechartComponent implements OnInit {\n  url = 'https://localhost:44344/api/fake/Chart/';\n  data: any;\n  Player = [];\n  Run = [];\n  piechart: any;\n    constructor(private httpClient: HttpClient) { }\n\n    ngOnInit() {\n      this.httpClient.get(this.url).subscribe((result: any) => {\n        result.forEach(x => {\n          this.Player.push(x.playerName);\n          this.Run.push(x.run);\n        });\n        this.piechart = new Chart('canvas', {\n          type: 'pie',\n          data: {\n            labels: this.Player,\n            datasets: [\n              {\n                data: this.Run,\n                borderColor: '#3cba9f',\n                backgroundColor: [\n                  '#3cb371',\n                  '#0000FF',\n                  '#9966FF',\n                  '#4C4CFF',\n                  '#00FFFF',\n                  '#f990a7',\n                  '#aad2ed',\n                  '#FF00FF',\n                  'Blue',\n                  'Red',\n                  'Blue'\n                ],\n                fill: true\n              }\n            ]\n          },\n          options: {\n            legend: {\n              display: true\n            },\n            scales: {\n              xAxes: [{\n                display: true\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n      });\n    }\n  }\n","<br><br>\n<div class=\"chart-container\" \n  style=\"position: relative; width:50vw\">    \n  <canvas id=\"canvas\"></canvas>    \n</div> ","import { Routes, RouterModule } from '@angular/router';\n\nimport { CoursesComponent } from './courses.component';\n\nimport { NgModule } from '@angular/core';\nimport { MyCoursesComponent } from './pages/my-courses/my-courses.component';\nimport { CourseDetailsComponent } from './pages/course-details/course-details.component';\nimport { CoursePreviewComponent } from './components/course-preview/course-preview.component';\n\nconst routes: Routes = [\n    {\n      path: '',\n      children: [\n        { path: '', component: CoursesComponent }\n      ]\n    },\n    {\n      path: 'preview',\n      children: [\n        { path: '', component: MyCoursesComponent },\n        { path: ':id', component: CourseDetailsComponent }\n      ]\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CoursesRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class CoursesService {\n\n  constructor(private backendService: BackendService) { }\n\n  deleteAllCourses(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Admin/DeleteAllCourses', null, true);\n  }\n  getCoursesPreview(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Courses', null, false);\n  }\n  getCoursesByUserId(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Courses/ByUserId', null, true);\n  }\n  getCourseById(id: string): Observable<any> {\n    return this.backendService.backendRequest('get', 'Courses/' + id, null, false);\n  }\n  getCoursesWithEnrolledUserId(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Courses/WithUserId', null, true);\n  }\n  getCourseProgress(courseId: string): Observable<any> {\n    return this.backendService.backendRequest('get', 'Courses/Progress/' + courseId, null, true);\n  }\n  createCourse(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Courses/Create', data, true);\n  }\n  updateCourse(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Courses/Update', data, true);\n  }\n  updateCoursePicture(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Courses/UpdateCoursePicture', data, true);\n  }\n  deleteCourse(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Courses/Delete', data, true);\n  }\n}\n","export class CoursePreviewModel {\n\n    Id: string;\n    Name: string;\n    Description: string;\n    Teachers: Array<string>;\n    StartDate: Date;\n    EndDate: Date;\n    ModifiedOn: Date;\n    IsActive: boolean;\n    IsElectable: boolean;\n    Image: string;\n    EnrolledStudents: number;\n    EnrolledUserId: string;\n\n    constructor(\n        id?: string,\n        name?: string,\n        description?: string,\n        teachers?: Array<string>,\n        startDate?: Date,\n        endDate?: Date,\n        modifiedOn?: Date,\n        isActive?: boolean,\n        isElectable?: boolean,\n        image?: string,\n        enrolledStudents?: number,\n        enrolledUserId?: string\n    ) {\n        this.Id = id;\n        this.Name = name;\n        this.Description = description;\n        this.Teachers = teachers;\n        this.StartDate = startDate;\n        this.EndDate = endDate;\n        this.ModifiedOn = modifiedOn;\n        this.IsActive = isActive;\n        this.IsElectable = isElectable;\n        this.Image = image;\n        this.EnrolledStudents = enrolledStudents;\n        this.EnrolledUserId = enrolledUserId;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n// import { TermsComponent } from 'src/app/@shared/components/terms/terms.component';\n// import { PrivacyComponent } from 'src/app/@shared/components/privacy/privacy.component';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n constructor(private dialog: MatDialog) { }\n\n  ngOnInit() {\n  }\n  \n  getPrivacy() {\n    // const $dialogRef =\n    // this.dialog.open(\n    //   PrivacyComponent,\n    //   {  width: '80vw', maxHeight: '100vh'}\n    // );\n    // $dialogRef.afterClosed().subscribe();\n  }\n  getTerms() {\n    // const $dialogRef =\n    // this.dialog.open(\n    //   TermsComponent,\n    //   {  width: '80vw', maxHeight: '100vh'}\n    // );\n    // $dialogRef.afterClosed().subscribe();\n  }\n}\n","<footer>\n    <div class=\"card card-image\">\n      <div class=\"text-center\">\n          <div class=\"py-5\">\n              <br>\n              <h2 id=\"all-rights\">\n                  Developed by (BG) Team &copy; \n                  <br>               \n                  <span id=\"innovations\">Seeing innovations since 2015</span>\n              </h2>\n              <h4>\n                All rights reserved!\n              </h4>\n              <h2 class=\"handyClock\"><input type=\"text\" id=\"clock\"></h2>\n              <br>\n              <div class=\"links\">\n                  <a href=\"https://www.facebook.com/baiganio.azurewebsites.net/\" target=\"_blank\">\n                      <img src=\"../assets/images/social-icons/facebook.ico\" alt=\"Facebook\" title=\"Facebook\">\n                  </a>\n                  <a href=\"https://github.com/BaiGanio\" target=\"_blank\">\n                      <img src=\"../assets//images/social-icons/octo.png\" alt=\"GitHub\" title=\"Github\">\n                  </a>\n                  <a href=\"https://www.youtube.com/channel/UCczegwwjd8YyeophFBIJ4EA?view_as=subscriber\" target=\"_blank\">\n                      <img src=\"../assets/images/social-icons/youtube.png\" alt=\"YouTube\" title=\"YouTube\">\n                  </a>\n              </div>\n              <br><br>\n              <li class=\"innerLinks\">\n                  <a (click)=\"getPrivacy()\">Privacy Policy</a>\n              </li>\n              <li class=\"innerLinks\" >\n                  <a (click)=\"getTerms()\">Terms of Use</a>\n              </li>\n            <br>\n          </div>\n      </div>\n    </div>\n  </footer>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  template:\n  `\n  <div class=\"content\">\n    <div class=\"row\">\n      <div class=\"col-xs col-center text-center\">\n        <!-- <h1 class=\"Guildof\">File not found</h1> -->\n        <img src=\"../assets/images/status-codes/404.ico\"  alt=\"Picture from my collection.\" />\n        <h1>\n          Ooops... \n          <span id=\"errorMessage\">\n          Page not found on the Server!\n          </span>\n        </h1>\n        <button mat-button color=\"primary\" routerLink='/home'> Back To Home</button>\n      </div>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n  constructor() { }\n  ngOnInit() { }\n}\n","import { Component, OnInit, DoCheck, AfterViewInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { SubscriptionPreviewModel } from './models/subscription-preview-model.module';\nimport { SubscriptionService } from 'src/app/@services/subscription.service';\nimport { UserDataService } from 'src/app/@services/user-data.service';\nimport { AuthService } from 'src/app/@services/auth.service';\nimport { ErrorHandlerService } from 'src/app/@services/error-handler.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n    selector: 'app-subscriptions',\n    templateUrl: 'subscriptions.component.html',\n    styleUrls: ['subscriptions.component.scss']\n})\n\nexport class SubscriptionsComponent implements OnInit {\n    subscriptions = new Array<SubscriptionPreviewModel>();\n    userId = '';\n    errorMsg = '';\n    subscriptionId = '';\n    successfulConfirmation = false;\n    failedConfirmation = false;\n    notificationRequest = false;\n    loading = false;\n    panelOpenState = false;\n    isUserConfirmingSubscription = false;\n    totalUsersInSubscr = 0;\n    storedUser: any;\n    haveConfirmedSubscription = false;\n\n    constructor(\n        // private errorHandlerService: ErrorHandlerService,\n        private authService: AuthService,\n        private router: Router,\n        private subscriptionsService: SubscriptionService,\n        private userDataService: UserDataService,\n        private route: ActivatedRoute,\n        private dialog: MatDialog,\n        private snackbar: MatSnackBar\n    ) {}\n\n    ngOnInit() {\n        // this.loading = true;\n        // if (this.route.snapshot.params.token) {\n        //     this.checkRouteParameters();\n        // }\n        // if (this.authService.isAuthenticated()) {\n        //     this.loading = true;\n        //     this.storedUser = this.userDataService.getUserData();\n        //     if (this.storedUser.id === undefined) {\n        //         this.storedUserInit();\n        //     }\n        // }\n        // this.subscriptionsInit();\n    }\n\n    private subscriptionsInit() {\n        this.subscriptionsService.getAllSubscriptions().subscribe(response => {\n            console.log(response.body);\n            response.body.forEach(element => {\n                const s = {\n                    Id: element.id,\n                    Type: element.type,\n                    Description: element.description,\n                    IsActive: element.isActive,\n                    Image: element.image,\n                    TotalSubscribers: element.totalSubscribers,\n                    ConfirmedSubscribers: element.confirmedSubscribers,\n                    PendingSubscribers: element.pendingSubscribers,\n                    CancelledSubscribers: element.cancelledSubscribers,\n                    CreatedOn: element.createdOn,\n                    ModifiedOn: element.modifiedOn\n                };\n                this.subscriptions.push(s as SubscriptionPreviewModel);\n            });\n        }, error => {\n          //  this.errorHandlerService.handleRequestError(error);\n            this.loading = false;\n        }, () => { this.loading = false; });\n    }\n\n    private storedUserInit() {\n        this.userDataService.getUserByToken().subscribe(\n            response => {\n                const u = {\n                    Id: response.body.id,\n                    Username: response.body.username,\n                    Subscriptions: response.body.subscriptions,\n                    Roles: response.body.roles\n                };\n                // this.storedUser = u as UserViewModel;\n                this.userDataService.setUserData(this.storedUser);\n            },\n            error => {\n             //   this.errorHandlerService.handleRequestError('myahah' + error);\n            }, () => { this.loading = false; }\n        );\n    }\n\n    goToMySubscriptions() {\n        this.router.navigate(['/subscriptions/preview']);\n    }\n\n    sendRequest(id: string) {\n        this.loading = true;\n        console.log(id);\n        this.subscriptionsService.sendRequestForSub({ Id: id })\n            .subscribe(\n                response => {\n                    this.loading = false;\n                    this.notificationRequest = true;\n                },\n                error => {\n                    this.loading = false;\n                    //this.errorHandlerService.handleRequestError(error);\n                },\n                () => {\n                    this.subscriptions = new Array<any>();\n                    this.storedUserInit();\n                    this.subscriptionsInit();\n                }\n            );\n    }\n\n    private checkRouteParameters(): void {\n        const token = (String)(this.route.snapshot.params.token).split('--');\n        if (token) {\n            this.confirmSubscription();\n        }\n    }\n\n    private confirmSubscription() {\n        const token = this.route.snapshot.params.token;\n        this.subscriptionsService.confirmRequestForSub(token).subscribe(\n            () => {\n                this.isUserConfirmingSubscription = true;\n                this.loading = false;\n            },\n            err => {\n                this.loading = false;\n                this.failedConfirmation = true;\n              //  this.errorHandlerService.handleRequestError(err);\n            }\n        );\n    }\n\n    getSubscriptionPreview(subscriptionId: string) {\n        let subscription: SubscriptionPreviewModel;\n        this.subscriptions.forEach((element) => {\n            if (element.Id === subscriptionId) {\n                subscription =\n                    new SubscriptionPreviewModel(\n                        element.Id,\n                        element.Type,\n                        element.Description,\n                        element.IsActive,\n                        element.Image,\n                        element.TotalSubscribers,\n                        element.ConfirmedSubscribers,\n                        element.PendingSubscribers,\n                        element.CancelledSubscribers,\n                        element.CreatedOn,\n                        element.ModifiedOn\n                    );\n            }\n        });\n        // const $dialogRef =\n        //     this.dialog.open(\n        //         SubscriptionPreviewComponent,\n        //         { data: { model: subscription } }\n        //     );\n        // $dialogRef.afterClosed().subscribe();\n    }\n\n    isConfirmed(sId: string): boolean {\n        let result = false;\n        this.storedUser = this.userDataService.getUserData();\n        if (this.storedUser.Id) {\n            this.storedUser.Subscriptions.forEach(element => {\n                if (sId === element.subscription_id && element.status === 'Confirmed') {\n                    this.haveConfirmedSubscription = true;\n                    result = true;\n                    return true;\n                }\n            });\n        }\n        return result;\n    }\n\n    isWaitingForConfirmation(sId: string): boolean {\n        let result = false;\n        this.storedUser = this.userDataService.getUserData();\n        if (this.storedUser.Id) {\n            this.storedUser.Subscriptions.forEach(element => {\n                if (sId === element.subscription_id && element.status === 'WaitingForConfirmation') {\n                    result = true;\n                    return true;\n                }\n            });\n        }\n        return result;\n    }\n\n    getTotalSubscribers(sId: string): number {\n        let result = 0;\n        this.subscriptions.forEach(element => {\n            if (sId === element.Id) {\n                result =  element.TotalSubscribers;\n                return result;\n            }\n        });\n        return result;\n    }\n\n    dismiss() {\n        this.isUserConfirmingSubscription = false;\n        this.notificationRequest = false;\n    }\n}\n","<h1 class=\"\" style=\"text-align:center\">Subscriptions\n  <span *ngIf='haveConfirmedSubscription === true'> / \n    <button style=\"background-color: cornflowerblue; color:white; cursor:pointer;\" (click)='goToMySubscriptions()'>Preview</button>\n  </span>\n</h1>\n<hr style=\"width: 60%; color: blue;\">  \n<div class=\"content text-center\">\n  <h2 *ngIf='loading'>Please wait! Fetching data...</h2>\n\n  <div class=\"dim\" *ngIf='notificationRequest'>\n    <span class=\"msg\">\n      <h2>\n        Your subscription request is on the fly...\n        <br>\n        Please check your email for confirmation link!\n        <br>\n      </h2>\n      <br>\n      <button\n        class=\"btn btn-outline-info\"\n        (click) = dismiss()\n        style=\"width:20%\">\n        <b>Dismiss</b>\n      </button>\n    </span>\n  </div>\n  <div class=\"dim\" *ngIf=\"isUserConfirmingSubscription\">\n    <span class=\"msg\">\n      <h2>\n        Thank you for confirming your subscription.\n        <br>\n        You are now subscribed!\n      </h2>\n      <br>\n      <button\n        class=\"btn btn-outline-info\"\n        (click) = dismiss()\n        style=\"width:20%\">\n        <b>Dismiss</b>\n      </button>\n    </span>\n  </div>\n</div>\n<div class='row text-center'>\n  <div id=\"exception-list\" class=\"col-md-4\" *ngFor='let s of subscriptions;'>\n    <div class=\"card\" style=\"margin: 10px;\">\n      <div class=\"card-body\">\n        <h2 class=\"text-center\"> {{ s.Type }} </h2>\n        <hr style=\"color: black;\">\n        <div class=\"view view-cascade overlay\">\n\n          <img src='{{ s.Image }}' alt=\"Sample image\" class=\"img-thumbnail img-fluid\">\n          <hr style=\"width: 80%; color: blue;\">\n          <p *ngIf='s.IsActive;' id=\"subscrStatus\">Active : {{s.IsActive}}</p>\n          <p *ngIf='!s.IsActive;' id=\"subscrStatus\">Subscription in development!</p>\n         \n          <div *ngIf='s.IsActive'>\n            <p *ngIf='isConfirmed(s.Id) === false && isWaitingForConfirmation(s.Id) === false'>  \n              <button                                     \n              class=\"btn btn-outline-success\" \n              (click)='sendRequest(s.Id)'>\n              Send request 4 subscription\n            </button>\n            </p>\n            <p style=\"color: blue;\" *ngIf='isWaitingForConfirmation(s.Id)'>Waiting for confirmation!</p>            \n          </div>\n          <button mat-raised-button color=\"primary\" (click)=getSubscriptionPreview(s.Id)>\n            <i class=\"fas fa-search\"></i>\n          </button>\n        \n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- <ngx-loading [show]=\"loading\" [config]=\"{ backdropBorderRadius: '14px', fullScreenBackdrop: true }\"></ngx-loading> -->\n","export class SubscriptionPreviewModel {\n    Id: string;\n    Type: string;\n    IsActive: boolean;\n    Image: string;\n    Description: string;\n    TotalSubscribers: number;\n    ConfirmedSubscribers: number;\n    PendingSubscribers: number;\n    CancelledSubscribers: number;\n    CreatedOn: Date;\n    ModifiedOn: Date;\n\n    constructor(\n        id?: string,\n        type?: string,\n        description?: string,\n        isActive?: boolean,\n        image?: string,\n        totalSubscribers?: number,\n        confirmedSubscribers?: number,\n        pendingSubscribers?: number,\n        cancelledSubscribers?: number,\n        createdOn?: Date,\n        modifiedOn?: Date\n    ) {\n        this.Id = id;\n        this.Type = type;\n        this.IsActive = isActive;\n        this.Image = image;\n        this.TotalSubscribers = totalSubscribers;\n        this.ConfirmedSubscribers = confirmedSubscribers;\n        this.PendingSubscribers = pendingSubscribers;\n        this.CancelledSubscribers = cancelledSubscribers;\n        this.Description = description;\n        this.CreatedOn = createdOn;\n        this.ModifiedOn = modifiedOn;\n    }\n}\n","import { Component, OnInit, Inject } from '@angular/core';\n// import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n// import { BaseDialogData } from '../../interfaces/base-dialog.interface';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-terms',\n  templateUrl: './terms.component.html',\n  styleUrls: ['./terms.component.scss']\n})\nexport class TermsComponent implements OnInit {\n\ntitle: string;\n  constructor(\n    // public dialogRef: MatDialogRef<TermsComponent>,\n    // @Inject(MAT_DIALOG_DATA) public data: BaseDialogData,\n    private formBuilder: FormBuilder\n  ) { }\n\n  ngOnInit() {\n    // this.user = this.data.model;\n    // this.title = this.data.title;\n  }\n\n  onRejectClick() {\n    // this.dialogRef.close();\n  }\n\n}\n","<div class=\"animated fadeInRightBig\">\n  <mdb-card>\n      <mdb-card-body>\n        <mdb-card-title >\n              <h1 id=\"title\">Terms Of Use</h1>\n              <!-- <h2 id=\"Second-Title\"> Use this page to detail your site's terms of use.</h2> -->\n        </mdb-card-title>\n        <mdb-card-text >\n          <p class=\"text\">Please read these <b>Terms</b> carefully before start using BaiGanio website operated by (BG) Team. \n              Your access to and use of the Service is conditioned on your acceptance of and compliance with these Terms. These Terms apply to all visitors, users and others who access or use the Service. \n              <br />\n              <br />\n              <b>\n                  By accessing or using the Service you agree to be bound by these Terms. If you disagree\n                  with any part of the terms then you may not access the Service.\n              </b>\n          </p>\n        </mdb-card-text>\n        <mdb-card-title>\n        <h3 class=\"Third-Title\">Changes</h3> \n        </mdb-card-title>\n        <mdb-card-text >\n          <p class=\"text\">  We reserve the right, at our sole discretion, to modify or replace these Terms at any time. If a\n                revision is material we will try to provide at least 30 days' notice prior to any new terms\n                taking effect. What constitutes a material change will be determined at our sole discretion.\n          </p>\n        </mdb-card-text>\n        <mdb-card-title>\n        <h3 class=\"Third-Title\">Contact Us</h3>\n        </mdb-card-title>\n        <mdb-card-text>\n          <p class=\"text\">If you have any questions about these Terms, please contact us.\n          </p>\n        </mdb-card-text>\n      </mdb-card-body>\n  </mdb-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-doughnut',\n  templateUrl: './doughnut.component.html'\n})\nexport class DoughnutComponent implements OnInit {\n  url = 'https://localhost:44344/api/fake/Chart/';\n  data: any;\n  Player = [];\n  Run = [];\n  doughnutchart: any;\n    constructor(private httpClient: HttpClient) { }\n    ngOnInit() {\n      this.httpClient.get(this.url).subscribe((result: any) => {\n        result.forEach(x => {\n          this.Player.push(x.playerName);\n          this.Run.push(x.run);\n        });\n        this.doughnutchart = new Chart('canvas', {\n          type: 'doughnut',\n          data: {\n            labels: this.Player,\n            datasets: [\n              {\n                data: this.Run,\n                borderColor: '#3cba9f',\n                backgroundColor: [\n                  '#3cb371',\n                  '#0000FF',\n                  '#9966FF',\n                  '#4C4CFF',\n                  '#00FFFF',\n                  '#f990a7',\n                  '#aad2ed',\n                  '#FF00FF',\n                  'Blue',\n                  'Red',\n                  'Blue'\n                ],\n                fill: true\n              }\n            ]\n          },\n          options: {\n            legend: {\n              display: true\n            },\n            scales: {\n              xAxes: [{\n                display: false\n              }],\n              yAxes: [{\n                display: true\n              }],\n            }\n          }\n        });\n      });\n    }\n  }\n","<div class=\"chart-container\" \n  style=\"position: relative; width:30vw\">    \n  <canvas id=\"canvas\"></canvas>    \n</div> ","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Node for to-do item\n */\nexport class TodoItemNode {\n    children: TodoItemNode[];\n    item: string;\n  }\n\n  /** Flat to-do item node with expandable and level information */\nexport class TodoItemFlatNode {\n    item: string;\n    level: number;\n    expandable: boolean;\n  }\n\n  /**\n   * The Json object for to-do list data.\n   */\nconst TREE_DATA = {\n  Questions:{\n    Answers: [],\n    Options: []\n  }\n  //Test_Creation: {  \n    //   Type_Of_Test : {\n    //     Unknown:null,\n    //     Intermediate1:null,\n    //     Intermediate2:null,\n    //     Intermediate1Workbench:null,\n    //     Intermediate2Workbench:null,\n    //     Official:null\n    //   },\n    //   Questions:{\n    //     Answers: []\n    //   }\n    // }\n    // Reminders: [\n    //   'Cook dinner',\n    //   'Read the Material Design spec',\n    //   'Upgrade Application to Angular'\n    // ]\n  };\n\n  /**\n   * Checklist database, it can build a tree structured Json object.\n   * Each node in Json object represents a to-do item or a category.\n   * If a node is a category, it has children items and new items can be added under the category.\n   */\n@Injectable()\n  export class ChecklistDatabase {\n    dataChange = new BehaviorSubject<TodoItemNode[]>([]);\n\n    get data(): TodoItemNode[] { return this.dataChange.value; }\n\n    constructor() {\n      this.initialize();\n    }\n\n    initialize() {\n      // Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\n      //     file node as children.\n      const data = this.buildFileTree(TREE_DATA, 0);\n\n      // Notify the change.\n      this.dataChange.next(data);\n    }\n\n    /**\n     * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n     * The return value is the list of `TodoItemNode`.\n     */\n    buildFileTree(obj: {[key: string]: any}, level: number): TodoItemNode[] {\n      return Object.keys(obj).reduce<TodoItemNode[]>((accumulator, key) => {\n        const value = obj[key];\n        const node = new TodoItemNode();\n        node.item = key;\n\n        if (value != null) {\n          if (typeof value === 'object') {\n            node.children = this.buildFileTree(value, level + 1);\n          } else {\n            node.item = value;\n          }\n        }\n\n        return accumulator.concat(node);\n      }, []);\n    }\n\n    /** Add an item to to-do list */\n    insertItem(parent: TodoItemNode, name: string) {\n      if (parent.children) {\n        parent.children.push({item: name} as TodoItemNode);\n        this.dataChange.next(this.data);\n      }\n    }\n\n    updateItem(node: TodoItemNode, name: string) {\n      node.item = name + 'm100';\n      this.dataChange.next(this.data);\n    }\n  }\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { BackendService } from './backend.service';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class StudentService {\n\n  constructor(private backendService: BackendService) { }\n\n  letMeIn(data): Observable<any> {\n    return this.backendService.backendRequest('post', 'Students/LetMeIn', data, true);\n  }\n\n  getStudentLogins(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Students/GetStudentLogins', null, true);\n  }\n\n  getStudentProgresses(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Students/GetStudentProgresses', null, true);\n  }\n\n  getStudent(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Students/GetByUserId', null, true);\n  }\n\n  getCoursesAndScores(): Observable<any> {\n    return this.backendService.backendRequest('get', 'Students/GetCoursesAndScores', null, true);\n  }\n\n  updateStudent(data): Observable<any> {\n    return this.backendService.backendRequest('post', 'Students/Update', data, true);\n  }\n  enroll4Course(data: any): Observable<any> {\n    return this.backendService.backendRequest('post', 'Students/Enroll4Course', data, true);\n  }\n\n  getChartData() {\n    return this.backendService.backendRequest('get', 'Fake/Chart');\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BlogComponent } from './@pages/blog/blog.component';\nimport { HomeComponent } from './@pages/home/home.component';\nimport { LoginComponent } from './@pages/login/login.component';\nimport { RegisterComponent } from './@pages/register/register.component';\nimport { AccessDeniedComponent } from './@shared/pages/access-denied/access-denied.component';\nimport { ErrorComponent } from './@shared/pages/error/error.component';\nimport { NotFoundComponent } from './@shared/pages/not-found/not-found.component';\nimport { ServerAlertComponent } from './@shared/pages/server-alert/server-alert.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/home',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    component: HomeComponent\n  },\n  {\n      path: 'blog',\n      component: BlogComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'register',\n    component: RegisterComponent\n  },\n  {\n    path: 'subscriptions',\n    loadChildren : () => import('./@modules/subscriptions/subscriptions.module').then(m => m.SubscriptionsModule)\n  },\n  {\n    path: 'courses',\n    loadChildren : () => import('./@modules/courses/courses.module').then(m => m.CoursesModule)\n  },\n  {\n    path: 'server-alert',\n    component: ServerAlertComponent\n  },\n  {\n    path: 'error',\n    component: ErrorComponent\n  },\n  {\n    path: '403',\n    component: AccessDeniedComponent\n  } ,\n  {\n    path: '**',\n    component: NotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BackendService } from './backend.service';\n\n@Injectable()\nexport class TeacherService {\n\n    constructor(private backendService: BackendService) { }\n\n    getTeachers(): Observable<any> {\n        return this.backendService.backendRequest('get', 'Teachers', null, true);\n    }\n\n    getTeacherById(teacherId: any): Observable<any> {\n        return this.backendService.backendRequest('get', 'Teachers/' + teacherId);\n    }\n\n    addTeacher2Course(data: any): Observable<any> {\n        return this.backendService.backendRequest('post', 'Teachers/AddTeacherCourse', data, true);\n    }\n\n    voteForTeacher(data: any): Observable<any> {\n        return this.backendService.backendRequest('post', 'Students/Vote4Teacher', data, true);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    MatSidenavModule\n  ]\n})\nexport class AngularMaterialModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-server-alert',\n  template:\n  `\n  <div class=\"content\">\n  <div class=\"row\">\n    <div class=\"col-xs-12 col-center text-center\">\n      <h1>\n        Ooops... ERROR 503!\n        <br>\n        <span id=\"errorMessage\">Our Servers are temporary unavailable!</span> \n        </h1>\n        <br>\n        <button mat-button color=\"primary\" routerLink='/home'> Back To Home</button>\n      </div>\n    </div>\n  </div>\n  `,\n  styleUrls: ['./server-alert.component.scss']\n})\nexport class ServerAlertComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Chart } from 'chart.js';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-barchart',\n  templateUrl: './barchart.component.html'\n})\nexport class BarchartComponent implements OnInit {\n  url = 'https://localhost:44344/api/fake/Chart/';\n  data: any;\n  Player = [];\n  Run = [];\n  barchart: any;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.http.get(this.url).subscribe((result: any) => {\n      result.forEach(x => {\n        this.Player.push(x.playerName);\n        this.Run.push(x.run);\n      });\n      this.barchart = new Chart('canvas', {\n        type: 'bar',\n        data: {\n          labels: this.Player,\n          datasets: [\n            {\n              data: this.Run,\n              borderColor: '#3cba9f',\n              backgroundColor: [\n                '#3cb371',\n                '#0000FF',\n                '#9966FF',\n                '#4C4CFF',\n                '#00FFFF',\n                '#f990a7',\n                '#aad2ed',\n                '#FF00FF',\n                'Blue',\n                'Red',\n                'Blue'  \n              ],\n              fill: true\n            }\n          ]\n        },\n        options: {\n          legend: {\n            display: false\n          },\n          scales: {\n            xAxes: [{\n              display: true\n            }],\n            yAxes: [{\n              display: true\n            }],\n          }\n        }\n      });\n    });\n  }\n}","<br><br>\n<div class=\"chart-container\" \n  style=\"position: relative; width:50vw\">    \n  <canvas id=\"canvas\"></canvas>    \n</div> ","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}